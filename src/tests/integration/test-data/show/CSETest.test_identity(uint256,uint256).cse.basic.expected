
┌─ 1 (root, init)
│   k: #execute ~> CONTINUATION:K
│   pc: 0
│   callDepth: 0
│   statusCode: STATUSCODE:StatusCode
│   src: test/nested/SimpleNested.t.sol:7:11
│   method: test%CSETest.setUp()
│
│  (1182 steps)
├─ 14 (terminal)
│   k: #halt ~> CONTINUATION:K
│   pc: 221
│   callDepth: 0
│   statusCode: EVMC_SUCCESS
│   src: lib/forge-std/src/StdInvariant.sol:89:91
│   method: test%CSETest.setUp()
│
│  (1 step)
├─ 15
│   k: #execute ~> CONTINUATION:K
│   pc: 0
│   callDepth: 0
│   statusCode: STATUSCODE:StatusCode
│   src: test/nested/SimpleNested.t.sol:7:11
│   method: test%CSETest.test_identity(uint256,uint256)
│
│  (373 steps)
├─ 17 (split)
│   k: JUMPI 2519 bool2Word ( pow64 <=Int KV0_x:Int ) ~> #pc [ JUMPI ] ~> #execute ~> C ...
│   pc: 2510
│   callDepth: 0
│   statusCode: STATUSCODE:StatusCode
│   method: test%CSETest.test_identity(uint256,uint256)
┃
┃ (branch)
┣━━┓ subst: .Subst
┃  ┃ constraint:
┃  ┃     pow64 <=Int KV0_x:Int
┃  │
┃  ├─ 18
┃  │   k: JUMPI 2519 bool2Word ( pow64 <=Int KV0_x:Int ) ~> #pc [ JUMPI ] ~> #execute ~> C ...
┃  │   pc: 2510
┃  │   callDepth: 0
┃  │   statusCode: STATUSCODE:StatusCode
┃  │   method: test%CSETest.test_identity(uint256,uint256)
┃  │
┃  │  (189 steps)
┃  ├─ 20
┃  │   k: STATICCALL 0 645326474426547203313410069153905908525362434349 128 36 128 0 ~> #p ...
┃  │   pc: 2578
┃  │   callDepth: 0
┃  │   statusCode: STATUSCODE:StatusCode
┃  │   method: test%CSETest.test_identity(uint256,uint256)
┃  │
┃  │  (1 step)
┃  ├─ 22
┃  │   k: #accessAccounts 645326474426547203313410069153905908525362434349 ~> #checkCall 7 ...
┃  │   pc: 2578
┃  │   callDepth: 0
┃  │   statusCode: STATUSCODE:StatusCode
┃  │   method: test%CSETest.test_identity(uint256,uint256)
┃  │
┃  │  (3 steps)
┃  └─ 24 (vacuous, leaf)
┃      k: #assume ( KV0_x:Int <Int pow64 ) ~> #cheatcode_return 128 0 ~> #pc [ STATICCALL  ...
┃      pc: 2578
┃      callDepth: 0
┃      statusCode: STATUSCODE:StatusCode
┃      method: test%CSETest.test_identity(uint256,uint256)
┃
┗━━┓ subst: .Subst
   ┃ constraint:
   ┃     KV0_x:Int <Int pow64
   │
   ├─ 19
   │   k: JUMPI 2519 bool2Word ( pow64 <=Int KV0_x:Int ) ~> #pc [ JUMPI ] ~> #execute ~> C ...
   │   pc: 2510
   │   callDepth: 0
   │   statusCode: STATUSCODE:StatusCode
   │   method: test%CSETest.test_identity(uint256,uint256)
   │
   │  (210 steps)
   ├─ 21
   │   k: STATICCALL 0 645326474426547203313410069153905908525362434349 128 36 128 0 ~> #p ...
   │   pc: 2578
   │   callDepth: 0
   │   statusCode: STATUSCODE:StatusCode
   │   method: test%CSETest.test_identity(uint256,uint256)
   │
   │  (1 step)
   ├─ 23
   │   k: #accessAccounts 645326474426547203313410069153905908525362434349 ~> #checkCall 7 ...
   │   pc: 2578
   │   callDepth: 0
   │   statusCode: STATUSCODE:StatusCode
   │   method: test%CSETest.test_identity(uint256,uint256)
   │
   │  (202 steps)
   ├─ 25
   │   k: STATICCALL 0 491460923342184218035706888008750043977755113263 128 36 128 32 ~> # ...
   │   pc: 2658
   │   callDepth: 0
   │   statusCode: STATUSCODE:StatusCode
   │   method: test%CSETest.test_identity(uint256,uint256)
   │
   │  (1 step)
   ├─ 26
   │   k: #accessAccounts 491460923342184218035706888008750043977755113263 ~> #checkCall 7 ...
   │   pc: 2658
   │   callDepth: 0
   │   statusCode: STATUSCODE:StatusCode
   │   method: test%CSETest.test_identity(uint256,uint256)
   │
   │  (18 steps)
   ├─ 27
   │   k: #precompiled? ( 491460923342184218035706888008750043977755113263 , SHANGHAI ) ~> ...
   │   pc: 0
   │   callDepth: 1
   │   statusCode: STATUSCODE:StatusCode
   │   src: test/nested/SimpleNested.t.sol:7:11
   │   method: src%cse%Identity.applyOp(uint256)
   │
   │  (1 step)
   ├─ 28
   │   k: #execute ~> #return 128 32 ~> #pc [ STATICCALL ] ~> #execute ~> CONTINUATION:K
   │   pc: 0
   │   callDepth: 1
   │   statusCode: STATUSCODE:StatusCode
   │   src: test/nested/SimpleNested.t.sol:7:11
   │   method: src%cse%Identity.applyOp(uint256)
   │
   │  (3 steps)
   ├─ 29 (split)
   │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   │   pc: 148
   │   callDepth: 1
   │   statusCode: STATUSCODE:StatusCode
   │   src: test/nested/SimpleNested.t.sol:7:11
   │   method: src%cse%Identity.applyOp(uint256)
   ┃
   ┃ (branch)
   ┣━━┓ subst: .Subst
   ┃  ┃ constraint: true
   ┃  │
   ┃  ├─ 30 (split)
   ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  │   pc: 148
   ┃  │   callDepth: 1
   ┃  │   statusCode: STATUSCODE:StatusCode
   ┃  │   src: test/nested/SimpleNested.t.sol:7:11
   ┃  │   method: src%cse%Identity.applyOp(uint256)
   ┃  ┃
   ┃  ┃ (branch)
   ┃  ┣━━┓ subst: .Subst
   ┃  ┃  ┃ constraint: true
   ┃  ┃  │
   ┃  ┃  ├─ 32 (split)
   ┃  ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃  │   pc: 148
   ┃  ┃  │   callDepth: 1
   ┃  ┃  │   statusCode: STATUSCODE:StatusCode
   ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃  │   method: src%cse%Identity.applyOp(uint256)
   ┃  ┃  ┃
   ┃  ┃  ┃ (branch)
   ┃  ┃  ┣━━┓ subst: .Subst
   ┃  ┃  ┃  ┃ constraint: true
   ┃  ┃  ┃  │
   ┃  ┃  ┃  ├─ 36 (split)
   ┃  ┃  ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃  ┃  │   pc: 148
   ┃  ┃  ┃  │   callDepth: 1
   ┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
   ┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃  ┃  │   method: src%cse%Identity.applyOp(uint256)
   ┃  ┃  ┃  ┃
   ┃  ┃  ┃  ┃ (branch)
   ┃  ┃  ┃  ┣━━┓ subst: .Subst
   ┃  ┃  ┃  ┃  ┃ constraint: true
   ┃  ┃  ┃  ┃  │
   ┃  ┃  ┃  ┃  ├─ 44 (split)
   ┃  ┃  ┃  ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃  ┃  ┃  │   pc: 148
   ┃  ┃  ┃  ┃  │   callDepth: 1
   ┃  ┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
   ┃  ┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃  ┃  ┃  │   method: src%cse%Identity.applyOp(uint256)
   ┃  ┃  ┃  ┃  ┃
   ┃  ┃  ┃  ┃  ┃ (branch)
   ┃  ┃  ┃  ┃  ┣━━┓ subst: .Subst
   ┃  ┃  ┃  ┃  ┃  ┃ constraint: true
   ┃  ┃  ┃  ┃  ┃  │
   ┃  ┃  ┃  ┃  ┃  ├─ 60 (split)
   ┃  ┃  ┃  ┃  ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃  ┃  ┃  ┃  │   pc: 148
   ┃  ┃  ┃  ┃  ┃  │   callDepth: 1
   ┃  ┃  ┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
   ┃  ┃  ┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃  ┃  ┃  ┃  │   method: src%cse%Identity.applyOp(uint256)
   ┃  ┃  ┃  ┃  ┃  ┃
   ┃  ┃  ┃  ┃  ┃  ┃ (branch)
   ┃  ┃  ┃  ┃  ┃  ┣━━┓ subst: .Subst
   ┃  ┃  ┃  ┃  ┃  ┃  ┃ constraint: true
   ┃  ┃  ┃  ┃  ┃  ┃  │
   ┃  ┃  ┃  ┃  ┃  ┃  ├─ 92 (split)
   ┃  ┃  ┃  ┃  ┃  ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃  ┃  ┃  ┃  ┃  │   pc: 148
   ┃  ┃  ┃  ┃  ┃  ┃  │   callDepth: 1
   ┃  ┃  ┃  ┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
   ┃  ┃  ┃  ┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃  ┃  ┃  ┃  ┃  │   method: src%cse%Identity.applyOp(uint256)
   ┃  ┃  ┃  ┃  ┃  ┃  ┃
   ┃  ┃  ┃  ┃  ┃  ┃  ┃ (branch)
   ┃  ┃  ┃  ┃  ┃  ┃  ┣━━┓ subst: .Subst
   ┃  ┃  ┃  ┃  ┃  ┃  ┃  ┃ constraint: true
   ┃  ┃  ┃  ┃  ┃  ┃  ┃  │
   ┃  ┃  ┃  ┃  ┃  ┃  ┃  └─ 156 (leaf, pending)
   ┃  ┃  ┃  ┃  ┃  ┃  ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃  ┃  ┃  ┃  ┃  ┃      pc: 148
   ┃  ┃  ┃  ┃  ┃  ┃  ┃      callDepth: 1
   ┃  ┃  ┃  ┃  ┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
   ┃  ┃  ┃  ┃  ┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃  ┃  ┃  ┃  ┃  ┃      method: src%cse%Identity.applyOp(uint256)
   ┃  ┃  ┃  ┃  ┃  ┃  ┃
   ┃  ┃  ┃  ┃  ┃  ┃  ┗━━┓ subst: .Subst
   ┃  ┃  ┃  ┃  ┃  ┃     ┃ constraint: true
   ┃  ┃  ┃  ┃  ┃  ┃     │
   ┃  ┃  ┃  ┃  ┃  ┃     └─ 157 (leaf, pending)
   ┃  ┃  ┃  ┃  ┃  ┃         k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃  ┃  ┃  ┃  ┃         pc: 148
   ┃  ┃  ┃  ┃  ┃  ┃         callDepth: 1
   ┃  ┃  ┃  ┃  ┃  ┃         statusCode: STATUSCODE:StatusCode
   ┃  ┃  ┃  ┃  ┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃  ┃  ┃  ┃  ┃         method: src%cse%Identity.applyOp(uint256)
   ┃  ┃  ┃  ┃  ┃  ┃
   ┃  ┃  ┃  ┃  ┃  ┗━━┓ subst: .Subst
   ┃  ┃  ┃  ┃  ┃     ┃ constraint: true
   ┃  ┃  ┃  ┃  ┃     │
   ┃  ┃  ┃  ┃  ┃     ├─ 93 (split)
   ┃  ┃  ┃  ┃  ┃     │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃  ┃  ┃  ┃     │   pc: 148
   ┃  ┃  ┃  ┃  ┃     │   callDepth: 1
   ┃  ┃  ┃  ┃  ┃     │   statusCode: STATUSCODE:StatusCode
   ┃  ┃  ┃  ┃  ┃     │   src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃  ┃  ┃  ┃     │   method: src%cse%Identity.applyOp(uint256)
   ┃  ┃  ┃  ┃  ┃     ┃
   ┃  ┃  ┃  ┃  ┃     ┃ (branch)
   ┃  ┃  ┃  ┃  ┃     ┣━━┓ subst: .Subst
   ┃  ┃  ┃  ┃  ┃     ┃  ┃ constraint: true
   ┃  ┃  ┃  ┃  ┃     ┃  │
   ┃  ┃  ┃  ┃  ┃     ┃  └─ 158 (leaf, pending)
   ┃  ┃  ┃  ┃  ┃     ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃  ┃  ┃  ┃     ┃      pc: 148
   ┃  ┃  ┃  ┃  ┃     ┃      callDepth: 1
   ┃  ┃  ┃  ┃  ┃     ┃      statusCode: STATUSCODE:StatusCode
   ┃  ┃  ┃  ┃  ┃     ┃      src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃  ┃  ┃  ┃     ┃      method: src%cse%Identity.applyOp(uint256)
   ┃  ┃  ┃  ┃  ┃     ┃
   ┃  ┃  ┃  ┃  ┃     ┗━━┓ subst: .Subst
   ┃  ┃  ┃  ┃  ┃        ┃ constraint: true
   ┃  ┃  ┃  ┃  ┃        │
   ┃  ┃  ┃  ┃  ┃        └─ 159 (leaf, pending)
   ┃  ┃  ┃  ┃  ┃            k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃  ┃  ┃  ┃            pc: 148
   ┃  ┃  ┃  ┃  ┃            callDepth: 1
   ┃  ┃  ┃  ┃  ┃            statusCode: STATUSCODE:StatusCode
   ┃  ┃  ┃  ┃  ┃            src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃  ┃  ┃  ┃            method: src%cse%Identity.applyOp(uint256)
   ┃  ┃  ┃  ┃  ┃
   ┃  ┃  ┃  ┃  ┗━━┓ subst: .Subst
   ┃  ┃  ┃  ┃     ┃ constraint: true
   ┃  ┃  ┃  ┃     │
   ┃  ┃  ┃  ┃     ├─ 61 (split)
   ┃  ┃  ┃  ┃     │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃  ┃  ┃     │   pc: 148
   ┃  ┃  ┃  ┃     │   callDepth: 1
   ┃  ┃  ┃  ┃     │   statusCode: STATUSCODE:StatusCode
   ┃  ┃  ┃  ┃     │   src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃  ┃  ┃     │   method: src%cse%Identity.applyOp(uint256)
   ┃  ┃  ┃  ┃     ┃
   ┃  ┃  ┃  ┃     ┃ (branch)
   ┃  ┃  ┃  ┃     ┣━━┓ subst: .Subst
   ┃  ┃  ┃  ┃     ┃  ┃ constraint: true
   ┃  ┃  ┃  ┃     ┃  │
   ┃  ┃  ┃  ┃     ┃  ├─ 94 (split)
   ┃  ┃  ┃  ┃     ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃  ┃  ┃     ┃  │   pc: 148
   ┃  ┃  ┃  ┃     ┃  │   callDepth: 1
   ┃  ┃  ┃  ┃     ┃  │   statusCode: STATUSCODE:StatusCode
   ┃  ┃  ┃  ┃     ┃  │   src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃  ┃  ┃     ┃  │   method: src%cse%Identity.applyOp(uint256)
   ┃  ┃  ┃  ┃     ┃  ┃
   ┃  ┃  ┃  ┃     ┃  ┃ (branch)
   ┃  ┃  ┃  ┃     ┃  ┣━━┓ subst: .Subst
   ┃  ┃  ┃  ┃     ┃  ┃  ┃ constraint: true
   ┃  ┃  ┃  ┃     ┃  ┃  │
   ┃  ┃  ┃  ┃     ┃  ┃  └─ 160 (leaf, pending)
   ┃  ┃  ┃  ┃     ┃  ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃  ┃  ┃     ┃  ┃      pc: 148
   ┃  ┃  ┃  ┃     ┃  ┃      callDepth: 1
   ┃  ┃  ┃  ┃     ┃  ┃      statusCode: STATUSCODE:StatusCode
   ┃  ┃  ┃  ┃     ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃  ┃  ┃     ┃  ┃      method: src%cse%Identity.applyOp(uint256)
   ┃  ┃  ┃  ┃     ┃  ┃
   ┃  ┃  ┃  ┃     ┃  ┗━━┓ subst: .Subst
   ┃  ┃  ┃  ┃     ┃     ┃ constraint: true
   ┃  ┃  ┃  ┃     ┃     │
   ┃  ┃  ┃  ┃     ┃     └─ 161 (leaf, pending)
   ┃  ┃  ┃  ┃     ┃         k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃  ┃  ┃     ┃         pc: 148
   ┃  ┃  ┃  ┃     ┃         callDepth: 1
   ┃  ┃  ┃  ┃     ┃         statusCode: STATUSCODE:StatusCode
   ┃  ┃  ┃  ┃     ┃         src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃  ┃  ┃     ┃         method: src%cse%Identity.applyOp(uint256)
   ┃  ┃  ┃  ┃     ┃
   ┃  ┃  ┃  ┃     ┗━━┓ subst: .Subst
   ┃  ┃  ┃  ┃        ┃ constraint: true
   ┃  ┃  ┃  ┃        │
   ┃  ┃  ┃  ┃        ├─ 95 (split)
   ┃  ┃  ┃  ┃        │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃  ┃  ┃        │   pc: 148
   ┃  ┃  ┃  ┃        │   callDepth: 1
   ┃  ┃  ┃  ┃        │   statusCode: STATUSCODE:StatusCode
   ┃  ┃  ┃  ┃        │   src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃  ┃  ┃        │   method: src%cse%Identity.applyOp(uint256)
   ┃  ┃  ┃  ┃        ┃
   ┃  ┃  ┃  ┃        ┃ (branch)
   ┃  ┃  ┃  ┃        ┣━━┓ subst: .Subst
   ┃  ┃  ┃  ┃        ┃  ┃ constraint: true
   ┃  ┃  ┃  ┃        ┃  │
   ┃  ┃  ┃  ┃        ┃  └─ 162 (leaf, pending)
   ┃  ┃  ┃  ┃        ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃  ┃  ┃        ┃      pc: 148
   ┃  ┃  ┃  ┃        ┃      callDepth: 1
   ┃  ┃  ┃  ┃        ┃      statusCode: STATUSCODE:StatusCode
   ┃  ┃  ┃  ┃        ┃      src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃  ┃  ┃        ┃      method: src%cse%Identity.applyOp(uint256)
   ┃  ┃  ┃  ┃        ┃
   ┃  ┃  ┃  ┃        ┗━━┓ subst: .Subst
   ┃  ┃  ┃  ┃           ┃ constraint: true
   ┃  ┃  ┃  ┃           │
   ┃  ┃  ┃  ┃           └─ 163 (leaf, pending)
   ┃  ┃  ┃  ┃               k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃  ┃  ┃               pc: 148
   ┃  ┃  ┃  ┃               callDepth: 1
   ┃  ┃  ┃  ┃               statusCode: STATUSCODE:StatusCode
   ┃  ┃  ┃  ┃               src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃  ┃  ┃               method: src%cse%Identity.applyOp(uint256)
   ┃  ┃  ┃  ┃
   ┃  ┃  ┃  ┗━━┓ subst: .Subst
   ┃  ┃  ┃     ┃ constraint: true
   ┃  ┃  ┃     │
   ┃  ┃  ┃     ├─ 45 (split)
   ┃  ┃  ┃     │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃  ┃     │   pc: 148
   ┃  ┃  ┃     │   callDepth: 1
   ┃  ┃  ┃     │   statusCode: STATUSCODE:StatusCode
   ┃  ┃  ┃     │   src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃  ┃     │   method: src%cse%Identity.applyOp(uint256)
   ┃  ┃  ┃     ┃
   ┃  ┃  ┃     ┃ (branch)
   ┃  ┃  ┃     ┣━━┓ subst: .Subst
   ┃  ┃  ┃     ┃  ┃ constraint: true
   ┃  ┃  ┃     ┃  │
   ┃  ┃  ┃     ┃  ├─ 62 (split)
   ┃  ┃  ┃     ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃  ┃     ┃  │   pc: 148
   ┃  ┃  ┃     ┃  │   callDepth: 1
   ┃  ┃  ┃     ┃  │   statusCode: STATUSCODE:StatusCode
   ┃  ┃  ┃     ┃  │   src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃  ┃     ┃  │   method: src%cse%Identity.applyOp(uint256)
   ┃  ┃  ┃     ┃  ┃
   ┃  ┃  ┃     ┃  ┃ (branch)
   ┃  ┃  ┃     ┃  ┣━━┓ subst: .Subst
   ┃  ┃  ┃     ┃  ┃  ┃ constraint: true
   ┃  ┃  ┃     ┃  ┃  │
   ┃  ┃  ┃     ┃  ┃  ├─ 96 (split)
   ┃  ┃  ┃     ┃  ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃  ┃     ┃  ┃  │   pc: 148
   ┃  ┃  ┃     ┃  ┃  │   callDepth: 1
   ┃  ┃  ┃     ┃  ┃  │   statusCode: STATUSCODE:StatusCode
   ┃  ┃  ┃     ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃  ┃     ┃  ┃  │   method: src%cse%Identity.applyOp(uint256)
   ┃  ┃  ┃     ┃  ┃  ┃
   ┃  ┃  ┃     ┃  ┃  ┃ (branch)
   ┃  ┃  ┃     ┃  ┃  ┣━━┓ subst: .Subst
   ┃  ┃  ┃     ┃  ┃  ┃  ┃ constraint: true
   ┃  ┃  ┃     ┃  ┃  ┃  │
   ┃  ┃  ┃     ┃  ┃  ┃  └─ 164 (leaf, pending)
   ┃  ┃  ┃     ┃  ┃  ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃  ┃     ┃  ┃  ┃      pc: 148
   ┃  ┃  ┃     ┃  ┃  ┃      callDepth: 1
   ┃  ┃  ┃     ┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
   ┃  ┃  ┃     ┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃  ┃     ┃  ┃  ┃      method: src%cse%Identity.applyOp(uint256)
   ┃  ┃  ┃     ┃  ┃  ┃
   ┃  ┃  ┃     ┃  ┃  ┗━━┓ subst: .Subst
   ┃  ┃  ┃     ┃  ┃     ┃ constraint: true
   ┃  ┃  ┃     ┃  ┃     │
   ┃  ┃  ┃     ┃  ┃     └─ 165 (leaf, pending)
   ┃  ┃  ┃     ┃  ┃         k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃  ┃     ┃  ┃         pc: 148
   ┃  ┃  ┃     ┃  ┃         callDepth: 1
   ┃  ┃  ┃     ┃  ┃         statusCode: STATUSCODE:StatusCode
   ┃  ┃  ┃     ┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃  ┃     ┃  ┃         method: src%cse%Identity.applyOp(uint256)
   ┃  ┃  ┃     ┃  ┃
   ┃  ┃  ┃     ┃  ┗━━┓ subst: .Subst
   ┃  ┃  ┃     ┃     ┃ constraint: true
   ┃  ┃  ┃     ┃     │
   ┃  ┃  ┃     ┃     ├─ 97 (split)
   ┃  ┃  ┃     ┃     │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃  ┃     ┃     │   pc: 148
   ┃  ┃  ┃     ┃     │   callDepth: 1
   ┃  ┃  ┃     ┃     │   statusCode: STATUSCODE:StatusCode
   ┃  ┃  ┃     ┃     │   src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃  ┃     ┃     │   method: src%cse%Identity.applyOp(uint256)
   ┃  ┃  ┃     ┃     ┃
   ┃  ┃  ┃     ┃     ┃ (branch)
   ┃  ┃  ┃     ┃     ┣━━┓ subst: .Subst
   ┃  ┃  ┃     ┃     ┃  ┃ constraint: true
   ┃  ┃  ┃     ┃     ┃  │
   ┃  ┃  ┃     ┃     ┃  └─ 166 (leaf, pending)
   ┃  ┃  ┃     ┃     ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃  ┃     ┃     ┃      pc: 148
   ┃  ┃  ┃     ┃     ┃      callDepth: 1
   ┃  ┃  ┃     ┃     ┃      statusCode: STATUSCODE:StatusCode
   ┃  ┃  ┃     ┃     ┃      src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃  ┃     ┃     ┃      method: src%cse%Identity.applyOp(uint256)
   ┃  ┃  ┃     ┃     ┃
   ┃  ┃  ┃     ┃     ┗━━┓ subst: .Subst
   ┃  ┃  ┃     ┃        ┃ constraint: true
   ┃  ┃  ┃     ┃        │
   ┃  ┃  ┃     ┃        └─ 167 (leaf, pending)
   ┃  ┃  ┃     ┃            k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃  ┃     ┃            pc: 148
   ┃  ┃  ┃     ┃            callDepth: 1
   ┃  ┃  ┃     ┃            statusCode: STATUSCODE:StatusCode
   ┃  ┃  ┃     ┃            src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃  ┃     ┃            method: src%cse%Identity.applyOp(uint256)
   ┃  ┃  ┃     ┃
   ┃  ┃  ┃     ┗━━┓ subst: .Subst
   ┃  ┃  ┃        ┃ constraint: true
   ┃  ┃  ┃        │
   ┃  ┃  ┃        ├─ 63 (split)
   ┃  ┃  ┃        │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃  ┃        │   pc: 148
   ┃  ┃  ┃        │   callDepth: 1
   ┃  ┃  ┃        │   statusCode: STATUSCODE:StatusCode
   ┃  ┃  ┃        │   src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃  ┃        │   method: src%cse%Identity.applyOp(uint256)
   ┃  ┃  ┃        ┃
   ┃  ┃  ┃        ┃ (branch)
   ┃  ┃  ┃        ┣━━┓ subst: .Subst
   ┃  ┃  ┃        ┃  ┃ constraint: true
   ┃  ┃  ┃        ┃  │
   ┃  ┃  ┃        ┃  ├─ 98 (split)
   ┃  ┃  ┃        ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃  ┃        ┃  │   pc: 148
   ┃  ┃  ┃        ┃  │   callDepth: 1
   ┃  ┃  ┃        ┃  │   statusCode: STATUSCODE:StatusCode
   ┃  ┃  ┃        ┃  │   src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃  ┃        ┃  │   method: src%cse%Identity.applyOp(uint256)
   ┃  ┃  ┃        ┃  ┃
   ┃  ┃  ┃        ┃  ┃ (branch)
   ┃  ┃  ┃        ┃  ┣━━┓ subst: .Subst
   ┃  ┃  ┃        ┃  ┃  ┃ constraint: true
   ┃  ┃  ┃        ┃  ┃  │
   ┃  ┃  ┃        ┃  ┃  └─ 168 (leaf, pending)
   ┃  ┃  ┃        ┃  ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃  ┃        ┃  ┃      pc: 148
   ┃  ┃  ┃        ┃  ┃      callDepth: 1
   ┃  ┃  ┃        ┃  ┃      statusCode: STATUSCODE:StatusCode
   ┃  ┃  ┃        ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃  ┃        ┃  ┃      method: src%cse%Identity.applyOp(uint256)
   ┃  ┃  ┃        ┃  ┃
   ┃  ┃  ┃        ┃  ┗━━┓ subst: .Subst
   ┃  ┃  ┃        ┃     ┃ constraint: true
   ┃  ┃  ┃        ┃     │
   ┃  ┃  ┃        ┃     └─ 169 (leaf, pending)
   ┃  ┃  ┃        ┃         k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃  ┃        ┃         pc: 148
   ┃  ┃  ┃        ┃         callDepth: 1
   ┃  ┃  ┃        ┃         statusCode: STATUSCODE:StatusCode
   ┃  ┃  ┃        ┃         src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃  ┃        ┃         method: src%cse%Identity.applyOp(uint256)
   ┃  ┃  ┃        ┃
   ┃  ┃  ┃        ┗━━┓ subst: .Subst
   ┃  ┃  ┃           ┃ constraint: true
   ┃  ┃  ┃           │
   ┃  ┃  ┃           ├─ 99 (split)
   ┃  ┃  ┃           │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃  ┃           │   pc: 148
   ┃  ┃  ┃           │   callDepth: 1
   ┃  ┃  ┃           │   statusCode: STATUSCODE:StatusCode
   ┃  ┃  ┃           │   src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃  ┃           │   method: src%cse%Identity.applyOp(uint256)
   ┃  ┃  ┃           ┃
   ┃  ┃  ┃           ┃ (branch)
   ┃  ┃  ┃           ┣━━┓ subst: .Subst
   ┃  ┃  ┃           ┃  ┃ constraint: true
   ┃  ┃  ┃           ┃  │
   ┃  ┃  ┃           ┃  └─ 170 (leaf, pending)
   ┃  ┃  ┃           ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃  ┃           ┃      pc: 148
   ┃  ┃  ┃           ┃      callDepth: 1
   ┃  ┃  ┃           ┃      statusCode: STATUSCODE:StatusCode
   ┃  ┃  ┃           ┃      src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃  ┃           ┃      method: src%cse%Identity.applyOp(uint256)
   ┃  ┃  ┃           ┃
   ┃  ┃  ┃           ┗━━┓ subst: .Subst
   ┃  ┃  ┃              ┃ constraint: true
   ┃  ┃  ┃              │
   ┃  ┃  ┃              └─ 171 (leaf, pending)
   ┃  ┃  ┃                  k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃  ┃                  pc: 148
   ┃  ┃  ┃                  callDepth: 1
   ┃  ┃  ┃                  statusCode: STATUSCODE:StatusCode
   ┃  ┃  ┃                  src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃  ┃                  method: src%cse%Identity.applyOp(uint256)
   ┃  ┃  ┃
   ┃  ┃  ┗━━┓ subst: .Subst
   ┃  ┃     ┃ constraint: true
   ┃  ┃     │
   ┃  ┃     ├─ 37 (split)
   ┃  ┃     │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃     │   pc: 148
   ┃  ┃     │   callDepth: 1
   ┃  ┃     │   statusCode: STATUSCODE:StatusCode
   ┃  ┃     │   src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃     │   method: src%cse%Identity.applyOp(uint256)
   ┃  ┃     ┃
   ┃  ┃     ┃ (branch)
   ┃  ┃     ┣━━┓ subst: .Subst
   ┃  ┃     ┃  ┃ constraint: true
   ┃  ┃     ┃  │
   ┃  ┃     ┃  ├─ 46 (split)
   ┃  ┃     ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃     ┃  │   pc: 148
   ┃  ┃     ┃  │   callDepth: 1
   ┃  ┃     ┃  │   statusCode: STATUSCODE:StatusCode
   ┃  ┃     ┃  │   src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃     ┃  │   method: src%cse%Identity.applyOp(uint256)
   ┃  ┃     ┃  ┃
   ┃  ┃     ┃  ┃ (branch)
   ┃  ┃     ┃  ┣━━┓ subst: .Subst
   ┃  ┃     ┃  ┃  ┃ constraint: true
   ┃  ┃     ┃  ┃  │
   ┃  ┃     ┃  ┃  ├─ 64 (split)
   ┃  ┃     ┃  ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃     ┃  ┃  │   pc: 148
   ┃  ┃     ┃  ┃  │   callDepth: 1
   ┃  ┃     ┃  ┃  │   statusCode: STATUSCODE:StatusCode
   ┃  ┃     ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃     ┃  ┃  │   method: src%cse%Identity.applyOp(uint256)
   ┃  ┃     ┃  ┃  ┃
   ┃  ┃     ┃  ┃  ┃ (branch)
   ┃  ┃     ┃  ┃  ┣━━┓ subst: .Subst
   ┃  ┃     ┃  ┃  ┃  ┃ constraint: true
   ┃  ┃     ┃  ┃  ┃  │
   ┃  ┃     ┃  ┃  ┃  ├─ 100 (split)
   ┃  ┃     ┃  ┃  ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃     ┃  ┃  ┃  │   pc: 148
   ┃  ┃     ┃  ┃  ┃  │   callDepth: 1
   ┃  ┃     ┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
   ┃  ┃     ┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃     ┃  ┃  ┃  │   method: src%cse%Identity.applyOp(uint256)
   ┃  ┃     ┃  ┃  ┃  ┃
   ┃  ┃     ┃  ┃  ┃  ┃ (branch)
   ┃  ┃     ┃  ┃  ┃  ┣━━┓ subst: .Subst
   ┃  ┃     ┃  ┃  ┃  ┃  ┃ constraint: true
   ┃  ┃     ┃  ┃  ┃  ┃  │
   ┃  ┃     ┃  ┃  ┃  ┃  └─ 172 (leaf, pending)
   ┃  ┃     ┃  ┃  ┃  ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃     ┃  ┃  ┃  ┃      pc: 148
   ┃  ┃     ┃  ┃  ┃  ┃      callDepth: 1
   ┃  ┃     ┃  ┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
   ┃  ┃     ┃  ┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃     ┃  ┃  ┃  ┃      method: src%cse%Identity.applyOp(uint256)
   ┃  ┃     ┃  ┃  ┃  ┃
   ┃  ┃     ┃  ┃  ┃  ┗━━┓ subst: .Subst
   ┃  ┃     ┃  ┃  ┃     ┃ constraint: true
   ┃  ┃     ┃  ┃  ┃     │
   ┃  ┃     ┃  ┃  ┃     └─ 173 (leaf, pending)
   ┃  ┃     ┃  ┃  ┃         k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃     ┃  ┃  ┃         pc: 148
   ┃  ┃     ┃  ┃  ┃         callDepth: 1
   ┃  ┃     ┃  ┃  ┃         statusCode: STATUSCODE:StatusCode
   ┃  ┃     ┃  ┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃     ┃  ┃  ┃         method: src%cse%Identity.applyOp(uint256)
   ┃  ┃     ┃  ┃  ┃
   ┃  ┃     ┃  ┃  ┗━━┓ subst: .Subst
   ┃  ┃     ┃  ┃     ┃ constraint: true
   ┃  ┃     ┃  ┃     │
   ┃  ┃     ┃  ┃     ├─ 101 (split)
   ┃  ┃     ┃  ┃     │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃     ┃  ┃     │   pc: 148
   ┃  ┃     ┃  ┃     │   callDepth: 1
   ┃  ┃     ┃  ┃     │   statusCode: STATUSCODE:StatusCode
   ┃  ┃     ┃  ┃     │   src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃     ┃  ┃     │   method: src%cse%Identity.applyOp(uint256)
   ┃  ┃     ┃  ┃     ┃
   ┃  ┃     ┃  ┃     ┃ (branch)
   ┃  ┃     ┃  ┃     ┣━━┓ subst: .Subst
   ┃  ┃     ┃  ┃     ┃  ┃ constraint: true
   ┃  ┃     ┃  ┃     ┃  │
   ┃  ┃     ┃  ┃     ┃  └─ 174 (leaf, pending)
   ┃  ┃     ┃  ┃     ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃     ┃  ┃     ┃      pc: 148
   ┃  ┃     ┃  ┃     ┃      callDepth: 1
   ┃  ┃     ┃  ┃     ┃      statusCode: STATUSCODE:StatusCode
   ┃  ┃     ┃  ┃     ┃      src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃     ┃  ┃     ┃      method: src%cse%Identity.applyOp(uint256)
   ┃  ┃     ┃  ┃     ┃
   ┃  ┃     ┃  ┃     ┗━━┓ subst: .Subst
   ┃  ┃     ┃  ┃        ┃ constraint: true
   ┃  ┃     ┃  ┃        │
   ┃  ┃     ┃  ┃        └─ 175 (leaf, pending)
   ┃  ┃     ┃  ┃            k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃     ┃  ┃            pc: 148
   ┃  ┃     ┃  ┃            callDepth: 1
   ┃  ┃     ┃  ┃            statusCode: STATUSCODE:StatusCode
   ┃  ┃     ┃  ┃            src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃     ┃  ┃            method: src%cse%Identity.applyOp(uint256)
   ┃  ┃     ┃  ┃
   ┃  ┃     ┃  ┗━━┓ subst: .Subst
   ┃  ┃     ┃     ┃ constraint: true
   ┃  ┃     ┃     │
   ┃  ┃     ┃     ├─ 65 (split)
   ┃  ┃     ┃     │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃     ┃     │   pc: 148
   ┃  ┃     ┃     │   callDepth: 1
   ┃  ┃     ┃     │   statusCode: STATUSCODE:StatusCode
   ┃  ┃     ┃     │   src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃     ┃     │   method: src%cse%Identity.applyOp(uint256)
   ┃  ┃     ┃     ┃
   ┃  ┃     ┃     ┃ (branch)
   ┃  ┃     ┃     ┣━━┓ subst: .Subst
   ┃  ┃     ┃     ┃  ┃ constraint: true
   ┃  ┃     ┃     ┃  │
   ┃  ┃     ┃     ┃  ├─ 102 (split)
   ┃  ┃     ┃     ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃     ┃     ┃  │   pc: 148
   ┃  ┃     ┃     ┃  │   callDepth: 1
   ┃  ┃     ┃     ┃  │   statusCode: STATUSCODE:StatusCode
   ┃  ┃     ┃     ┃  │   src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃     ┃     ┃  │   method: src%cse%Identity.applyOp(uint256)
   ┃  ┃     ┃     ┃  ┃
   ┃  ┃     ┃     ┃  ┃ (branch)
   ┃  ┃     ┃     ┃  ┣━━┓ subst: .Subst
   ┃  ┃     ┃     ┃  ┃  ┃ constraint: true
   ┃  ┃     ┃     ┃  ┃  │
   ┃  ┃     ┃     ┃  ┃  └─ 176 (leaf, pending)
   ┃  ┃     ┃     ┃  ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃     ┃     ┃  ┃      pc: 148
   ┃  ┃     ┃     ┃  ┃      callDepth: 1
   ┃  ┃     ┃     ┃  ┃      statusCode: STATUSCODE:StatusCode
   ┃  ┃     ┃     ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃     ┃     ┃  ┃      method: src%cse%Identity.applyOp(uint256)
   ┃  ┃     ┃     ┃  ┃
   ┃  ┃     ┃     ┃  ┗━━┓ subst: .Subst
   ┃  ┃     ┃     ┃     ┃ constraint: true
   ┃  ┃     ┃     ┃     │
   ┃  ┃     ┃     ┃     └─ 177 (leaf, pending)
   ┃  ┃     ┃     ┃         k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃     ┃     ┃         pc: 148
   ┃  ┃     ┃     ┃         callDepth: 1
   ┃  ┃     ┃     ┃         statusCode: STATUSCODE:StatusCode
   ┃  ┃     ┃     ┃         src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃     ┃     ┃         method: src%cse%Identity.applyOp(uint256)
   ┃  ┃     ┃     ┃
   ┃  ┃     ┃     ┗━━┓ subst: .Subst
   ┃  ┃     ┃        ┃ constraint: true
   ┃  ┃     ┃        │
   ┃  ┃     ┃        ├─ 103 (split)
   ┃  ┃     ┃        │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃     ┃        │   pc: 148
   ┃  ┃     ┃        │   callDepth: 1
   ┃  ┃     ┃        │   statusCode: STATUSCODE:StatusCode
   ┃  ┃     ┃        │   src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃     ┃        │   method: src%cse%Identity.applyOp(uint256)
   ┃  ┃     ┃        ┃
   ┃  ┃     ┃        ┃ (branch)
   ┃  ┃     ┃        ┣━━┓ subst: .Subst
   ┃  ┃     ┃        ┃  ┃ constraint: true
   ┃  ┃     ┃        ┃  │
   ┃  ┃     ┃        ┃  └─ 178 (leaf, pending)
   ┃  ┃     ┃        ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃     ┃        ┃      pc: 148
   ┃  ┃     ┃        ┃      callDepth: 1
   ┃  ┃     ┃        ┃      statusCode: STATUSCODE:StatusCode
   ┃  ┃     ┃        ┃      src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃     ┃        ┃      method: src%cse%Identity.applyOp(uint256)
   ┃  ┃     ┃        ┃
   ┃  ┃     ┃        ┗━━┓ subst: .Subst
   ┃  ┃     ┃           ┃ constraint: true
   ┃  ┃     ┃           │
   ┃  ┃     ┃           └─ 179 (leaf, pending)
   ┃  ┃     ┃               k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃     ┃               pc: 148
   ┃  ┃     ┃               callDepth: 1
   ┃  ┃     ┃               statusCode: STATUSCODE:StatusCode
   ┃  ┃     ┃               src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃     ┃               method: src%cse%Identity.applyOp(uint256)
   ┃  ┃     ┃
   ┃  ┃     ┗━━┓ subst: .Subst
   ┃  ┃        ┃ constraint: true
   ┃  ┃        │
   ┃  ┃        ├─ 47 (split)
   ┃  ┃        │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃        │   pc: 148
   ┃  ┃        │   callDepth: 1
   ┃  ┃        │   statusCode: STATUSCODE:StatusCode
   ┃  ┃        │   src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃        │   method: src%cse%Identity.applyOp(uint256)
   ┃  ┃        ┃
   ┃  ┃        ┃ (branch)
   ┃  ┃        ┣━━┓ subst: .Subst
   ┃  ┃        ┃  ┃ constraint: true
   ┃  ┃        ┃  │
   ┃  ┃        ┃  ├─ 66 (split)
   ┃  ┃        ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃        ┃  │   pc: 148
   ┃  ┃        ┃  │   callDepth: 1
   ┃  ┃        ┃  │   statusCode: STATUSCODE:StatusCode
   ┃  ┃        ┃  │   src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃        ┃  │   method: src%cse%Identity.applyOp(uint256)
   ┃  ┃        ┃  ┃
   ┃  ┃        ┃  ┃ (branch)
   ┃  ┃        ┃  ┣━━┓ subst: .Subst
   ┃  ┃        ┃  ┃  ┃ constraint: true
   ┃  ┃        ┃  ┃  │
   ┃  ┃        ┃  ┃  ├─ 104 (split)
   ┃  ┃        ┃  ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃        ┃  ┃  │   pc: 148
   ┃  ┃        ┃  ┃  │   callDepth: 1
   ┃  ┃        ┃  ┃  │   statusCode: STATUSCODE:StatusCode
   ┃  ┃        ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃        ┃  ┃  │   method: src%cse%Identity.applyOp(uint256)
   ┃  ┃        ┃  ┃  ┃
   ┃  ┃        ┃  ┃  ┃ (branch)
   ┃  ┃        ┃  ┃  ┣━━┓ subst: .Subst
   ┃  ┃        ┃  ┃  ┃  ┃ constraint: true
   ┃  ┃        ┃  ┃  ┃  │
   ┃  ┃        ┃  ┃  ┃  └─ 180 (leaf, pending)
   ┃  ┃        ┃  ┃  ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃        ┃  ┃  ┃      pc: 148
   ┃  ┃        ┃  ┃  ┃      callDepth: 1
   ┃  ┃        ┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
   ┃  ┃        ┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃        ┃  ┃  ┃      method: src%cse%Identity.applyOp(uint256)
   ┃  ┃        ┃  ┃  ┃
   ┃  ┃        ┃  ┃  ┗━━┓ subst: .Subst
   ┃  ┃        ┃  ┃     ┃ constraint: true
   ┃  ┃        ┃  ┃     │
   ┃  ┃        ┃  ┃     └─ 181 (leaf, pending)
   ┃  ┃        ┃  ┃         k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃        ┃  ┃         pc: 148
   ┃  ┃        ┃  ┃         callDepth: 1
   ┃  ┃        ┃  ┃         statusCode: STATUSCODE:StatusCode
   ┃  ┃        ┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃        ┃  ┃         method: src%cse%Identity.applyOp(uint256)
   ┃  ┃        ┃  ┃
   ┃  ┃        ┃  ┗━━┓ subst: .Subst
   ┃  ┃        ┃     ┃ constraint: true
   ┃  ┃        ┃     │
   ┃  ┃        ┃     ├─ 105 (split)
   ┃  ┃        ┃     │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃        ┃     │   pc: 148
   ┃  ┃        ┃     │   callDepth: 1
   ┃  ┃        ┃     │   statusCode: STATUSCODE:StatusCode
   ┃  ┃        ┃     │   src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃        ┃     │   method: src%cse%Identity.applyOp(uint256)
   ┃  ┃        ┃     ┃
   ┃  ┃        ┃     ┃ (branch)
   ┃  ┃        ┃     ┣━━┓ subst: .Subst
   ┃  ┃        ┃     ┃  ┃ constraint: true
   ┃  ┃        ┃     ┃  │
   ┃  ┃        ┃     ┃  └─ 182 (leaf, pending)
   ┃  ┃        ┃     ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃        ┃     ┃      pc: 148
   ┃  ┃        ┃     ┃      callDepth: 1
   ┃  ┃        ┃     ┃      statusCode: STATUSCODE:StatusCode
   ┃  ┃        ┃     ┃      src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃        ┃     ┃      method: src%cse%Identity.applyOp(uint256)
   ┃  ┃        ┃     ┃
   ┃  ┃        ┃     ┗━━┓ subst: .Subst
   ┃  ┃        ┃        ┃ constraint: true
   ┃  ┃        ┃        │
   ┃  ┃        ┃        └─ 183 (leaf, pending)
   ┃  ┃        ┃            k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃        ┃            pc: 148
   ┃  ┃        ┃            callDepth: 1
   ┃  ┃        ┃            statusCode: STATUSCODE:StatusCode
   ┃  ┃        ┃            src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃        ┃            method: src%cse%Identity.applyOp(uint256)
   ┃  ┃        ┃
   ┃  ┃        ┗━━┓ subst: .Subst
   ┃  ┃           ┃ constraint: true
   ┃  ┃           │
   ┃  ┃           ├─ 67 (split)
   ┃  ┃           │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃           │   pc: 148
   ┃  ┃           │   callDepth: 1
   ┃  ┃           │   statusCode: STATUSCODE:StatusCode
   ┃  ┃           │   src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃           │   method: src%cse%Identity.applyOp(uint256)
   ┃  ┃           ┃
   ┃  ┃           ┃ (branch)
   ┃  ┃           ┣━━┓ subst: .Subst
   ┃  ┃           ┃  ┃ constraint: true
   ┃  ┃           ┃  │
   ┃  ┃           ┃  ├─ 106 (split)
   ┃  ┃           ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃           ┃  │   pc: 148
   ┃  ┃           ┃  │   callDepth: 1
   ┃  ┃           ┃  │   statusCode: STATUSCODE:StatusCode
   ┃  ┃           ┃  │   src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃           ┃  │   method: src%cse%Identity.applyOp(uint256)
   ┃  ┃           ┃  ┃
   ┃  ┃           ┃  ┃ (branch)
   ┃  ┃           ┃  ┣━━┓ subst: .Subst
   ┃  ┃           ┃  ┃  ┃ constraint: true
   ┃  ┃           ┃  ┃  │
   ┃  ┃           ┃  ┃  └─ 184 (leaf, pending)
   ┃  ┃           ┃  ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃           ┃  ┃      pc: 148
   ┃  ┃           ┃  ┃      callDepth: 1
   ┃  ┃           ┃  ┃      statusCode: STATUSCODE:StatusCode
   ┃  ┃           ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃           ┃  ┃      method: src%cse%Identity.applyOp(uint256)
   ┃  ┃           ┃  ┃
   ┃  ┃           ┃  ┗━━┓ subst: .Subst
   ┃  ┃           ┃     ┃ constraint: true
   ┃  ┃           ┃     │
   ┃  ┃           ┃     └─ 185 (leaf, pending)
   ┃  ┃           ┃         k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃           ┃         pc: 148
   ┃  ┃           ┃         callDepth: 1
   ┃  ┃           ┃         statusCode: STATUSCODE:StatusCode
   ┃  ┃           ┃         src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃           ┃         method: src%cse%Identity.applyOp(uint256)
   ┃  ┃           ┃
   ┃  ┃           ┗━━┓ subst: .Subst
   ┃  ┃              ┃ constraint: true
   ┃  ┃              │
   ┃  ┃              ├─ 107 (split)
   ┃  ┃              │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃              │   pc: 148
   ┃  ┃              │   callDepth: 1
   ┃  ┃              │   statusCode: STATUSCODE:StatusCode
   ┃  ┃              │   src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃              │   method: src%cse%Identity.applyOp(uint256)
   ┃  ┃              ┃
   ┃  ┃              ┃ (branch)
   ┃  ┃              ┣━━┓ subst: .Subst
   ┃  ┃              ┃  ┃ constraint: true
   ┃  ┃              ┃  │
   ┃  ┃              ┃  └─ 186 (leaf, pending)
   ┃  ┃              ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃              ┃      pc: 148
   ┃  ┃              ┃      callDepth: 1
   ┃  ┃              ┃      statusCode: STATUSCODE:StatusCode
   ┃  ┃              ┃      src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃              ┃      method: src%cse%Identity.applyOp(uint256)
   ┃  ┃              ┃
   ┃  ┃              ┗━━┓ subst: .Subst
   ┃  ┃                 ┃ constraint: true
   ┃  ┃                 │
   ┃  ┃                 └─ 187 (leaf, pending)
   ┃  ┃                     k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃  ┃                     pc: 148
   ┃  ┃                     callDepth: 1
   ┃  ┃                     statusCode: STATUSCODE:StatusCode
   ┃  ┃                     src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃                     method: src%cse%Identity.applyOp(uint256)
   ┃  ┃
   ┃  ┗━━┓ subst: .Subst
   ┃     ┃ constraint: true
   ┃     │
   ┃     ├─ 33 (split)
   ┃     │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃     │   pc: 148
   ┃     │   callDepth: 1
   ┃     │   statusCode: STATUSCODE:StatusCode
   ┃     │   src: test/nested/SimpleNested.t.sol:7:11
   ┃     │   method: src%cse%Identity.applyOp(uint256)
   ┃     ┃
   ┃     ┃ (branch)
   ┃     ┣━━┓ subst: .Subst
   ┃     ┃  ┃ constraint: true
   ┃     ┃  │
   ┃     ┃  ├─ 38 (split)
   ┃     ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃     ┃  │   pc: 148
   ┃     ┃  │   callDepth: 1
   ┃     ┃  │   statusCode: STATUSCODE:StatusCode
   ┃     ┃  │   src: test/nested/SimpleNested.t.sol:7:11
   ┃     ┃  │   method: src%cse%Identity.applyOp(uint256)
   ┃     ┃  ┃
   ┃     ┃  ┃ (branch)
   ┃     ┃  ┣━━┓ subst: .Subst
   ┃     ┃  ┃  ┃ constraint: true
   ┃     ┃  ┃  │
   ┃     ┃  ┃  ├─ 48 (split)
   ┃     ┃  ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃     ┃  ┃  │   pc: 148
   ┃     ┃  ┃  │   callDepth: 1
   ┃     ┃  ┃  │   statusCode: STATUSCODE:StatusCode
   ┃     ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
   ┃     ┃  ┃  │   method: src%cse%Identity.applyOp(uint256)
   ┃     ┃  ┃  ┃
   ┃     ┃  ┃  ┃ (branch)
   ┃     ┃  ┃  ┣━━┓ subst: .Subst
   ┃     ┃  ┃  ┃  ┃ constraint: true
   ┃     ┃  ┃  ┃  │
   ┃     ┃  ┃  ┃  ├─ 68 (split)
   ┃     ┃  ┃  ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃     ┃  ┃  ┃  │   pc: 148
   ┃     ┃  ┃  ┃  │   callDepth: 1
   ┃     ┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
   ┃     ┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
   ┃     ┃  ┃  ┃  │   method: src%cse%Identity.applyOp(uint256)
   ┃     ┃  ┃  ┃  ┃
   ┃     ┃  ┃  ┃  ┃ (branch)
   ┃     ┃  ┃  ┃  ┣━━┓ subst: .Subst
   ┃     ┃  ┃  ┃  ┃  ┃ constraint: true
   ┃     ┃  ┃  ┃  ┃  │
   ┃     ┃  ┃  ┃  ┃  ├─ 108 (split)
   ┃     ┃  ┃  ┃  ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃     ┃  ┃  ┃  ┃  │   pc: 148
   ┃     ┃  ┃  ┃  ┃  │   callDepth: 1
   ┃     ┃  ┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
   ┃     ┃  ┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
   ┃     ┃  ┃  ┃  ┃  │   method: src%cse%Identity.applyOp(uint256)
   ┃     ┃  ┃  ┃  ┃  ┃
   ┃     ┃  ┃  ┃  ┃  ┃ (branch)
   ┃     ┃  ┃  ┃  ┃  ┣━━┓ subst: .Subst
   ┃     ┃  ┃  ┃  ┃  ┃  ┃ constraint: true
   ┃     ┃  ┃  ┃  ┃  ┃  │
   ┃     ┃  ┃  ┃  ┃  ┃  └─ 188 (leaf, pending)
   ┃     ┃  ┃  ┃  ┃  ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃     ┃  ┃  ┃  ┃  ┃      pc: 148
   ┃     ┃  ┃  ┃  ┃  ┃      callDepth: 1
   ┃     ┃  ┃  ┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
   ┃     ┃  ┃  ┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
   ┃     ┃  ┃  ┃  ┃  ┃      method: src%cse%Identity.applyOp(uint256)
   ┃     ┃  ┃  ┃  ┃  ┃
   ┃     ┃  ┃  ┃  ┃  ┗━━┓ subst: .Subst
   ┃     ┃  ┃  ┃  ┃     ┃ constraint: true
   ┃     ┃  ┃  ┃  ┃     │
   ┃     ┃  ┃  ┃  ┃     └─ 189 (leaf, pending)
   ┃     ┃  ┃  ┃  ┃         k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃     ┃  ┃  ┃  ┃         pc: 148
   ┃     ┃  ┃  ┃  ┃         callDepth: 1
   ┃     ┃  ┃  ┃  ┃         statusCode: STATUSCODE:StatusCode
   ┃     ┃  ┃  ┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
   ┃     ┃  ┃  ┃  ┃         method: src%cse%Identity.applyOp(uint256)
   ┃     ┃  ┃  ┃  ┃
   ┃     ┃  ┃  ┃  ┗━━┓ subst: .Subst
   ┃     ┃  ┃  ┃     ┃ constraint: true
   ┃     ┃  ┃  ┃     │
   ┃     ┃  ┃  ┃     ├─ 109 (split)
   ┃     ┃  ┃  ┃     │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃     ┃  ┃  ┃     │   pc: 148
   ┃     ┃  ┃  ┃     │   callDepth: 1
   ┃     ┃  ┃  ┃     │   statusCode: STATUSCODE:StatusCode
   ┃     ┃  ┃  ┃     │   src: test/nested/SimpleNested.t.sol:7:11
   ┃     ┃  ┃  ┃     │   method: src%cse%Identity.applyOp(uint256)
   ┃     ┃  ┃  ┃     ┃
   ┃     ┃  ┃  ┃     ┃ (branch)
   ┃     ┃  ┃  ┃     ┣━━┓ subst: .Subst
   ┃     ┃  ┃  ┃     ┃  ┃ constraint: true
   ┃     ┃  ┃  ┃     ┃  │
   ┃     ┃  ┃  ┃     ┃  └─ 190 (leaf, pending)
   ┃     ┃  ┃  ┃     ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃     ┃  ┃  ┃     ┃      pc: 148
   ┃     ┃  ┃  ┃     ┃      callDepth: 1
   ┃     ┃  ┃  ┃     ┃      statusCode: STATUSCODE:StatusCode
   ┃     ┃  ┃  ┃     ┃      src: test/nested/SimpleNested.t.sol:7:11
   ┃     ┃  ┃  ┃     ┃      method: src%cse%Identity.applyOp(uint256)
   ┃     ┃  ┃  ┃     ┃
   ┃     ┃  ┃  ┃     ┗━━┓ subst: .Subst
   ┃     ┃  ┃  ┃        ┃ constraint: true
   ┃     ┃  ┃  ┃        │
   ┃     ┃  ┃  ┃        └─ 191 (leaf, pending)
   ┃     ┃  ┃  ┃            k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃     ┃  ┃  ┃            pc: 148
   ┃     ┃  ┃  ┃            callDepth: 1
   ┃     ┃  ┃  ┃            statusCode: STATUSCODE:StatusCode
   ┃     ┃  ┃  ┃            src: test/nested/SimpleNested.t.sol:7:11
   ┃     ┃  ┃  ┃            method: src%cse%Identity.applyOp(uint256)
   ┃     ┃  ┃  ┃
   ┃     ┃  ┃  ┗━━┓ subst: .Subst
   ┃     ┃  ┃     ┃ constraint: true
   ┃     ┃  ┃     │
   ┃     ┃  ┃     ├─ 69 (split)
   ┃     ┃  ┃     │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃     ┃  ┃     │   pc: 148
   ┃     ┃  ┃     │   callDepth: 1
   ┃     ┃  ┃     │   statusCode: STATUSCODE:StatusCode
   ┃     ┃  ┃     │   src: test/nested/SimpleNested.t.sol:7:11
   ┃     ┃  ┃     │   method: src%cse%Identity.applyOp(uint256)
   ┃     ┃  ┃     ┃
   ┃     ┃  ┃     ┃ (branch)
   ┃     ┃  ┃     ┣━━┓ subst: .Subst
   ┃     ┃  ┃     ┃  ┃ constraint: true
   ┃     ┃  ┃     ┃  │
   ┃     ┃  ┃     ┃  ├─ 110 (split)
   ┃     ┃  ┃     ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃     ┃  ┃     ┃  │   pc: 148
   ┃     ┃  ┃     ┃  │   callDepth: 1
   ┃     ┃  ┃     ┃  │   statusCode: STATUSCODE:StatusCode
   ┃     ┃  ┃     ┃  │   src: test/nested/SimpleNested.t.sol:7:11
   ┃     ┃  ┃     ┃  │   method: src%cse%Identity.applyOp(uint256)
   ┃     ┃  ┃     ┃  ┃
   ┃     ┃  ┃     ┃  ┃ (branch)
   ┃     ┃  ┃     ┃  ┣━━┓ subst: .Subst
   ┃     ┃  ┃     ┃  ┃  ┃ constraint: true
   ┃     ┃  ┃     ┃  ┃  │
   ┃     ┃  ┃     ┃  ┃  └─ 192 (leaf, pending)
   ┃     ┃  ┃     ┃  ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃     ┃  ┃     ┃  ┃      pc: 148
   ┃     ┃  ┃     ┃  ┃      callDepth: 1
   ┃     ┃  ┃     ┃  ┃      statusCode: STATUSCODE:StatusCode
   ┃     ┃  ┃     ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
   ┃     ┃  ┃     ┃  ┃      method: src%cse%Identity.applyOp(uint256)
   ┃     ┃  ┃     ┃  ┃
   ┃     ┃  ┃     ┃  ┗━━┓ subst: .Subst
   ┃     ┃  ┃     ┃     ┃ constraint: true
   ┃     ┃  ┃     ┃     │
   ┃     ┃  ┃     ┃     └─ 193 (leaf, pending)
   ┃     ┃  ┃     ┃         k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃     ┃  ┃     ┃         pc: 148
   ┃     ┃  ┃     ┃         callDepth: 1
   ┃     ┃  ┃     ┃         statusCode: STATUSCODE:StatusCode
   ┃     ┃  ┃     ┃         src: test/nested/SimpleNested.t.sol:7:11
   ┃     ┃  ┃     ┃         method: src%cse%Identity.applyOp(uint256)
   ┃     ┃  ┃     ┃
   ┃     ┃  ┃     ┗━━┓ subst: .Subst
   ┃     ┃  ┃        ┃ constraint: true
   ┃     ┃  ┃        │
   ┃     ┃  ┃        ├─ 111 (split)
   ┃     ┃  ┃        │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃     ┃  ┃        │   pc: 148
   ┃     ┃  ┃        │   callDepth: 1
   ┃     ┃  ┃        │   statusCode: STATUSCODE:StatusCode
   ┃     ┃  ┃        │   src: test/nested/SimpleNested.t.sol:7:11
   ┃     ┃  ┃        │   method: src%cse%Identity.applyOp(uint256)
   ┃     ┃  ┃        ┃
   ┃     ┃  ┃        ┃ (branch)
   ┃     ┃  ┃        ┣━━┓ subst: .Subst
   ┃     ┃  ┃        ┃  ┃ constraint: true
   ┃     ┃  ┃        ┃  │
   ┃     ┃  ┃        ┃  └─ 194 (leaf, pending)
   ┃     ┃  ┃        ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃     ┃  ┃        ┃      pc: 148
   ┃     ┃  ┃        ┃      callDepth: 1
   ┃     ┃  ┃        ┃      statusCode: STATUSCODE:StatusCode
   ┃     ┃  ┃        ┃      src: test/nested/SimpleNested.t.sol:7:11
   ┃     ┃  ┃        ┃      method: src%cse%Identity.applyOp(uint256)
   ┃     ┃  ┃        ┃
   ┃     ┃  ┃        ┗━━┓ subst: .Subst
   ┃     ┃  ┃           ┃ constraint: true
   ┃     ┃  ┃           │
   ┃     ┃  ┃           └─ 195 (leaf, pending)
   ┃     ┃  ┃               k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃     ┃  ┃               pc: 148
   ┃     ┃  ┃               callDepth: 1
   ┃     ┃  ┃               statusCode: STATUSCODE:StatusCode
   ┃     ┃  ┃               src: test/nested/SimpleNested.t.sol:7:11
   ┃     ┃  ┃               method: src%cse%Identity.applyOp(uint256)
   ┃     ┃  ┃
   ┃     ┃  ┗━━┓ subst: .Subst
   ┃     ┃     ┃ constraint: true
   ┃     ┃     │
   ┃     ┃     ├─ 49 (split)
   ┃     ┃     │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃     ┃     │   pc: 148
   ┃     ┃     │   callDepth: 1
   ┃     ┃     │   statusCode: STATUSCODE:StatusCode
   ┃     ┃     │   src: test/nested/SimpleNested.t.sol:7:11
   ┃     ┃     │   method: src%cse%Identity.applyOp(uint256)
   ┃     ┃     ┃
   ┃     ┃     ┃ (branch)
   ┃     ┃     ┣━━┓ subst: .Subst
   ┃     ┃     ┃  ┃ constraint: true
   ┃     ┃     ┃  │
   ┃     ┃     ┃  ├─ 70 (split)
   ┃     ┃     ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃     ┃     ┃  │   pc: 148
   ┃     ┃     ┃  │   callDepth: 1
   ┃     ┃     ┃  │   statusCode: STATUSCODE:StatusCode
   ┃     ┃     ┃  │   src: test/nested/SimpleNested.t.sol:7:11
   ┃     ┃     ┃  │   method: src%cse%Identity.applyOp(uint256)
   ┃     ┃     ┃  ┃
   ┃     ┃     ┃  ┃ (branch)
   ┃     ┃     ┃  ┣━━┓ subst: .Subst
   ┃     ┃     ┃  ┃  ┃ constraint: true
   ┃     ┃     ┃  ┃  │
   ┃     ┃     ┃  ┃  ├─ 112 (split)
   ┃     ┃     ┃  ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃     ┃     ┃  ┃  │   pc: 148
   ┃     ┃     ┃  ┃  │   callDepth: 1
   ┃     ┃     ┃  ┃  │   statusCode: STATUSCODE:StatusCode
   ┃     ┃     ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
   ┃     ┃     ┃  ┃  │   method: src%cse%Identity.applyOp(uint256)
   ┃     ┃     ┃  ┃  ┃
   ┃     ┃     ┃  ┃  ┃ (branch)
   ┃     ┃     ┃  ┃  ┣━━┓ subst: .Subst
   ┃     ┃     ┃  ┃  ┃  ┃ constraint: true
   ┃     ┃     ┃  ┃  ┃  │
   ┃     ┃     ┃  ┃  ┃  └─ 196 (leaf, pending)
   ┃     ┃     ┃  ┃  ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃     ┃     ┃  ┃  ┃      pc: 148
   ┃     ┃     ┃  ┃  ┃      callDepth: 1
   ┃     ┃     ┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
   ┃     ┃     ┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
   ┃     ┃     ┃  ┃  ┃      method: src%cse%Identity.applyOp(uint256)
   ┃     ┃     ┃  ┃  ┃
   ┃     ┃     ┃  ┃  ┗━━┓ subst: .Subst
   ┃     ┃     ┃  ┃     ┃ constraint: true
   ┃     ┃     ┃  ┃     │
   ┃     ┃     ┃  ┃     └─ 197 (leaf, pending)
   ┃     ┃     ┃  ┃         k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃     ┃     ┃  ┃         pc: 148
   ┃     ┃     ┃  ┃         callDepth: 1
   ┃     ┃     ┃  ┃         statusCode: STATUSCODE:StatusCode
   ┃     ┃     ┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
   ┃     ┃     ┃  ┃         method: src%cse%Identity.applyOp(uint256)
   ┃     ┃     ┃  ┃
   ┃     ┃     ┃  ┗━━┓ subst: .Subst
   ┃     ┃     ┃     ┃ constraint: true
   ┃     ┃     ┃     │
   ┃     ┃     ┃     ├─ 113 (split)
   ┃     ┃     ┃     │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃     ┃     ┃     │   pc: 148
   ┃     ┃     ┃     │   callDepth: 1
   ┃     ┃     ┃     │   statusCode: STATUSCODE:StatusCode
   ┃     ┃     ┃     │   src: test/nested/SimpleNested.t.sol:7:11
   ┃     ┃     ┃     │   method: src%cse%Identity.applyOp(uint256)
   ┃     ┃     ┃     ┃
   ┃     ┃     ┃     ┃ (branch)
   ┃     ┃     ┃     ┣━━┓ subst: .Subst
   ┃     ┃     ┃     ┃  ┃ constraint: true
   ┃     ┃     ┃     ┃  │
   ┃     ┃     ┃     ┃  └─ 198 (leaf, pending)
   ┃     ┃     ┃     ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃     ┃     ┃     ┃      pc: 148
   ┃     ┃     ┃     ┃      callDepth: 1
   ┃     ┃     ┃     ┃      statusCode: STATUSCODE:StatusCode
   ┃     ┃     ┃     ┃      src: test/nested/SimpleNested.t.sol:7:11
   ┃     ┃     ┃     ┃      method: src%cse%Identity.applyOp(uint256)
   ┃     ┃     ┃     ┃
   ┃     ┃     ┃     ┗━━┓ subst: .Subst
   ┃     ┃     ┃        ┃ constraint: true
   ┃     ┃     ┃        │
   ┃     ┃     ┃        └─ 199 (leaf, pending)
   ┃     ┃     ┃            k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃     ┃     ┃            pc: 148
   ┃     ┃     ┃            callDepth: 1
   ┃     ┃     ┃            statusCode: STATUSCODE:StatusCode
   ┃     ┃     ┃            src: test/nested/SimpleNested.t.sol:7:11
   ┃     ┃     ┃            method: src%cse%Identity.applyOp(uint256)
   ┃     ┃     ┃
   ┃     ┃     ┗━━┓ subst: .Subst
   ┃     ┃        ┃ constraint: true
   ┃     ┃        │
   ┃     ┃        ├─ 71 (split)
   ┃     ┃        │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃     ┃        │   pc: 148
   ┃     ┃        │   callDepth: 1
   ┃     ┃        │   statusCode: STATUSCODE:StatusCode
   ┃     ┃        │   src: test/nested/SimpleNested.t.sol:7:11
   ┃     ┃        │   method: src%cse%Identity.applyOp(uint256)
   ┃     ┃        ┃
   ┃     ┃        ┃ (branch)
   ┃     ┃        ┣━━┓ subst: .Subst
   ┃     ┃        ┃  ┃ constraint: true
   ┃     ┃        ┃  │
   ┃     ┃        ┃  ├─ 114 (split)
   ┃     ┃        ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃     ┃        ┃  │   pc: 148
   ┃     ┃        ┃  │   callDepth: 1
   ┃     ┃        ┃  │   statusCode: STATUSCODE:StatusCode
   ┃     ┃        ┃  │   src: test/nested/SimpleNested.t.sol:7:11
   ┃     ┃        ┃  │   method: src%cse%Identity.applyOp(uint256)
   ┃     ┃        ┃  ┃
   ┃     ┃        ┃  ┃ (branch)
   ┃     ┃        ┃  ┣━━┓ subst: .Subst
   ┃     ┃        ┃  ┃  ┃ constraint: true
   ┃     ┃        ┃  ┃  │
   ┃     ┃        ┃  ┃  └─ 200 (leaf, pending)
   ┃     ┃        ┃  ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃     ┃        ┃  ┃      pc: 148
   ┃     ┃        ┃  ┃      callDepth: 1
   ┃     ┃        ┃  ┃      statusCode: STATUSCODE:StatusCode
   ┃     ┃        ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
   ┃     ┃        ┃  ┃      method: src%cse%Identity.applyOp(uint256)
   ┃     ┃        ┃  ┃
   ┃     ┃        ┃  ┗━━┓ subst: .Subst
   ┃     ┃        ┃     ┃ constraint: true
   ┃     ┃        ┃     │
   ┃     ┃        ┃     └─ 201 (leaf, pending)
   ┃     ┃        ┃         k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃     ┃        ┃         pc: 148
   ┃     ┃        ┃         callDepth: 1
   ┃     ┃        ┃         statusCode: STATUSCODE:StatusCode
   ┃     ┃        ┃         src: test/nested/SimpleNested.t.sol:7:11
   ┃     ┃        ┃         method: src%cse%Identity.applyOp(uint256)
   ┃     ┃        ┃
   ┃     ┃        ┗━━┓ subst: .Subst
   ┃     ┃           ┃ constraint: true
   ┃     ┃           │
   ┃     ┃           ├─ 115 (split)
   ┃     ┃           │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃     ┃           │   pc: 148
   ┃     ┃           │   callDepth: 1
   ┃     ┃           │   statusCode: STATUSCODE:StatusCode
   ┃     ┃           │   src: test/nested/SimpleNested.t.sol:7:11
   ┃     ┃           │   method: src%cse%Identity.applyOp(uint256)
   ┃     ┃           ┃
   ┃     ┃           ┃ (branch)
   ┃     ┃           ┣━━┓ subst: .Subst
   ┃     ┃           ┃  ┃ constraint: true
   ┃     ┃           ┃  │
   ┃     ┃           ┃  └─ 202 (leaf, pending)
   ┃     ┃           ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃     ┃           ┃      pc: 148
   ┃     ┃           ┃      callDepth: 1
   ┃     ┃           ┃      statusCode: STATUSCODE:StatusCode
   ┃     ┃           ┃      src: test/nested/SimpleNested.t.sol:7:11
   ┃     ┃           ┃      method: src%cse%Identity.applyOp(uint256)
   ┃     ┃           ┃
   ┃     ┃           ┗━━┓ subst: .Subst
   ┃     ┃              ┃ constraint: true
   ┃     ┃              │
   ┃     ┃              └─ 203 (leaf, pending)
   ┃     ┃                  k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃     ┃                  pc: 148
   ┃     ┃                  callDepth: 1
   ┃     ┃                  statusCode: STATUSCODE:StatusCode
   ┃     ┃                  src: test/nested/SimpleNested.t.sol:7:11
   ┃     ┃                  method: src%cse%Identity.applyOp(uint256)
   ┃     ┃
   ┃     ┗━━┓ subst: .Subst
   ┃        ┃ constraint: true
   ┃        │
   ┃        ├─ 39 (split)
   ┃        │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃        │   pc: 148
   ┃        │   callDepth: 1
   ┃        │   statusCode: STATUSCODE:StatusCode
   ┃        │   src: test/nested/SimpleNested.t.sol:7:11
   ┃        │   method: src%cse%Identity.applyOp(uint256)
   ┃        ┃
   ┃        ┃ (branch)
   ┃        ┣━━┓ subst: .Subst
   ┃        ┃  ┃ constraint: true
   ┃        ┃  │
   ┃        ┃  ├─ 50 (split)
   ┃        ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃        ┃  │   pc: 148
   ┃        ┃  │   callDepth: 1
   ┃        ┃  │   statusCode: STATUSCODE:StatusCode
   ┃        ┃  │   src: test/nested/SimpleNested.t.sol:7:11
   ┃        ┃  │   method: src%cse%Identity.applyOp(uint256)
   ┃        ┃  ┃
   ┃        ┃  ┃ (branch)
   ┃        ┃  ┣━━┓ subst: .Subst
   ┃        ┃  ┃  ┃ constraint: true
   ┃        ┃  ┃  │
   ┃        ┃  ┃  ├─ 72 (split)
   ┃        ┃  ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃        ┃  ┃  │   pc: 148
   ┃        ┃  ┃  │   callDepth: 1
   ┃        ┃  ┃  │   statusCode: STATUSCODE:StatusCode
   ┃        ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
   ┃        ┃  ┃  │   method: src%cse%Identity.applyOp(uint256)
   ┃        ┃  ┃  ┃
   ┃        ┃  ┃  ┃ (branch)
   ┃        ┃  ┃  ┣━━┓ subst: .Subst
   ┃        ┃  ┃  ┃  ┃ constraint: true
   ┃        ┃  ┃  ┃  │
   ┃        ┃  ┃  ┃  └─ 116 (leaf, pending)
   ┃        ┃  ┃  ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃        ┃  ┃  ┃      pc: 148
   ┃        ┃  ┃  ┃      callDepth: 1
   ┃        ┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
   ┃        ┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
   ┃        ┃  ┃  ┃      method: src%cse%Identity.applyOp(uint256)
   ┃        ┃  ┃  ┃
   ┃        ┃  ┃  ┗━━┓ subst: .Subst
   ┃        ┃  ┃     ┃ constraint: true
   ┃        ┃  ┃     │
   ┃        ┃  ┃     └─ 117 (leaf, pending)
   ┃        ┃  ┃         k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃        ┃  ┃         pc: 148
   ┃        ┃  ┃         callDepth: 1
   ┃        ┃  ┃         statusCode: STATUSCODE:StatusCode
   ┃        ┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
   ┃        ┃  ┃         method: src%cse%Identity.applyOp(uint256)
   ┃        ┃  ┃
   ┃        ┃  ┗━━┓ subst: .Subst
   ┃        ┃     ┃ constraint: true
   ┃        ┃     │
   ┃        ┃     ├─ 73 (split)
   ┃        ┃     │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃        ┃     │   pc: 148
   ┃        ┃     │   callDepth: 1
   ┃        ┃     │   statusCode: STATUSCODE:StatusCode
   ┃        ┃     │   src: test/nested/SimpleNested.t.sol:7:11
   ┃        ┃     │   method: src%cse%Identity.applyOp(uint256)
   ┃        ┃     ┃
   ┃        ┃     ┃ (branch)
   ┃        ┃     ┣━━┓ subst: .Subst
   ┃        ┃     ┃  ┃ constraint: true
   ┃        ┃     ┃  │
   ┃        ┃     ┃  └─ 118 (leaf, pending)
   ┃        ┃     ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃        ┃     ┃      pc: 148
   ┃        ┃     ┃      callDepth: 1
   ┃        ┃     ┃      statusCode: STATUSCODE:StatusCode
   ┃        ┃     ┃      src: test/nested/SimpleNested.t.sol:7:11
   ┃        ┃     ┃      method: src%cse%Identity.applyOp(uint256)
   ┃        ┃     ┃
   ┃        ┃     ┗━━┓ subst: .Subst
   ┃        ┃        ┃ constraint: true
   ┃        ┃        │
   ┃        ┃        └─ 119 (leaf, pending)
   ┃        ┃            k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃        ┃            pc: 148
   ┃        ┃            callDepth: 1
   ┃        ┃            statusCode: STATUSCODE:StatusCode
   ┃        ┃            src: test/nested/SimpleNested.t.sol:7:11
   ┃        ┃            method: src%cse%Identity.applyOp(uint256)
   ┃        ┃
   ┃        ┗━━┓ subst: .Subst
   ┃           ┃ constraint: true
   ┃           │
   ┃           ├─ 51 (split)
   ┃           │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃           │   pc: 148
   ┃           │   callDepth: 1
   ┃           │   statusCode: STATUSCODE:StatusCode
   ┃           │   src: test/nested/SimpleNested.t.sol:7:11
   ┃           │   method: src%cse%Identity.applyOp(uint256)
   ┃           ┃
   ┃           ┃ (branch)
   ┃           ┣━━┓ subst: .Subst
   ┃           ┃  ┃ constraint: true
   ┃           ┃  │
   ┃           ┃  ├─ 74 (split)
   ┃           ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃           ┃  │   pc: 148
   ┃           ┃  │   callDepth: 1
   ┃           ┃  │   statusCode: STATUSCODE:StatusCode
   ┃           ┃  │   src: test/nested/SimpleNested.t.sol:7:11
   ┃           ┃  │   method: src%cse%Identity.applyOp(uint256)
   ┃           ┃  ┃
   ┃           ┃  ┃ (branch)
   ┃           ┃  ┣━━┓ subst: .Subst
   ┃           ┃  ┃  ┃ constraint: true
   ┃           ┃  ┃  │
   ┃           ┃  ┃  └─ 120 (leaf, pending)
   ┃           ┃  ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃           ┃  ┃      pc: 148
   ┃           ┃  ┃      callDepth: 1
   ┃           ┃  ┃      statusCode: STATUSCODE:StatusCode
   ┃           ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
   ┃           ┃  ┃      method: src%cse%Identity.applyOp(uint256)
   ┃           ┃  ┃
   ┃           ┃  ┗━━┓ subst: .Subst
   ┃           ┃     ┃ constraint: true
   ┃           ┃     │
   ┃           ┃     └─ 121 (leaf, pending)
   ┃           ┃         k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃           ┃         pc: 148
   ┃           ┃         callDepth: 1
   ┃           ┃         statusCode: STATUSCODE:StatusCode
   ┃           ┃         src: test/nested/SimpleNested.t.sol:7:11
   ┃           ┃         method: src%cse%Identity.applyOp(uint256)
   ┃           ┃
   ┃           ┗━━┓ subst: .Subst
   ┃              ┃ constraint: true
   ┃              │
   ┃              ├─ 75 (split)
   ┃              │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃              │   pc: 148
   ┃              │   callDepth: 1
   ┃              │   statusCode: STATUSCODE:StatusCode
   ┃              │   src: test/nested/SimpleNested.t.sol:7:11
   ┃              │   method: src%cse%Identity.applyOp(uint256)
   ┃              ┃
   ┃              ┃ (branch)
   ┃              ┣━━┓ subst: .Subst
   ┃              ┃  ┃ constraint: true
   ┃              ┃  │
   ┃              ┃  └─ 122 (leaf, pending)
   ┃              ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃              ┃      pc: 148
   ┃              ┃      callDepth: 1
   ┃              ┃      statusCode: STATUSCODE:StatusCode
   ┃              ┃      src: test/nested/SimpleNested.t.sol:7:11
   ┃              ┃      method: src%cse%Identity.applyOp(uint256)
   ┃              ┃
   ┃              ┗━━┓ subst: .Subst
   ┃                 ┃ constraint: true
   ┃                 │
   ┃                 └─ 123 (leaf, pending)
   ┃                     k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
   ┃                     pc: 148
   ┃                     callDepth: 1
   ┃                     statusCode: STATUSCODE:StatusCode
   ┃                     src: test/nested/SimpleNested.t.sol:7:11
   ┃                     method: src%cse%Identity.applyOp(uint256)
   ┃
   ┗━━┓ subst: .Subst
      ┃ constraint: true
      │
      ├─ 31 (split)
      │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
      │   pc: 148
      │   callDepth: 1
      │   statusCode: STATUSCODE:StatusCode
      │   src: test/nested/SimpleNested.t.sol:7:11
      │   method: src%cse%Identity.applyOp(uint256)
      ┃
      ┃ (branch)
      ┣━━┓ subst: .Subst
      ┃  ┃ constraint: true
      ┃  │
      ┃  ├─ 34 (split)
      ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
      ┃  │   pc: 148
      ┃  │   callDepth: 1
      ┃  │   statusCode: STATUSCODE:StatusCode
      ┃  │   src: test/nested/SimpleNested.t.sol:7:11
      ┃  │   method: src%cse%Identity.applyOp(uint256)
      ┃  ┃
      ┃  ┃ (branch)
      ┃  ┣━━┓ subst: .Subst
      ┃  ┃  ┃ constraint: true
      ┃  ┃  │
      ┃  ┃  ├─ 40 (split)
      ┃  ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
      ┃  ┃  │   pc: 148
      ┃  ┃  │   callDepth: 1
      ┃  ┃  │   statusCode: STATUSCODE:StatusCode
      ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
      ┃  ┃  │   method: src%cse%Identity.applyOp(uint256)
      ┃  ┃  ┃
      ┃  ┃  ┃ (branch)
      ┃  ┃  ┣━━┓ subst: .Subst
      ┃  ┃  ┃  ┃ constraint: true
      ┃  ┃  ┃  │
      ┃  ┃  ┃  ├─ 52 (split)
      ┃  ┃  ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
      ┃  ┃  ┃  │   pc: 148
      ┃  ┃  ┃  │   callDepth: 1
      ┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
      ┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
      ┃  ┃  ┃  │   method: src%cse%Identity.applyOp(uint256)
      ┃  ┃  ┃  ┃
      ┃  ┃  ┃  ┃ (branch)
      ┃  ┃  ┃  ┣━━┓ subst: .Subst
      ┃  ┃  ┃  ┃  ┃ constraint: true
      ┃  ┃  ┃  ┃  │
      ┃  ┃  ┃  ┃  ├─ 76 (split)
      ┃  ┃  ┃  ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
      ┃  ┃  ┃  ┃  │   pc: 148
      ┃  ┃  ┃  ┃  │   callDepth: 1
      ┃  ┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
      ┃  ┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
      ┃  ┃  ┃  ┃  │   method: src%cse%Identity.applyOp(uint256)
      ┃  ┃  ┃  ┃  ┃
      ┃  ┃  ┃  ┃  ┃ (branch)
      ┃  ┃  ┃  ┃  ┣━━┓ subst: .Subst
      ┃  ┃  ┃  ┃  ┃  ┃ constraint: true
      ┃  ┃  ┃  ┃  ┃  │
      ┃  ┃  ┃  ┃  ┃  └─ 124 (leaf, pending)
      ┃  ┃  ┃  ┃  ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
      ┃  ┃  ┃  ┃  ┃      pc: 148
      ┃  ┃  ┃  ┃  ┃      callDepth: 1
      ┃  ┃  ┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
      ┃  ┃  ┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
      ┃  ┃  ┃  ┃  ┃      method: src%cse%Identity.applyOp(uint256)
      ┃  ┃  ┃  ┃  ┃
      ┃  ┃  ┃  ┃  ┗━━┓ subst: .Subst
      ┃  ┃  ┃  ┃     ┃ constraint: true
      ┃  ┃  ┃  ┃     │
      ┃  ┃  ┃  ┃     └─ 125 (leaf, pending)
      ┃  ┃  ┃  ┃         k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
      ┃  ┃  ┃  ┃         pc: 148
      ┃  ┃  ┃  ┃         callDepth: 1
      ┃  ┃  ┃  ┃         statusCode: STATUSCODE:StatusCode
      ┃  ┃  ┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
      ┃  ┃  ┃  ┃         method: src%cse%Identity.applyOp(uint256)
      ┃  ┃  ┃  ┃
      ┃  ┃  ┃  ┗━━┓ subst: .Subst
      ┃  ┃  ┃     ┃ constraint: true
      ┃  ┃  ┃     │
      ┃  ┃  ┃     ├─ 77 (split)
      ┃  ┃  ┃     │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
      ┃  ┃  ┃     │   pc: 148
      ┃  ┃  ┃     │   callDepth: 1
      ┃  ┃  ┃     │   statusCode: STATUSCODE:StatusCode
      ┃  ┃  ┃     │   src: test/nested/SimpleNested.t.sol:7:11
      ┃  ┃  ┃     │   method: src%cse%Identity.applyOp(uint256)
      ┃  ┃  ┃     ┃
      ┃  ┃  ┃     ┃ (branch)
      ┃  ┃  ┃     ┣━━┓ subst: .Subst
      ┃  ┃  ┃     ┃  ┃ constraint: true
      ┃  ┃  ┃     ┃  │
      ┃  ┃  ┃     ┃  └─ 126 (leaf, pending)
      ┃  ┃  ┃     ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
      ┃  ┃  ┃     ┃      pc: 148
      ┃  ┃  ┃     ┃      callDepth: 1
      ┃  ┃  ┃     ┃      statusCode: STATUSCODE:StatusCode
      ┃  ┃  ┃     ┃      src: test/nested/SimpleNested.t.sol:7:11
      ┃  ┃  ┃     ┃      method: src%cse%Identity.applyOp(uint256)
      ┃  ┃  ┃     ┃
      ┃  ┃  ┃     ┗━━┓ subst: .Subst
      ┃  ┃  ┃        ┃ constraint: true
      ┃  ┃  ┃        │
      ┃  ┃  ┃        └─ 127 (leaf, pending)
      ┃  ┃  ┃            k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
      ┃  ┃  ┃            pc: 148
      ┃  ┃  ┃            callDepth: 1
      ┃  ┃  ┃            statusCode: STATUSCODE:StatusCode
      ┃  ┃  ┃            src: test/nested/SimpleNested.t.sol:7:11
      ┃  ┃  ┃            method: src%cse%Identity.applyOp(uint256)
      ┃  ┃  ┃
      ┃  ┃  ┗━━┓ subst: .Subst
      ┃  ┃     ┃ constraint: true
      ┃  ┃     │
      ┃  ┃     ├─ 53 (split)
      ┃  ┃     │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
      ┃  ┃     │   pc: 148
      ┃  ┃     │   callDepth: 1
      ┃  ┃     │   statusCode: STATUSCODE:StatusCode
      ┃  ┃     │   src: test/nested/SimpleNested.t.sol:7:11
      ┃  ┃     │   method: src%cse%Identity.applyOp(uint256)
      ┃  ┃     ┃
      ┃  ┃     ┃ (branch)
      ┃  ┃     ┣━━┓ subst: .Subst
      ┃  ┃     ┃  ┃ constraint: true
      ┃  ┃     ┃  │
      ┃  ┃     ┃  ├─ 78 (split)
      ┃  ┃     ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
      ┃  ┃     ┃  │   pc: 148
      ┃  ┃     ┃  │   callDepth: 1
      ┃  ┃     ┃  │   statusCode: STATUSCODE:StatusCode
      ┃  ┃     ┃  │   src: test/nested/SimpleNested.t.sol:7:11
      ┃  ┃     ┃  │   method: src%cse%Identity.applyOp(uint256)
      ┃  ┃     ┃  ┃
      ┃  ┃     ┃  ┃ (branch)
      ┃  ┃     ┃  ┣━━┓ subst: .Subst
      ┃  ┃     ┃  ┃  ┃ constraint: true
      ┃  ┃     ┃  ┃  │
      ┃  ┃     ┃  ┃  └─ 128 (leaf, pending)
      ┃  ┃     ┃  ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
      ┃  ┃     ┃  ┃      pc: 148
      ┃  ┃     ┃  ┃      callDepth: 1
      ┃  ┃     ┃  ┃      statusCode: STATUSCODE:StatusCode
      ┃  ┃     ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
      ┃  ┃     ┃  ┃      method: src%cse%Identity.applyOp(uint256)
      ┃  ┃     ┃  ┃
      ┃  ┃     ┃  ┗━━┓ subst: .Subst
      ┃  ┃     ┃     ┃ constraint: true
      ┃  ┃     ┃     │
      ┃  ┃     ┃     └─ 129 (leaf, pending)
      ┃  ┃     ┃         k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
      ┃  ┃     ┃         pc: 148
      ┃  ┃     ┃         callDepth: 1
      ┃  ┃     ┃         statusCode: STATUSCODE:StatusCode
      ┃  ┃     ┃         src: test/nested/SimpleNested.t.sol:7:11
      ┃  ┃     ┃         method: src%cse%Identity.applyOp(uint256)
      ┃  ┃     ┃
      ┃  ┃     ┗━━┓ subst: .Subst
      ┃  ┃        ┃ constraint: true
      ┃  ┃        │
      ┃  ┃        ├─ 79 (split)
      ┃  ┃        │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
      ┃  ┃        │   pc: 148
      ┃  ┃        │   callDepth: 1
      ┃  ┃        │   statusCode: STATUSCODE:StatusCode
      ┃  ┃        │   src: test/nested/SimpleNested.t.sol:7:11
      ┃  ┃        │   method: src%cse%Identity.applyOp(uint256)
      ┃  ┃        ┃
      ┃  ┃        ┃ (branch)
      ┃  ┃        ┣━━┓ subst: .Subst
      ┃  ┃        ┃  ┃ constraint: true
      ┃  ┃        ┃  │
      ┃  ┃        ┃  └─ 130 (leaf, pending)
      ┃  ┃        ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
      ┃  ┃        ┃      pc: 148
      ┃  ┃        ┃      callDepth: 1
      ┃  ┃        ┃      statusCode: STATUSCODE:StatusCode
      ┃  ┃        ┃      src: test/nested/SimpleNested.t.sol:7:11
      ┃  ┃        ┃      method: src%cse%Identity.applyOp(uint256)
      ┃  ┃        ┃
      ┃  ┃        ┗━━┓ subst: .Subst
      ┃  ┃           ┃ constraint: true
      ┃  ┃           │
      ┃  ┃           └─ 131 (leaf, pending)
      ┃  ┃               k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
      ┃  ┃               pc: 148
      ┃  ┃               callDepth: 1
      ┃  ┃               statusCode: STATUSCODE:StatusCode
      ┃  ┃               src: test/nested/SimpleNested.t.sol:7:11
      ┃  ┃               method: src%cse%Identity.applyOp(uint256)
      ┃  ┃
      ┃  ┗━━┓ subst: .Subst
      ┃     ┃ constraint: true
      ┃     │
      ┃     ├─ 41 (split)
      ┃     │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
      ┃     │   pc: 148
      ┃     │   callDepth: 1
      ┃     │   statusCode: STATUSCODE:StatusCode
      ┃     │   src: test/nested/SimpleNested.t.sol:7:11
      ┃     │   method: src%cse%Identity.applyOp(uint256)
      ┃     ┃
      ┃     ┃ (branch)
      ┃     ┣━━┓ subst: .Subst
      ┃     ┃  ┃ constraint: true
      ┃     ┃  │
      ┃     ┃  ├─ 54 (split)
      ┃     ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
      ┃     ┃  │   pc: 148
      ┃     ┃  │   callDepth: 1
      ┃     ┃  │   statusCode: STATUSCODE:StatusCode
      ┃     ┃  │   src: test/nested/SimpleNested.t.sol:7:11
      ┃     ┃  │   method: src%cse%Identity.applyOp(uint256)
      ┃     ┃  ┃
      ┃     ┃  ┃ (branch)
      ┃     ┃  ┣━━┓ subst: .Subst
      ┃     ┃  ┃  ┃ constraint: true
      ┃     ┃  ┃  │
      ┃     ┃  ┃  ├─ 80 (split)
      ┃     ┃  ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
      ┃     ┃  ┃  │   pc: 148
      ┃     ┃  ┃  │   callDepth: 1
      ┃     ┃  ┃  │   statusCode: STATUSCODE:StatusCode
      ┃     ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
      ┃     ┃  ┃  │   method: src%cse%Identity.applyOp(uint256)
      ┃     ┃  ┃  ┃
      ┃     ┃  ┃  ┃ (branch)
      ┃     ┃  ┃  ┣━━┓ subst: .Subst
      ┃     ┃  ┃  ┃  ┃ constraint: true
      ┃     ┃  ┃  ┃  │
      ┃     ┃  ┃  ┃  └─ 132 (leaf, pending)
      ┃     ┃  ┃  ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
      ┃     ┃  ┃  ┃      pc: 148
      ┃     ┃  ┃  ┃      callDepth: 1
      ┃     ┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
      ┃     ┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
      ┃     ┃  ┃  ┃      method: src%cse%Identity.applyOp(uint256)
      ┃     ┃  ┃  ┃
      ┃     ┃  ┃  ┗━━┓ subst: .Subst
      ┃     ┃  ┃     ┃ constraint: true
      ┃     ┃  ┃     │
      ┃     ┃  ┃     └─ 133 (leaf, pending)
      ┃     ┃  ┃         k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
      ┃     ┃  ┃         pc: 148
      ┃     ┃  ┃         callDepth: 1
      ┃     ┃  ┃         statusCode: STATUSCODE:StatusCode
      ┃     ┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
      ┃     ┃  ┃         method: src%cse%Identity.applyOp(uint256)
      ┃     ┃  ┃
      ┃     ┃  ┗━━┓ subst: .Subst
      ┃     ┃     ┃ constraint: true
      ┃     ┃     │
      ┃     ┃     ├─ 81 (split)
      ┃     ┃     │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
      ┃     ┃     │   pc: 148
      ┃     ┃     │   callDepth: 1
      ┃     ┃     │   statusCode: STATUSCODE:StatusCode
      ┃     ┃     │   src: test/nested/SimpleNested.t.sol:7:11
      ┃     ┃     │   method: src%cse%Identity.applyOp(uint256)
      ┃     ┃     ┃
      ┃     ┃     ┃ (branch)
      ┃     ┃     ┣━━┓ subst: .Subst
      ┃     ┃     ┃  ┃ constraint: true
      ┃     ┃     ┃  │
      ┃     ┃     ┃  └─ 134 (leaf, pending)
      ┃     ┃     ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
      ┃     ┃     ┃      pc: 148
      ┃     ┃     ┃      callDepth: 1
      ┃     ┃     ┃      statusCode: STATUSCODE:StatusCode
      ┃     ┃     ┃      src: test/nested/SimpleNested.t.sol:7:11
      ┃     ┃     ┃      method: src%cse%Identity.applyOp(uint256)
      ┃     ┃     ┃
      ┃     ┃     ┗━━┓ subst: .Subst
      ┃     ┃        ┃ constraint: true
      ┃     ┃        │
      ┃     ┃        └─ 135 (leaf, pending)
      ┃     ┃            k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
      ┃     ┃            pc: 148
      ┃     ┃            callDepth: 1
      ┃     ┃            statusCode: STATUSCODE:StatusCode
      ┃     ┃            src: test/nested/SimpleNested.t.sol:7:11
      ┃     ┃            method: src%cse%Identity.applyOp(uint256)
      ┃     ┃
      ┃     ┗━━┓ subst: .Subst
      ┃        ┃ constraint: true
      ┃        │
      ┃        ├─ 55 (split)
      ┃        │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
      ┃        │   pc: 148
      ┃        │   callDepth: 1
      ┃        │   statusCode: STATUSCODE:StatusCode
      ┃        │   src: test/nested/SimpleNested.t.sol:7:11
      ┃        │   method: src%cse%Identity.applyOp(uint256)
      ┃        ┃
      ┃        ┃ (branch)
      ┃        ┣━━┓ subst: .Subst
      ┃        ┃  ┃ constraint: true
      ┃        ┃  │
      ┃        ┃  ├─ 82 (split)
      ┃        ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
      ┃        ┃  │   pc: 148
      ┃        ┃  │   callDepth: 1
      ┃        ┃  │   statusCode: STATUSCODE:StatusCode
      ┃        ┃  │   src: test/nested/SimpleNested.t.sol:7:11
      ┃        ┃  │   method: src%cse%Identity.applyOp(uint256)
      ┃        ┃  ┃
      ┃        ┃  ┃ (branch)
      ┃        ┃  ┣━━┓ subst: .Subst
      ┃        ┃  ┃  ┃ constraint: true
      ┃        ┃  ┃  │
      ┃        ┃  ┃  └─ 136 (leaf, pending)
      ┃        ┃  ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
      ┃        ┃  ┃      pc: 148
      ┃        ┃  ┃      callDepth: 1
      ┃        ┃  ┃      statusCode: STATUSCODE:StatusCode
      ┃        ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
      ┃        ┃  ┃      method: src%cse%Identity.applyOp(uint256)
      ┃        ┃  ┃
      ┃        ┃  ┗━━┓ subst: .Subst
      ┃        ┃     ┃ constraint: true
      ┃        ┃     │
      ┃        ┃     └─ 137 (leaf, pending)
      ┃        ┃         k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
      ┃        ┃         pc: 148
      ┃        ┃         callDepth: 1
      ┃        ┃         statusCode: STATUSCODE:StatusCode
      ┃        ┃         src: test/nested/SimpleNested.t.sol:7:11
      ┃        ┃         method: src%cse%Identity.applyOp(uint256)
      ┃        ┃
      ┃        ┗━━┓ subst: .Subst
      ┃           ┃ constraint: true
      ┃           │
      ┃           ├─ 83 (split)
      ┃           │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
      ┃           │   pc: 148
      ┃           │   callDepth: 1
      ┃           │   statusCode: STATUSCODE:StatusCode
      ┃           │   src: test/nested/SimpleNested.t.sol:7:11
      ┃           │   method: src%cse%Identity.applyOp(uint256)
      ┃           ┃
      ┃           ┃ (branch)
      ┃           ┣━━┓ subst: .Subst
      ┃           ┃  ┃ constraint: true
      ┃           ┃  │
      ┃           ┃  └─ 138 (leaf, pending)
      ┃           ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
      ┃           ┃      pc: 148
      ┃           ┃      callDepth: 1
      ┃           ┃      statusCode: STATUSCODE:StatusCode
      ┃           ┃      src: test/nested/SimpleNested.t.sol:7:11
      ┃           ┃      method: src%cse%Identity.applyOp(uint256)
      ┃           ┃
      ┃           ┗━━┓ subst: .Subst
      ┃              ┃ constraint: true
      ┃              │
      ┃              └─ 139 (leaf, pending)
      ┃                  k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
      ┃                  pc: 148
      ┃                  callDepth: 1
      ┃                  statusCode: STATUSCODE:StatusCode
      ┃                  src: test/nested/SimpleNested.t.sol:7:11
      ┃                  method: src%cse%Identity.applyOp(uint256)
      ┃
      ┗━━┓ subst: .Subst
         ┃ constraint: true
         │
         ├─ 35 (split)
         │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
         │   pc: 148
         │   callDepth: 1
         │   statusCode: STATUSCODE:StatusCode
         │   src: test/nested/SimpleNested.t.sol:7:11
         │   method: src%cse%Identity.applyOp(uint256)
         ┃
         ┃ (branch)
         ┣━━┓ subst: .Subst
         ┃  ┃ constraint: true
         ┃  │
         ┃  ├─ 42 (split)
         ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
         ┃  │   pc: 148
         ┃  │   callDepth: 1
         ┃  │   statusCode: STATUSCODE:StatusCode
         ┃  │   src: test/nested/SimpleNested.t.sol:7:11
         ┃  │   method: src%cse%Identity.applyOp(uint256)
         ┃  ┃
         ┃  ┃ (branch)
         ┃  ┣━━┓ subst: .Subst
         ┃  ┃  ┃ constraint: true
         ┃  ┃  │
         ┃  ┃  ├─ 56 (split)
         ┃  ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
         ┃  ┃  │   pc: 148
         ┃  ┃  │   callDepth: 1
         ┃  ┃  │   statusCode: STATUSCODE:StatusCode
         ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
         ┃  ┃  │   method: src%cse%Identity.applyOp(uint256)
         ┃  ┃  ┃
         ┃  ┃  ┃ (branch)
         ┃  ┃  ┣━━┓ subst: .Subst
         ┃  ┃  ┃  ┃ constraint: true
         ┃  ┃  ┃  │
         ┃  ┃  ┃  ├─ 84 (split)
         ┃  ┃  ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
         ┃  ┃  ┃  │   pc: 148
         ┃  ┃  ┃  │   callDepth: 1
         ┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
         ┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
         ┃  ┃  ┃  │   method: src%cse%Identity.applyOp(uint256)
         ┃  ┃  ┃  ┃
         ┃  ┃  ┃  ┃ (branch)
         ┃  ┃  ┃  ┣━━┓ subst: .Subst
         ┃  ┃  ┃  ┃  ┃ constraint: true
         ┃  ┃  ┃  ┃  │
         ┃  ┃  ┃  ┃  └─ 140 (leaf, pending)
         ┃  ┃  ┃  ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
         ┃  ┃  ┃  ┃      pc: 148
         ┃  ┃  ┃  ┃      callDepth: 1
         ┃  ┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
         ┃  ┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
         ┃  ┃  ┃  ┃      method: src%cse%Identity.applyOp(uint256)
         ┃  ┃  ┃  ┃
         ┃  ┃  ┃  ┗━━┓ subst: .Subst
         ┃  ┃  ┃     ┃ constraint: true
         ┃  ┃  ┃     │
         ┃  ┃  ┃     └─ 141 (leaf, pending)
         ┃  ┃  ┃         k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
         ┃  ┃  ┃         pc: 148
         ┃  ┃  ┃         callDepth: 1
         ┃  ┃  ┃         statusCode: STATUSCODE:StatusCode
         ┃  ┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
         ┃  ┃  ┃         method: src%cse%Identity.applyOp(uint256)
         ┃  ┃  ┃
         ┃  ┃  ┗━━┓ subst: .Subst
         ┃  ┃     ┃ constraint: true
         ┃  ┃     │
         ┃  ┃     ├─ 85 (split)
         ┃  ┃     │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
         ┃  ┃     │   pc: 148
         ┃  ┃     │   callDepth: 1
         ┃  ┃     │   statusCode: STATUSCODE:StatusCode
         ┃  ┃     │   src: test/nested/SimpleNested.t.sol:7:11
         ┃  ┃     │   method: src%cse%Identity.applyOp(uint256)
         ┃  ┃     ┃
         ┃  ┃     ┃ (branch)
         ┃  ┃     ┣━━┓ subst: .Subst
         ┃  ┃     ┃  ┃ constraint: true
         ┃  ┃     ┃  │
         ┃  ┃     ┃  └─ 142 (leaf, pending)
         ┃  ┃     ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
         ┃  ┃     ┃      pc: 148
         ┃  ┃     ┃      callDepth: 1
         ┃  ┃     ┃      statusCode: STATUSCODE:StatusCode
         ┃  ┃     ┃      src: test/nested/SimpleNested.t.sol:7:11
         ┃  ┃     ┃      method: src%cse%Identity.applyOp(uint256)
         ┃  ┃     ┃
         ┃  ┃     ┗━━┓ subst: .Subst
         ┃  ┃        ┃ constraint: true
         ┃  ┃        │
         ┃  ┃        └─ 143 (leaf, pending)
         ┃  ┃            k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
         ┃  ┃            pc: 148
         ┃  ┃            callDepth: 1
         ┃  ┃            statusCode: STATUSCODE:StatusCode
         ┃  ┃            src: test/nested/SimpleNested.t.sol:7:11
         ┃  ┃            method: src%cse%Identity.applyOp(uint256)
         ┃  ┃
         ┃  ┗━━┓ subst: .Subst
         ┃     ┃ constraint: true
         ┃     │
         ┃     ├─ 57 (split)
         ┃     │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
         ┃     │   pc: 148
         ┃     │   callDepth: 1
         ┃     │   statusCode: STATUSCODE:StatusCode
         ┃     │   src: test/nested/SimpleNested.t.sol:7:11
         ┃     │   method: src%cse%Identity.applyOp(uint256)
         ┃     ┃
         ┃     ┃ (branch)
         ┃     ┣━━┓ subst: .Subst
         ┃     ┃  ┃ constraint: true
         ┃     ┃  │
         ┃     ┃  ├─ 86 (split)
         ┃     ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
         ┃     ┃  │   pc: 148
         ┃     ┃  │   callDepth: 1
         ┃     ┃  │   statusCode: STATUSCODE:StatusCode
         ┃     ┃  │   src: test/nested/SimpleNested.t.sol:7:11
         ┃     ┃  │   method: src%cse%Identity.applyOp(uint256)
         ┃     ┃  ┃
         ┃     ┃  ┃ (branch)
         ┃     ┃  ┣━━┓ subst: .Subst
         ┃     ┃  ┃  ┃ constraint: true
         ┃     ┃  ┃  │
         ┃     ┃  ┃  └─ 144 (leaf, pending)
         ┃     ┃  ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
         ┃     ┃  ┃      pc: 148
         ┃     ┃  ┃      callDepth: 1
         ┃     ┃  ┃      statusCode: STATUSCODE:StatusCode
         ┃     ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
         ┃     ┃  ┃      method: src%cse%Identity.applyOp(uint256)
         ┃     ┃  ┃
         ┃     ┃  ┗━━┓ subst: .Subst
         ┃     ┃     ┃ constraint: true
         ┃     ┃     │
         ┃     ┃     └─ 145 (leaf, pending)
         ┃     ┃         k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
         ┃     ┃         pc: 148
         ┃     ┃         callDepth: 1
         ┃     ┃         statusCode: STATUSCODE:StatusCode
         ┃     ┃         src: test/nested/SimpleNested.t.sol:7:11
         ┃     ┃         method: src%cse%Identity.applyOp(uint256)
         ┃     ┃
         ┃     ┗━━┓ subst: .Subst
         ┃        ┃ constraint: true
         ┃        │
         ┃        ├─ 87 (split)
         ┃        │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
         ┃        │   pc: 148
         ┃        │   callDepth: 1
         ┃        │   statusCode: STATUSCODE:StatusCode
         ┃        │   src: test/nested/SimpleNested.t.sol:7:11
         ┃        │   method: src%cse%Identity.applyOp(uint256)
         ┃        ┃
         ┃        ┃ (branch)
         ┃        ┣━━┓ subst: .Subst
         ┃        ┃  ┃ constraint: true
         ┃        ┃  │
         ┃        ┃  └─ 146 (leaf, pending)
         ┃        ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
         ┃        ┃      pc: 148
         ┃        ┃      callDepth: 1
         ┃        ┃      statusCode: STATUSCODE:StatusCode
         ┃        ┃      src: test/nested/SimpleNested.t.sol:7:11
         ┃        ┃      method: src%cse%Identity.applyOp(uint256)
         ┃        ┃
         ┃        ┗━━┓ subst: .Subst
         ┃           ┃ constraint: true
         ┃           │
         ┃           └─ 147 (leaf, pending)
         ┃               k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
         ┃               pc: 148
         ┃               callDepth: 1
         ┃               statusCode: STATUSCODE:StatusCode
         ┃               src: test/nested/SimpleNested.t.sol:7:11
         ┃               method: src%cse%Identity.applyOp(uint256)
         ┃
         ┗━━┓ subst: .Subst
            ┃ constraint: true
            │
            ├─ 43 (split)
            │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
            │   pc: 148
            │   callDepth: 1
            │   statusCode: STATUSCODE:StatusCode
            │   src: test/nested/SimpleNested.t.sol:7:11
            │   method: src%cse%Identity.applyOp(uint256)
            ┃
            ┃ (branch)
            ┣━━┓ subst: .Subst
            ┃  ┃ constraint: true
            ┃  │
            ┃  ├─ 58 (split)
            ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
            ┃  │   pc: 148
            ┃  │   callDepth: 1
            ┃  │   statusCode: STATUSCODE:StatusCode
            ┃  │   src: test/nested/SimpleNested.t.sol:7:11
            ┃  │   method: src%cse%Identity.applyOp(uint256)
            ┃  ┃
            ┃  ┃ (branch)
            ┃  ┣━━┓ subst: .Subst
            ┃  ┃  ┃ constraint: true
            ┃  ┃  │
            ┃  ┃  ├─ 88 (split)
            ┃  ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
            ┃  ┃  │   pc: 148
            ┃  ┃  │   callDepth: 1
            ┃  ┃  │   statusCode: STATUSCODE:StatusCode
            ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
            ┃  ┃  │   method: src%cse%Identity.applyOp(uint256)
            ┃  ┃  ┃
            ┃  ┃  ┃ (branch)
            ┃  ┃  ┣━━┓ subst: .Subst
            ┃  ┃  ┃  ┃ constraint: true
            ┃  ┃  ┃  │
            ┃  ┃  ┃  └─ 148 (leaf, pending)
            ┃  ┃  ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
            ┃  ┃  ┃      pc: 148
            ┃  ┃  ┃      callDepth: 1
            ┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
            ┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
            ┃  ┃  ┃      method: src%cse%Identity.applyOp(uint256)
            ┃  ┃  ┃
            ┃  ┃  ┗━━┓ subst: .Subst
            ┃  ┃     ┃ constraint: true
            ┃  ┃     │
            ┃  ┃     └─ 149 (leaf, pending)
            ┃  ┃         k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
            ┃  ┃         pc: 148
            ┃  ┃         callDepth: 1
            ┃  ┃         statusCode: STATUSCODE:StatusCode
            ┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
            ┃  ┃         method: src%cse%Identity.applyOp(uint256)
            ┃  ┃
            ┃  ┗━━┓ subst: .Subst
            ┃     ┃ constraint: true
            ┃     │
            ┃     ├─ 89 (split)
            ┃     │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
            ┃     │   pc: 148
            ┃     │   callDepth: 1
            ┃     │   statusCode: STATUSCODE:StatusCode
            ┃     │   src: test/nested/SimpleNested.t.sol:7:11
            ┃     │   method: src%cse%Identity.applyOp(uint256)
            ┃     ┃
            ┃     ┃ (branch)
            ┃     ┣━━┓ subst: .Subst
            ┃     ┃  ┃ constraint: true
            ┃     ┃  │
            ┃     ┃  └─ 150 (leaf, pending)
            ┃     ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
            ┃     ┃      pc: 148
            ┃     ┃      callDepth: 1
            ┃     ┃      statusCode: STATUSCODE:StatusCode
            ┃     ┃      src: test/nested/SimpleNested.t.sol:7:11
            ┃     ┃      method: src%cse%Identity.applyOp(uint256)
            ┃     ┃
            ┃     ┗━━┓ subst: .Subst
            ┃        ┃ constraint: true
            ┃        │
            ┃        └─ 151 (leaf, pending)
            ┃            k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
            ┃            pc: 148
            ┃            callDepth: 1
            ┃            statusCode: STATUSCODE:StatusCode
            ┃            src: test/nested/SimpleNested.t.sol:7:11
            ┃            method: src%cse%Identity.applyOp(uint256)
            ┃
            ┗━━┓ subst: .Subst
               ┃ constraint: true
               │
               ├─ 59 (split)
               │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
               │   pc: 148
               │   callDepth: 1
               │   statusCode: STATUSCODE:StatusCode
               │   src: test/nested/SimpleNested.t.sol:7:11
               │   method: src%cse%Identity.applyOp(uint256)
               ┃
               ┃ (branch)
               ┣━━┓ subst: .Subst
               ┃  ┃ constraint: true
               ┃  │
               ┃  ├─ 90 (split)
               ┃  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
               ┃  │   pc: 148
               ┃  │   callDepth: 1
               ┃  │   statusCode: STATUSCODE:StatusCode
               ┃  │   src: test/nested/SimpleNested.t.sol:7:11
               ┃  │   method: src%cse%Identity.applyOp(uint256)
               ┃  ┃
               ┃  ┃ (branch)
               ┃  ┣━━┓ subst: .Subst
               ┃  ┃  ┃ constraint: true
               ┃  ┃  │
               ┃  ┃  └─ 152 (leaf, pending)
               ┃  ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
               ┃  ┃      pc: 148
               ┃  ┃      callDepth: 1
               ┃  ┃      statusCode: STATUSCODE:StatusCode
               ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
               ┃  ┃      method: src%cse%Identity.applyOp(uint256)
               ┃  ┃
               ┃  ┗━━┓ subst: .Subst
               ┃     ┃ constraint: true
               ┃     │
               ┃     └─ 153 (leaf, pending)
               ┃         k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
               ┃         pc: 148
               ┃         callDepth: 1
               ┃         statusCode: STATUSCODE:StatusCode
               ┃         src: test/nested/SimpleNested.t.sol:7:11
               ┃         method: src%cse%Identity.applyOp(uint256)
               ┃
               ┗━━┓ subst: .Subst
                  ┃ constraint: true
                  │
                  ├─ 91 (split)
                  │   k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
                  │   pc: 148
                  │   callDepth: 1
                  │   statusCode: STATUSCODE:StatusCode
                  │   src: test/nested/SimpleNested.t.sol:7:11
                  │   method: src%cse%Identity.applyOp(uint256)
                  ┃
                  ┃ (branch)
                  ┣━━┓ subst: .Subst
                  ┃  ┃ constraint: true
                  ┃  │
                  ┃  └─ 154 (leaf, pending)
                  ┃      k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
                  ┃      pc: 148
                  ┃      callDepth: 1
                  ┃      statusCode: STATUSCODE:StatusCode
                  ┃      src: test/nested/SimpleNested.t.sol:7:11
                  ┃      method: src%cse%Identity.applyOp(uint256)
                  ┃
                  ┗━━┓ subst: .Subst
                     ┃ constraint: true
                     │
                     └─ 155 (leaf, pending)
                         k: #checkDepthExceeded ~> #call 491460923342184218035706888008750043977755113263 49 ...
                         pc: 148
                         callDepth: 1
                         statusCode: STATUSCODE:StatusCode
                         src: test/nested/SimpleNested.t.sol:7:11
                         method: src%cse%Identity.applyOp(uint256)


┌─ 16 (root, leaf, target, terminal)
│   k: #halt ~> CONTINUATION:K
│   pc: PC_CELL_5d410f2a:Int
│   callDepth: CALLDEPTH_CELL_5d410f2a:Int
│   statusCode: STATUSCODE_FINAL:StatusCode



module SUMMARY-TEST%CSETEST.TEST-IDENTITY(UINT256,UINT256):0
    
    
    rule [BASIC-BLOCK-1-TO-14]: <foundry>
           <kevm>
             <k>
               ( #execute => #halt )
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <statusCode>
                   ( _STATUSCODE => EVMC_SUCCESS )
                 </statusCode>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   ( .Set => ( SetItem ( 1405310203571408291950365054053061012934685786634 ) ( SetItem ( 263400868551549723330807389252719309078400616203 ) ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) ) ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"\n\x92T\xe4"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( .WordStack => ( selector ( "setUp()" ) : .WordStack ) )
                   </wordStack>
                   <localMem>
                     ( b"" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00`\x80`@R4\x80\x15a\x00\x10W`\x00\x80\xfd[Pa\x01Y\x80a\x00 `\x009`\x00\xf3\xfe`\x80`@R4\x80\x15a\x00\x10W`\x00\x80\xfd[P`\x046\x10a\x00+W`\x005`\xe0\x1c\x80c\xc0\xa0\xcd\xc4\x14a\x000W[`\x00\x80\xfd[a\x00Ca\x00>6`\x04a\x00\xecV[a\x00UV[`@Q\x90\x81R` \x01`@Q\x80\x91\x03\x90\xf3[`\x00[\x81\x15a\x00\xe6W`\x00T`@Qc0(3q`\xe2\x1b\x81R`\x04\x81\x01\x83\x90R`$\x81\x01\x85\x90R`\x01`\x01`\xa0\x1b\x03\x90\x91\x16\x90c\xc0\xa0\xcd\xc4\x90`D\x01` `@Q\x80\x83\x03\x81\x86Z\xfa\x15\x80\x15a\x00\xaeW=`\x00\x80>=`\x00\xfd[PPPP`@Q=`\x1f\x19`\x1f\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x00\xd2\x91\x90a\x01\x0eV[\x90P\x81a\x00\xde\x81a\x01'V[\x92PPa\x00XV[\x92\x91PPV[`\x00\x80`@\x83\x85\x03\x12\x15a\x00\xffW`\x00\x80\xfd[PP\x805\x92` \x90\x91\x015\x91PV[`\x00` \x82\x84\x03\x12\x15a\x01 W`\x00\x80\xfd[PQ\x91\x90PV[`\x00\x81a\x01DWcNH{q`\xe0\x1b`\x00R`\x11`\x04R`$`\x00\xfd[P`\x00\x19\x01\x90V\xfe\xa1dsolcC\x00\x08\r\x00\n" )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( .Set => ( SetItem ( 1405310203571408291950365054053061012934685786634 ) ( SetItem ( 263400868551549723330807389252719309078400616203 ) ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) ) ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       ( 645326474426547203313410069153905908525362434349 => 1405310203571408291950365054053061012934685786634 )
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       ( 0 => 1 )
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( ( 11 |-> 1 )
                       ( 7 |-> 1 ) )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account> => ( <account>
                     <acctID>
                       263400868551549723330807389252719309078400616203
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( ( 11 |-> 1 )
                       ( ( 27 |-> 491460923342184218035706888008750043977755113263 )
                       ( ( 28 |-> 263400868551549723330807389252719309078400616203 )
                       ( ( 29 |-> 1405310203571408291950365054053061012934685786634 )
                       ( 7 |-> 1 ) ) ) ) )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       4
                     </nonce>
                     ...
                   </account> ) ) ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
               ))))))))))))
      [priority(20), label(BASIC-BLOCK-1-TO-14)]
    
    rule [BASIC-BLOCK-14-TO-15]: <foundry>
           <kevm>
             <k>
               ( #halt => #execute )
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <statusCode>
                   ( EVMC_SUCCESS => ?_STATUSCODE )
                 </statusCode>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   ( ( SetItem ( 1405310203571408291950365054053061012934685786634 ) ( SetItem ( 263400868551549723330807389252719309078400616203 ) ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) ) ) => .Set )
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     ( b"\n\x92T\xe4" => b"\xc0\xbd\x83$" +Bytes #buf ( 32 , ?KV0_x ) +Bytes #buf ( 32 , ?KV1_y ) )
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( selector ( "setUp()" ) : .WordStack ) => .WordStack )
                   </wordStack>
                   <localMem>
                     ( b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00`\x80`@R4\x80\x15a\x00\x10W`\x00\x80\xfd[Pa\x01Y\x80a\x00 `\x009`\x00\xf3\xfe`\x80`@R4\x80\x15a\x00\x10W`\x00\x80\xfd[P`\x046\x10a\x00+W`\x005`\xe0\x1c\x80c\xc0\xa0\xcd\xc4\x14a\x000W[`\x00\x80\xfd[a\x00Ca\x00>6`\x04a\x00\xecV[a\x00UV[`@Q\x90\x81R` \x01`@Q\x80\x91\x03\x90\xf3[`\x00[\x81\x15a\x00\xe6W`\x00T`@Qc0(3q`\xe2\x1b\x81R`\x04\x81\x01\x83\x90R`$\x81\x01\x85\x90R`\x01`\x01`\xa0\x1b\x03\x90\x91\x16\x90c\xc0\xa0\xcd\xc4\x90`D\x01` `@Q\x80\x83\x03\x81\x86Z\xfa\x15\x80\x15a\x00\xaeW=`\x00\x80>=`\x00\xfd[PPPP`@Q=`\x1f\x19`\x1f\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x00\xd2\x91\x90a\x01\x0eV[\x90P\x81a\x00\xde\x81a\x01'V[\x92PPa\x00XV[\x92\x91PPV[`\x00\x80`@\x83\x85\x03\x12\x15a\x00\xffW`\x00\x80\xfd[PP\x805\x92` \x90\x91\x015\x91PV[`\x00` \x82\x84\x03\x12\x15a\x01 W`\x00\x80\xfd[PQ\x91\x90PV[`\x00\x81a\x01DWcNH{q`\xe0\x1b`\x00R`\x11`\x04R`$`\x00\xfd[P`\x00\x19\x01\x90V\xfe\xa1dsolcC\x00\x08\r\x00\n" => b"" )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( ( SetItem ( 1405310203571408291950365054053061012934685786634 ) ( SetItem ( 263400868551549723330807389252719309078400616203 ) ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) ) ) => .Set )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       1405310203571408291950365054053061012934685786634
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       263400868551549723330807389252719309078400616203
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( ( 11 |-> 1 )
                       ( ( 27 |-> 491460923342184218035706888008750043977755113263 )
                       ( ( 28 |-> 263400868551549723330807389252719309078400616203 )
                       ( ( 29 |-> 1405310203571408291950365054053061012934685786634 )
                       ( 7 |-> 1 ) ) ) ) )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       4
                     </nonce>
                     ...
                   </account> ) ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
               ))))))))))))
       ensures ( 0 <=Int ?KV0_x
       andBool ( 0 <=Int ?KV1_y
       andBool ( ?KV0_x <Int pow256
       andBool ( ?KV1_y <Int pow256
               ))))
      [priority(20), label(BASIC-BLOCK-14-TO-15)]
    
    rule [BASIC-BLOCK-15-TO-17]: <foundry>
           <kevm>
             <k>
               ( .K => JUMPI 2519 bool2Word ( pow64 <=Int KV0_x:Int )
               ~> #pc [ JUMPI ] )
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   .Set
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"\xc0\xbd\x83$" +Bytes #buf ( 32 , KV0_x:Int ) +Bytes #buf ( 32 , KV1_y:Int )
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( .WordStack => ( bool2Word ( KV0_x:Int <Int pow64 ) : ( selector ( "assume(bool)" ) : ( 645326474426547203313410069153905908525362434349 : ( KV1_y:Int : ( KV0_x:Int : ( 220 : ( selector ( "test_identity(uint256,uint256)" ) : .WordStack ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     ( b"" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80" )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     .Set
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       1405310203571408291950365054053061012934685786634
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       263400868551549723330807389252719309078400616203
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( ( 11 |-> 1 )
                       ( ( 27 |-> 491460923342184218035706888008750043977755113263 )
                       ( ( 28 |-> 263400868551549723330807389252719309078400616203 )
                       ( ( 29 |-> 1405310203571408291950365054053061012934685786634 )
                       ( 7 |-> 1 ) ) ) ) )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       4
                     </nonce>
                     ...
                   </account> ) ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int KV0_x:Int
       andBool ( 0 <=Int KV1_y:Int
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( KV0_x:Int <Int pow256
       andBool ( KV1_y:Int <Int pow256
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
               ))))))))))))))))
      [priority(20), label(BASIC-BLOCK-15-TO-17)]
    
    rule [BASIC-BLOCK-18-TO-20]: <foundry>
           <kevm>
             <k>
               ( JUMPI 2519 bool2Word ( pow64 <=Int KV0_x:Int )
               ~> #pc [ JUMPI ] => STATICCALL 0 645326474426547203313410069153905908525362434349 128 36 128 0
               ~> #pc [ STATICCALL ] )
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   .Set
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"\xc0\xbd\x83$" +Bytes #buf ( 32 , KV0_x:Int ) +Bytes #buf ( 32 , KV1_y:Int )
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( bool2Word ( KV0_x:Int <Int pow64 ) => 164 ) : ( selector ( "assume(bool)" ) : ( 645326474426547203313410069153905908525362434349 : ( KV1_y:Int : ( KV0_x:Int : ( 220 : ( selector ( "test_identity(uint256,uint256)" ) : .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     ( b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Lc\xe5b" +Bytes #buf ( 32 , bool2Word ( KV0_x:Int <Int pow64 ) ) )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( .Set => SetItem ( 645326474426547203313410069153905908525362434349 ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       1405310203571408291950365054053061012934685786634
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       263400868551549723330807389252719309078400616203
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( ( 11 |-> 1 )
                       ( ( 27 |-> 491460923342184218035706888008750043977755113263 )
                       ( ( 28 |-> 263400868551549723330807389252719309078400616203 )
                       ( ( 29 |-> 1405310203571408291950365054053061012934685786634 )
                       ( 7 |-> 1 ) ) ) ) )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       4
                     </nonce>
                     ...
                   </account> ) ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int KV0_x:Int
       andBool ( 0 <=Int KV1_y:Int
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( pow64 <=Int KV0_x:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( KV0_x:Int <Int pow256
       andBool ( KV1_y:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
               )))))))))))))))))
      [priority(20), label(BASIC-BLOCK-18-TO-20)]
    
    rule [BASIC-BLOCK-19-TO-21]: <foundry>
           <kevm>
             <k>
               ( JUMPI 2519 bool2Word ( pow64 <=Int KV0_x:Int )
               ~> #pc [ JUMPI ] => STATICCALL 0 645326474426547203313410069153905908525362434349 128 36 128 0
               ~> #pc [ STATICCALL ] )
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   .Set
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"\xc0\xbd\x83$" +Bytes #buf ( 32 , KV0_x:Int ) +Bytes #buf ( 32 , KV1_y:Int )
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( bool2Word ( KV0_x:Int <Int pow64 ) => 164 ) : ( selector ( "assume(bool)" ) : ( 645326474426547203313410069153905908525362434349 : ( KV1_y:Int : ( KV0_x:Int : ( 220 : ( selector ( "test_identity(uint256,uint256)" ) : .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     ( b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Lc\xe5b" +Bytes #buf ( 32 , bool2Word ( KV1_y:Int <Int pow64 ) ) )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( .Set => SetItem ( 645326474426547203313410069153905908525362434349 ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       1405310203571408291950365054053061012934685786634
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       263400868551549723330807389252719309078400616203
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( ( 11 |-> 1 )
                       ( ( 27 |-> 491460923342184218035706888008750043977755113263 )
                       ( ( 28 |-> 263400868551549723330807389252719309078400616203 )
                       ( ( 29 |-> 1405310203571408291950365054053061012934685786634 )
                       ( 7 |-> 1 ) ) ) ) )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       4
                     </nonce>
                     ...
                   </account> ) ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int KV0_x:Int
       andBool ( 0 <=Int KV1_y:Int
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( KV0_x:Int <Int pow64
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( KV0_x:Int <Int pow256
       andBool ( KV1_y:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
               )))))))))))))))))
      [priority(20), label(BASIC-BLOCK-19-TO-21)]
    
    rule [BASIC-BLOCK-20-TO-22]: <foundry>
           <kevm>
             <k>
               ( STATICCALL 0 645326474426547203313410069153905908525362434349 128 36 128 0 ~> .K => #accessAccounts 645326474426547203313410069153905908525362434349
               ~> #checkCall 728815563385977040452943777879061427756277306518 0
               ~> #call 728815563385977040452943777879061427756277306518 645326474426547203313410069153905908525362434349 645326474426547203313410069153905908525362434349 0 0 b"Lc\xe5b" +Bytes #buf ( 32 , bool2Word ( KV0_x:Int <Int pow64 ) ) true
               ~> #return 128 0 )
               ~> #pc [ STATICCALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   .Set
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"\xc0\xbd\x83$" +Bytes #buf ( 32 , KV0_x:Int ) +Bytes #buf ( 32 , KV1_y:Int )
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( 164 : ( selector ( "assume(bool)" ) : ( 645326474426547203313410069153905908525362434349 : ( KV1_y:Int : ( KV0_x:Int : ( 220 : ( selector ( "test_identity(uint256,uint256)" ) : .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Lc\xe5b" +Bytes #buf ( 32 , bool2Word ( KV0_x:Int <Int pow64 ) )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     SetItem ( 645326474426547203313410069153905908525362434349 )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       1405310203571408291950365054053061012934685786634
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       263400868551549723330807389252719309078400616203
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( ( 11 |-> 1 )
                       ( ( 27 |-> 491460923342184218035706888008750043977755113263 )
                       ( ( 28 |-> 263400868551549723330807389252719309078400616203 )
                       ( ( 29 |-> 1405310203571408291950365054053061012934685786634 )
                       ( 7 |-> 1 ) ) ) ) )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       4
                     </nonce>
                     ...
                   </account> ) ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int KV0_x:Int
       andBool ( 0 <=Int KV1_y:Int
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( pow64 <=Int KV0_x:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( KV0_x:Int <Int pow256
       andBool ( KV1_y:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
               )))))))))))))))))
      [priority(20), label(BASIC-BLOCK-20-TO-22)]
    
    rule [BASIC-BLOCK-21-TO-23]: <foundry>
           <kevm>
             <k>
               ( STATICCALL 0 645326474426547203313410069153905908525362434349 128 36 128 0 ~> .K => #accessAccounts 645326474426547203313410069153905908525362434349
               ~> #checkCall 728815563385977040452943777879061427756277306518 0
               ~> #call 728815563385977040452943777879061427756277306518 645326474426547203313410069153905908525362434349 645326474426547203313410069153905908525362434349 0 0 b"Lc\xe5b" +Bytes #buf ( 32 , bool2Word ( KV1_y:Int <Int pow64 ) ) true
               ~> #return 128 0 )
               ~> #pc [ STATICCALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   .Set
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"\xc0\xbd\x83$" +Bytes #buf ( 32 , KV0_x:Int ) +Bytes #buf ( 32 , KV1_y:Int )
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( 164 : ( selector ( "assume(bool)" ) : ( 645326474426547203313410069153905908525362434349 : ( KV1_y:Int : ( KV0_x:Int : ( 220 : ( selector ( "test_identity(uint256,uint256)" ) : .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Lc\xe5b" +Bytes #buf ( 32 , bool2Word ( KV1_y:Int <Int pow64 ) )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     SetItem ( 645326474426547203313410069153905908525362434349 )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       1405310203571408291950365054053061012934685786634
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       263400868551549723330807389252719309078400616203
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( ( 11 |-> 1 )
                       ( ( 27 |-> 491460923342184218035706888008750043977755113263 )
                       ( ( 28 |-> 263400868551549723330807389252719309078400616203 )
                       ( ( 29 |-> 1405310203571408291950365054053061012934685786634 )
                       ( 7 |-> 1 ) ) ) ) )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       4
                     </nonce>
                     ...
                   </account> ) ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int KV0_x:Int
       andBool ( 0 <=Int KV1_y:Int
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( KV0_x:Int <Int pow64
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( KV0_x:Int <Int pow256
       andBool ( KV1_y:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
               )))))))))))))))))
      [priority(20), label(BASIC-BLOCK-21-TO-23)]
    
    rule [BASIC-BLOCK-22-TO-24]: <foundry>
           <kevm>
             <k>
               ( #accessAccounts 645326474426547203313410069153905908525362434349
               ~> #checkCall 728815563385977040452943777879061427756277306518 0
               ~> #call 728815563385977040452943777879061427756277306518 645326474426547203313410069153905908525362434349 645326474426547203313410069153905908525362434349 0 0 b"Lc\xe5b" +Bytes #buf ( 32 , bool2Word ( KV0_x:Int <Int pow64 ) ) true
               ~> #return 128 0 => #assume ( KV0_x:Int <Int pow64 )
               ~> #cheatcode_return 128 0 )
               ~> #pc [ STATICCALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   .Set
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"\xc0\xbd\x83$" +Bytes #buf ( 32 , KV0_x:Int ) +Bytes #buf ( 32 , KV1_y:Int )
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( 164 : ( selector ( "assume(bool)" ) : ( 645326474426547203313410069153905908525362434349 : ( KV1_y:Int : ( KV0_x:Int : ( 220 : ( selector ( "test_identity(uint256,uint256)" ) : .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Lc\xe5b" +Bytes #buf ( 32 , bool2Word ( KV0_x:Int <Int pow64 ) )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     SetItem ( 645326474426547203313410069153905908525362434349 )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       1405310203571408291950365054053061012934685786634
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       263400868551549723330807389252719309078400616203
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( ( 11 |-> 1 )
                       ( ( 27 |-> 491460923342184218035706888008750043977755113263 )
                       ( ( 28 |-> 263400868551549723330807389252719309078400616203 )
                       ( ( 29 |-> 1405310203571408291950365054053061012934685786634 )
                       ( 7 |-> 1 ) ) ) ) )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       4
                     </nonce>
                     ...
                   </account> ) ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int KV0_x:Int
       andBool ( 0 <=Int KV1_y:Int
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( pow64 <=Int KV0_x:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( KV0_x:Int <Int pow256
       andBool ( KV1_y:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
               )))))))))))))))))
      [priority(20), label(BASIC-BLOCK-22-TO-24)]
    
    rule [BASIC-BLOCK-23-TO-25]: <foundry>
           <kevm>
             <k>
               ( #accessAccounts 645326474426547203313410069153905908525362434349
               ~> #checkCall 728815563385977040452943777879061427756277306518 0
               ~> #call 728815563385977040452943777879061427756277306518 645326474426547203313410069153905908525362434349 645326474426547203313410069153905908525362434349 0 0 b"Lc\xe5b" +Bytes #buf ( 32 , bool2Word ( KV1_y:Int <Int pow64 ) ) true
               ~> #return 128 0 => STATICCALL 0 491460923342184218035706888008750043977755113263 128 36 128 32 ~> .K )
               ~> #pc [ STATICCALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   .Set
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"\xc0\xbd\x83$" +Bytes #buf ( 32 , KV0_x:Int ) +Bytes #buf ( 32 , KV1_y:Int )
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( 164 : ( ( selector ( "assume(bool)" ) => selector ( "applyOp(uint256)" ) ) : ( ( 645326474426547203313410069153905908525362434349 => 491460923342184218035706888008750043977755113263 ) : ( ( KV1_y:Int => 0 ) : ( ( KV0_x:Int => KV1_y:Int ) : ( ( 220 => KV0_x:Int ) : ( ( selector ( "test_identity(uint256,uint256)" ) => 220 ) : ( .WordStack => ( selector ( "test_identity(uint256,uint256)" ) : .WordStack ) ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     ( b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Lc\xe5b" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00i\xab\xff\xa1" ) +Bytes #buf ( 32 , ( bool2Word ( KV1_y:Int <Int pow64 ) => KV1_y:Int ) )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     SetItem ( 645326474426547203313410069153905908525362434349 )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       1405310203571408291950365054053061012934685786634
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       263400868551549723330807389252719309078400616203
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( ( 11 |-> 1 )
                       ( ( 27 |-> 491460923342184218035706888008750043977755113263 )
                       ( ( 28 |-> 263400868551549723330807389252719309078400616203 )
                       ( ( 29 |-> 1405310203571408291950365054053061012934685786634 )
                       ( 7 |-> 1 ) ) ) ) )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       4
                     </nonce>
                     ...
                   </account> ) ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int KV0_x:Int
       andBool ( 0 <=Int KV1_y:Int
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( KV0_x:Int <Int pow64
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( KV0_x:Int <Int pow256
       andBool ( KV1_y:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
               )))))))))))))))))
       ensures KV1_y:Int <Int pow64
      [priority(20), label(BASIC-BLOCK-23-TO-25)]
    
    rule [BASIC-BLOCK-25-TO-26]: <foundry>
           <kevm>
             <k>
               ( STATICCALL 0 491460923342184218035706888008750043977755113263 128 36 128 32 ~> .K => #accessAccounts 491460923342184218035706888008750043977755113263
               ~> #checkCall 728815563385977040452943777879061427756277306518 0
               ~> #call 728815563385977040452943777879061427756277306518 491460923342184218035706888008750043977755113263 491460923342184218035706888008750043977755113263 0 0 b"i\xab\xff\xa1" +Bytes #buf ( 32 , KV1_y:Int ) true
               ~> #return 128 32 )
               ~> #pc [ STATICCALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   .Set
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"\xc0\xbd\x83$" +Bytes #buf ( 32 , KV0_x:Int ) +Bytes #buf ( 32 , KV1_y:Int )
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( 164 : ( selector ( "applyOp(uint256)" ) : ( 491460923342184218035706888008750043977755113263 : ( 0 : ( KV1_y:Int : ( KV0_x:Int : ( 220 : ( selector ( "test_identity(uint256,uint256)" ) : .WordStack ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00i\xab\xff\xa1" +Bytes #buf ( 32 , KV1_y:Int )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     SetItem ( 645326474426547203313410069153905908525362434349 )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       1405310203571408291950365054053061012934685786634
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       263400868551549723330807389252719309078400616203
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( ( 11 |-> 1 )
                       ( ( 27 |-> 491460923342184218035706888008750043977755113263 )
                       ( ( 28 |-> 263400868551549723330807389252719309078400616203 )
                       ( ( 29 |-> 1405310203571408291950365054053061012934685786634 )
                       ( 7 |-> 1 ) ) ) ) )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       4
                     </nonce>
                     ...
                   </account> ) ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int KV0_x:Int
       andBool ( 0 <=Int KV1_y:Int
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( KV0_x:Int <Int pow64
       andBool ( KV1_y:Int <Int pow64
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( KV0_x:Int <Int pow256
       andBool ( KV1_y:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
               ))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-25-TO-26)]
    
    rule [BASIC-BLOCK-26-TO-27]: <foundry>
           <kevm>
             <k>
               ( #accessAccounts 491460923342184218035706888008750043977755113263
               ~> #checkCall 728815563385977040452943777879061427756277306518 0
               ~> #call 728815563385977040452943777879061427756277306518 491460923342184218035706888008750043977755113263 491460923342184218035706888008750043977755113263 0 0 b"i\xab\xff\xa1" +Bytes #buf ( 32 , KV1_y:Int ) true => #precompiled? ( 491460923342184218035706888008750043977755113263 , SHANGHAI )
               ~> #execute )
               ~> #return 128 32
               ~> #pc [ STATICCALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ( .List => ListItem ( <callState>
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"\xc0\xbd\x83$" +Bytes #buf ( 32 , KV0_x:Int ) +Bytes #buf ( 32 , KV1_y:Int )
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 164 : ( selector ( "applyOp(uint256)" ) : ( 491460923342184218035706888008750043977755113263 : ( 0 : ( KV1_y:Int : ( KV0_x:Int : ( 220 : ( selector ( "test_identity(uint256,uint256)" ) : .WordStack ) ) ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00i\xab\xff\xa1" +Bytes #buf ( 32 , KV1_y:Int )
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                     ...
                   </callState> ) )
                 </callStack>
                 <interimStates>
                   ( .List => ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         1405310203571408291950365054053061012934685786634
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <transientStorage>
                         .Map
                       </transientStorage>
                       <nonce>
                         1
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         263400868551549723330807389252719309078400616203
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <transientStorage>
                         .Map
                       </transientStorage>
                       <nonce>
                         1
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         491460923342184218035706888008750043977755113263
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <transientStorage>
                         .Map
                       </transientStorage>
                       <nonce>
                         1
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <transientStorage>
                         .Map
                       </transientStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( ( 11 |-> 1 )
                         ( ( 27 |-> 491460923342184218035706888008750043977755113263 )
                         ( ( 28 |-> 263400868551549723330807389252719309078400616203 )
                         ( ( 29 |-> 1405310203571408291950365054053061012934685786634 )
                         ( 7 |-> 1 ) ) ) ) )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <transientStorage>
                         .Map
                       </transientStorage>
                       <nonce>
                         4
                       </nonce>
                       ...
                     </account> ) ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       .List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 645326474426547203313410069153905908525362434349 ) )
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                   </substate> } ) )
                 </interimStates>
                 <touchedAccounts>
                   ( .Set => ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     ( 728815563385977040452943777879061427756277306518 => 491460923342184218035706888008750043977755113263 )
                   </id>
                   <caller>
                     ( CALLER_ID:Int => 728815563385977040452943777879061427756277306518 )
                   </caller>
                   <callData>
                     ( b"\xc0\xbd\x83$" => b"i\xab\xff\xa1" ) +Bytes ( #buf ( 32 , KV0_x:Int ) +Bytes #buf ( 32 , KV1_y:Int ) => #buf ( 32 , KV1_y:Int ) )
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 164 : ( selector ( "applyOp(uint256)" ) : ( 491460923342184218035706888008750043977755113263 : ( 0 : ( KV1_y:Int : ( KV0_x:Int : ( 220 : ( selector ( "test_identity(uint256,uint256)" ) : .WordStack ) ) ) ) ) ) ) ) => .WordStack )
                   </wordStack>
                   <localMem>
                     ( b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00i\xab\xff\xa1" +Bytes #buf ( 32 , KV1_y:Int ) => b"" )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     ( false => true )
                   </static>
                   <callDepth>
                     ( 0 => 1 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 645326474426547203313410069153905908525362434349 ) => ( SetItem ( 491460923342184218035706888008750043977755113263 ) ( SetItem ( 645326474426547203313410069153905908525362434349 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       1405310203571408291950365054053061012934685786634
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       263400868551549723330807389252719309078400616203
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( ( 11 |-> 1 )
                       ( ( 27 |-> 491460923342184218035706888008750043977755113263 )
                       ( ( 28 |-> 263400868551549723330807389252719309078400616203 )
                       ( ( 29 |-> 1405310203571408291950365054053061012934685786634 )
                       ( 7 |-> 1 ) ) ) ) )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       4
                     </nonce>
                     ...
                   </account> ) ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int KV0_x:Int
       andBool ( 0 <=Int KV1_y:Int
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( KV0_x:Int <Int pow64
       andBool ( KV1_y:Int <Int pow64
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( KV0_x:Int <Int pow256
       andBool ( KV1_y:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
               ))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-26-TO-27)]
    
    rule [BASIC-BLOCK-27-TO-28]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( 491460923342184218035706888008750043977755113263 , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ STATICCALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"\xc0\xbd\x83$" +Bytes #buf ( 32 , KV0_x:Int ) +Bytes #buf ( 32 , KV1_y:Int )
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 164 : ( selector ( "applyOp(uint256)" ) : ( 491460923342184218035706888008750043977755113263 : ( 0 : ( KV1_y:Int : ( KV0_x:Int : ( 220 : ( selector ( "test_identity(uint256,uint256)" ) : .WordStack ) ) ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00i\xab\xff\xa1" +Bytes #buf ( 32 , KV1_y:Int )
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                     ...
                   </callState> )
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         1405310203571408291950365054053061012934685786634
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <transientStorage>
                         .Map
                       </transientStorage>
                       <nonce>
                         1
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         263400868551549723330807389252719309078400616203
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <transientStorage>
                         .Map
                       </transientStorage>
                       <nonce>
                         1
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         491460923342184218035706888008750043977755113263
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <transientStorage>
                         .Map
                       </transientStorage>
                       <nonce>
                         1
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <transientStorage>
                         .Map
                       </transientStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( ( 11 |-> 1 )
                         ( ( 27 |-> 491460923342184218035706888008750043977755113263 )
                         ( ( 28 |-> 263400868551549723330807389252719309078400616203 )
                         ( ( 29 |-> 1405310203571408291950365054053061012934685786634 )
                         ( 7 |-> 1 ) ) ) ) )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <transientStorage>
                         .Map
                       </transientStorage>
                       <nonce>
                         4
                       </nonce>
                       ...
                     </account> ) ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       .List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 645326474426547203313410069153905908525362434349 ) )
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                   </substate> } )
                 </interimStates>
                 <touchedAccounts>
                   ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 728815563385977040452943777879061427756277306518 ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     491460923342184218035706888008750043977755113263
                   </id>
                   <caller>
                     728815563385977040452943777879061427756277306518
                   </caller>
                   <callData>
                     b"i\xab\xff\xa1" +Bytes #buf ( 32 , KV1_y:Int )
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     true
                   </static>
                   <callDepth>
                     1
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 491460923342184218035706888008750043977755113263 ) ( SetItem ( 645326474426547203313410069153905908525362434349 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       1405310203571408291950365054053061012934685786634
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       263400868551549723330807389252719309078400616203
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( ( 11 |-> 1 )
                       ( ( 27 |-> 491460923342184218035706888008750043977755113263 )
                       ( ( 28 |-> 263400868551549723330807389252719309078400616203 )
                       ( ( 29 |-> 1405310203571408291950365054053061012934685786634 )
                       ( 7 |-> 1 ) ) ) ) )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       4
                     </nonce>
                     ...
                   </account> ) ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int KV0_x:Int
       andBool ( 0 <=Int KV1_y:Int
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( KV0_x:Int <Int pow64
       andBool ( KV1_y:Int <Int pow64
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( KV0_x:Int <Int pow256
       andBool ( KV1_y:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
               ))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-27-TO-28)]
    
    rule [BASIC-BLOCK-28-TO-29]: <foundry>
           <kevm>
             <k>
               ( .K => #checkDepthExceeded
               ~> #call 491460923342184218035706888008750043977755113263 491460923342184218035706888008750043977755113263 491460923342184218035706888008750043977755113263 0 0 b"\xac7\xee\xbb" +Bytes #buf ( 32 , KV1_y:Int ) true
               ~> #return 128 32
               ~> #pc [ STATICCALL ] )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ STATICCALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"\xc0\xbd\x83$" +Bytes #buf ( 32 , KV0_x:Int ) +Bytes #buf ( 32 , KV1_y:Int )
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 164 : ( selector ( "applyOp(uint256)" ) : ( 491460923342184218035706888008750043977755113263 : ( 0 : ( KV1_y:Int : ( KV0_x:Int : ( 220 : ( selector ( "test_identity(uint256,uint256)" ) : .WordStack ) ) ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00i\xab\xff\xa1" +Bytes #buf ( 32 , KV1_y:Int )
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                     ...
                   </callState> )
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         1405310203571408291950365054053061012934685786634
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <transientStorage>
                         .Map
                       </transientStorage>
                       <nonce>
                         1
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         263400868551549723330807389252719309078400616203
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <transientStorage>
                         .Map
                       </transientStorage>
                       <nonce>
                         1
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         491460923342184218035706888008750043977755113263
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <transientStorage>
                         .Map
                       </transientStorage>
                       <nonce>
                         1
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <transientStorage>
                         .Map
                       </transientStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( ( 11 |-> 1 )
                         ( ( 27 |-> 491460923342184218035706888008750043977755113263 )
                         ( ( 28 |-> 263400868551549723330807389252719309078400616203 )
                         ( ( 29 |-> 1405310203571408291950365054053061012934685786634 )
                         ( 7 |-> 1 ) ) ) ) )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <transientStorage>
                         .Map
                       </transientStorage>
                       <nonce>
                         4
                       </nonce>
                       ...
                     </account> ) ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       .List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 645326474426547203313410069153905908525362434349 ) )
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                   </substate> } )
                 </interimStates>
                 <touchedAccounts>
                   ( SetItem ( 491460923342184218035706888008750043977755113263 ) SetItem ( 728815563385977040452943777879061427756277306518 ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     491460923342184218035706888008750043977755113263
                   </id>
                   <caller>
                     728815563385977040452943777879061427756277306518
                   </caller>
                   <callData>
                     b"i\xab\xff\xa1" +Bytes #buf ( 32 , KV1_y:Int )
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( .WordStack => ( 164 : ( selector ( "identity(uint256)" ) : ( 491460923342184218035706888008750043977755113263 : ( 0 : ( KV1_y:Int : ( 70 : ( selector ( "applyOp(uint256)" ) : .WordStack ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     ( b"" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xac7\xee\xbb" +Bytes #buf ( 32 , KV1_y:Int ) )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     true
                   </static>
                   <callDepth>
                     1
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 491460923342184218035706888008750043977755113263 ) ( SetItem ( 645326474426547203313410069153905908525362434349 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       1405310203571408291950365054053061012934685786634
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       263400868551549723330807389252719309078400616203
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       491460923342184218035706888008750043977755113263
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( ( 11 |-> 1 )
                       ( ( 27 |-> 491460923342184218035706888008750043977755113263 )
                       ( ( 28 |-> 263400868551549723330807389252719309078400616203 )
                       ( ( 29 |-> 1405310203571408291950365054053061012934685786634 )
                       ( 7 |-> 1 ) ) ) ) )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       4
                     </nonce>
                     ...
                   </account> ) ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int KV0_x:Int
       andBool ( 0 <=Int KV1_y:Int
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( KV0_x:Int <Int pow64
       andBool ( KV1_y:Int <Int pow64
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( KV0_x:Int <Int pow256
       andBool ( KV1_y:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
               ))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-28-TO-29)]

endmodule