
┌─ 1 (root, init)
│   k: #execute ~> CONTINUATION:K
│   pc: 0
│   callDepth: CALLDEPTH_CELL:Int
│   statusCode: STATUSCODE:StatusCode
│   src: test/nested/SimpleNested.t.sol:7:11
│   method: test%Enum.enum_storage_range()
│
│  (264 steps)
├─ 3
│   k: #next [ STATICCALL ] ~> #execute ~> CONTINUATION:K
│   pc: 145
│   callDepth: CALLDEPTH_CELL:Int
│   statusCode: STATUSCODE:StatusCode
│   src: test/nested/SimpleNested.t.sol:7:11
│   method: test%Enum.enum_storage_range()
┃
┃ (1 step)
┣━━┓
┃  │
┃  ├─ 4 (split)
┃  │   k: #next [ STATICCALL ] ~> #checkRevert ~> #updateRevertOutput 128 32 ~> #execute ~ ...
┃  │   pc: 145
┃  │   callDepth: EXPECTEDDEPTH_CELL:Int
┃  │   statusCode: STATUSCODE:StatusCode
┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  │   method: test%Enum.enum_storage_range()
┃  ┃
┃  ┃ (branch)
┃  ┣━━┓ subst: .Subst
┃  ┃  ┃ constraint:
┃  ┃  ┃     ACTIVE_CELL:Bool
┃  ┃  ┃     DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
┃  ┃  ┃     ( notBool NEWCALLER_CELL:Account ==K C_ENUM_ID:Int )
┃  ┃  │
┃  ┃  ├─ 7
┃  ┃  │   k: #next [ STATICCALL ] ~> #checkRevert ~> #updateRevertOutput 128 32 ~> #execute ~ ...
┃  ┃  │   pc: 145
┃  ┃  │   callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  │   method: test%Enum.enum_storage_range()
┃  ┃  │
┃  ┃  │  (1 step)
┃  ┃  ├─ 13
┃  ┃  │   k: #injectPrank ~> #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateReve ...
┃  ┃  │   pc: 145
┃  ┃  │   callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  │   method: test%Enum.enum_storage_range()
┃  ┃  ┃
┃  ┃  ┃ (1 step)
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 22 (split)
┃  ┃  ┃  │   k: #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateRevertOutput 128 32  ...
┃  ┃  ┃  │   pc: 145
┃  ┃  ┃  │   callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%Enum.enum_storage_range()
┃  ┃  ┃  ┃
┃  ┃  ┃  ┃ (branch)
┃  ┃  ┃  ┣━━┓ subst: .Subst
┃  ┃  ┃  ┃  ┃ constraint:
┃  ┃  ┃  ┃  ┃     C_ENUM_MEMBER_CONTRACT_ID:Int ==Int #address ( FoundryConsole )
┃  ┃  ┃  ┃  ┃     ( notBool C_ENUM_ID:Int ==Int #address ( FoundryConsole ) )
┃  ┃  ┃  ┃  ┃     ( notBool <acctID>
  #address ( FoundryConsole )
</acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
┃  ┃  ┃  ┃  │
┃  ┃  ┃  ┃  ├─ 134
┃  ┃  ┃  ┃  │   k: #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateRevertOutput 128 32  ...
┃  ┃  ┃  ┃  │   pc: 145
┃  ┃  ┃  ┃  │   callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  ┃  │   method: test%Enum.enum_storage_range()
┃  ┃  ┃  ┃  │
┃  ┃  ┃  ┃  │  (5 steps)
┃  ┃  ┃  ┃  └─ 98 (leaf, pending)
┃  ┃  ┃  ┃      k: #consoleLog 1756313567 b"" ~> 1 ~> #push ~> #setLocalMem 128 32 b"" ~> #pc [ STA ...
┃  ┃  ┃  ┃      pc: 145
┃  ┃  ┃  ┃      callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  ┃      method: test%Enum.enum_storage_range()
┃  ┃  ┃  ┃
┃  ┃  ┃  ┣━━┓ subst: .Subst
┃  ┃  ┃  ┃  ┃ constraint:
┃  ┃  ┃  ┃  ┃     C_ENUM_MEMBER_CONTRACT_ID:Int ==Int #address ( FoundryConsole )
┃  ┃  ┃  ┃  ┃     ( notBool C_ENUM_ID:Int ==Int #address ( FoundryConsole ) )
┃  ┃  ┃  ┃  ┃     ( notBool C_ENUM_ID:Int ==Int C_ENUM_MEMBER_CONTRACT_ID:Int )
┃  ┃  ┃  ┃  ┃     ( notBool <acctID>
  #address ( FoundryConsole )
</acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
┃  ┃  ┃  ┃  │
┃  ┃  ┃  ┃  ├─ 154
┃  ┃  ┃  ┃  │   k: #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateRevertOutput 128 32  ...
┃  ┃  ┃  ┃  │   pc: 145
┃  ┃  ┃  ┃  │   callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  ┃  │   method: test%Enum.enum_storage_range()
┃  ┃  ┃  ┃  │
┃  ┃  ┃  ┃  │  (4 steps)
┃  ┃  ┃  ┃  └─ 99 (leaf, pending)
┃  ┃  ┃  ┃      k: STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32 ~> #pc [ STATICCALL ] ~> ...
┃  ┃  ┃  ┃      pc: 145
┃  ┃  ┃  ┃      callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  ┃      method: test%Enum.enum_storage_range()
┃  ┃  ┃  ┃
┃  ┃  ┃  ┗━━┓ subst: .Subst
┃  ┃  ┃     ┃ constraint:
┃  ┃  ┃     ┃     ( notBool C_ENUM_ID:Int ==Int C_ENUM_MEMBER_CONTRACT_ID:Int )
┃  ┃  ┃     │
┃  ┃  ┃     ├─ 155
┃  ┃  ┃     │   k: #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateRevertOutput 128 32  ...
┃  ┃  ┃     │   pc: 145
┃  ┃  ┃     │   callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  ┃     │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃     │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃     │   method: test%Enum.enum_storage_range()
┃  ┃  ┃     │
┃  ┃  ┃     │  (4 steps)
┃  ┃  ┃     └─ 100 (leaf, pending)
┃  ┃  ┃         k: STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32 ~> #pc [ STATICCALL ] ~> ...
┃  ┃  ┃         pc: 145
┃  ┃  ┃         callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  ┃         statusCode: STATUSCODE:StatusCode
┃  ┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃         method: test%Enum.enum_storage_range()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 23 (split)
┃  ┃  ┃  │   k: #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateRevertOutput 128 32  ...
┃  ┃  ┃  │   pc: 145
┃  ┃  ┃  │   callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%Enum.enum_storage_range()
┃  ┃  ┃  ┃
┃  ┃  ┃  ┃ (branch)
┃  ┃  ┃  ┣━━┓ subst: .Subst
┃  ┃  ┃  ┃  ┃ constraint:
┃  ┃  ┃  ┃  ┃     C_ENUM_MEMBER_CONTRACT_ID:Int ==Int #address ( FoundryConsole )
┃  ┃  ┃  ┃  ┃     ( notBool C_ENUM_ID:Int ==Int #address ( FoundryConsole ) )
┃  ┃  ┃  ┃  ┃     ( notBool <acctID>
  #address ( FoundryConsole )
</acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
┃  ┃  ┃  ┃  │
┃  ┃  ┃  ┃  ├─ 136
┃  ┃  ┃  ┃  │   k: #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateRevertOutput 128 32  ...
┃  ┃  ┃  ┃  │   pc: 145
┃  ┃  ┃  ┃  │   callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  ┃  │   method: test%Enum.enum_storage_range()
┃  ┃  ┃  ┃  │
┃  ┃  ┃  ┃  │  (5 steps)
┃  ┃  ┃  ┃  └─ 101 (leaf, pending)
┃  ┃  ┃  ┃      k: #consoleLog 1756313567 b"" ~> 1 ~> #push ~> #setLocalMem 128 32 b"" ~> #pc [ STA ...
┃  ┃  ┃  ┃      pc: 145
┃  ┃  ┃  ┃      callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  ┃      method: test%Enum.enum_storage_range()
┃  ┃  ┃  ┃
┃  ┃  ┃  ┣━━┓ subst: .Subst
┃  ┃  ┃  ┃  ┃ constraint:
┃  ┃  ┃  ┃  ┃     C_ENUM_MEMBER_CONTRACT_ID:Int ==Int #address ( FoundryConsole )
┃  ┃  ┃  ┃  ┃     ( notBool C_ENUM_ID:Int ==Int #address ( FoundryConsole ) )
┃  ┃  ┃  ┃  ┃     ( notBool C_ENUM_ID:Int ==Int C_ENUM_MEMBER_CONTRACT_ID:Int )
┃  ┃  ┃  ┃  ┃     ( notBool <acctID>
  #address ( FoundryConsole )
</acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
┃  ┃  ┃  ┃  │
┃  ┃  ┃  ┃  ├─ 156
┃  ┃  ┃  ┃  │   k: #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateRevertOutput 128 32  ...
┃  ┃  ┃  ┃  │   pc: 145
┃  ┃  ┃  ┃  │   callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  ┃  │   method: test%Enum.enum_storage_range()
┃  ┃  ┃  ┃  │
┃  ┃  ┃  ┃  │  (4 steps)
┃  ┃  ┃  ┃  └─ 102 (leaf, pending)
┃  ┃  ┃  ┃      k: STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32 ~> #pc [ STATICCALL ] ~> ...
┃  ┃  ┃  ┃      pc: 145
┃  ┃  ┃  ┃      callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  ┃      method: test%Enum.enum_storage_range()
┃  ┃  ┃  ┃
┃  ┃  ┃  ┗━━┓ subst: .Subst
┃  ┃  ┃     ┃ constraint:
┃  ┃  ┃     ┃     ( notBool C_ENUM_ID:Int ==Int C_ENUM_MEMBER_CONTRACT_ID:Int )
┃  ┃  ┃     │
┃  ┃  ┃     ├─ 157
┃  ┃  ┃     │   k: #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateRevertOutput 128 32  ...
┃  ┃  ┃     │   pc: 145
┃  ┃  ┃     │   callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  ┃     │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃     │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃     │   method: test%Enum.enum_storage_range()
┃  ┃  ┃     │
┃  ┃  ┃     │  (4 steps)
┃  ┃  ┃     └─ 103 (leaf, pending)
┃  ┃  ┃         k: STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32 ~> #pc [ STATICCALL ] ~> ...
┃  ┃  ┃         pc: 145
┃  ┃  ┃         callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  ┃         statusCode: STATUSCODE:StatusCode
┃  ┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃         method: test%Enum.enum_storage_range()
┃  ┃  ┃
┃  ┃  ┗━━┓
┃  ┃     │
┃  ┃     ├─ 24
┃  ┃     │   k: #injectPrank ~> #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateReve ...
┃  ┃     │   pc: 145
┃  ┃     │   callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃     │   statusCode: STATUSCODE:StatusCode
┃  ┃     │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃     │   method: test%Enum.enum_storage_range()
┃  ┃     ┃
┃  ┃     ┃ (1 step)
┃  ┃     ┣━━┓
┃  ┃     ┃  │
┃  ┃     ┃  ├─ 39 (split)
┃  ┃     ┃  │   k: #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateRevertOutput 128 32  ...
┃  ┃     ┃  │   pc: 145
┃  ┃     ┃  │   callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃     ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃     ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃     ┃  │   method: test%Enum.enum_storage_range()
┃  ┃     ┃  ┃
┃  ┃     ┃  ┃ (branch)
┃  ┃     ┃  ┣━━┓ subst: .Subst
┃  ┃     ┃  ┃  ┃ constraint:
┃  ┃     ┃  ┃  ┃     C_ENUM_MEMBER_CONTRACT_ID:Int ==Int #address ( FoundryConsole )
┃  ┃     ┃  ┃  ┃     ( notBool C_ENUM_ID:Int ==Int #address ( FoundryConsole ) )
┃  ┃     ┃  ┃  ┃     ( notBool <acctID>
  #address ( FoundryConsole )
</acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
┃  ┃     ┃  ┃  │
┃  ┃     ┃  ┃  ├─ 142
┃  ┃     ┃  ┃  │   k: #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateRevertOutput 128 32  ...
┃  ┃     ┃  ┃  │   pc: 145
┃  ┃     ┃  ┃  │   callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃     ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃     ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃     ┃  ┃  │   method: test%Enum.enum_storage_range()
┃  ┃     ┃  ┃  │
┃  ┃     ┃  ┃  │  (4 steps)
┃  ┃     ┃  ┃  └─ 104 (leaf, pending)
┃  ┃     ┃  ┃      k: STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32 ~> #pc [ STATICCALL ] ~> ...
┃  ┃     ┃  ┃      pc: 145
┃  ┃     ┃  ┃      callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃     ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃     ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃     ┃  ┃      method: test%Enum.enum_storage_range()
┃  ┃     ┃  ┃
┃  ┃     ┃  ┗━━┓ subst: .Subst
┃  ┃     ┃     ┃ constraint:
┃  ┃     ┃     ┃     ( notBool C_ENUM_ID:Int ==Int C_ENUM_MEMBER_CONTRACT_ID:Int )
┃  ┃     ┃     │
┃  ┃     ┃     ├─ 143
┃  ┃     ┃     │   k: #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateRevertOutput 128 32  ...
┃  ┃     ┃     │   pc: 145
┃  ┃     ┃     │   callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃     ┃     │   statusCode: STATUSCODE:StatusCode
┃  ┃     ┃     │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃     ┃     │   method: test%Enum.enum_storage_range()
┃  ┃     ┃     │
┃  ┃     ┃     │  (4 steps)
┃  ┃     ┃     └─ 105 (leaf, pending)
┃  ┃     ┃         k: STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32 ~> #pc [ STATICCALL ] ~> ...
┃  ┃     ┃         pc: 145
┃  ┃     ┃         callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃     ┃         statusCode: STATUSCODE:StatusCode
┃  ┃     ┃         src: test/nested/SimpleNested.t.sol:7:11
┃  ┃     ┃         method: test%Enum.enum_storage_range()
┃  ┃     ┃
┃  ┃     ┗━━┓
┃  ┃        │
┃  ┃        ├─ 40
┃  ┃        │   k: #injectPrank ~> #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateReve ...
┃  ┃        │   pc: 145
┃  ┃        │   callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃        │   statusCode: STATUSCODE:StatusCode
┃  ┃        │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃        │   method: test%Enum.enum_storage_range()
┃  ┃        ┃
┃  ┃        ┃ (1 step)
┃  ┃        ┣━━┓
┃  ┃        ┃  │
┃  ┃        ┃  ├─ 66
┃  ┃        ┃  │   k: #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateRevertOutput 128 32  ...
┃  ┃        ┃  │   pc: 145
┃  ┃        ┃  │   callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃        ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃        ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃        ┃  │   method: test%Enum.enum_storage_range()
┃  ┃        ┃  │
┃  ┃        ┃  │  (4 steps)
┃  ┃        ┃  └─ 106 (leaf, pending)
┃  ┃        ┃      k: STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32 ~> #pc [ STATICCALL ] ~> ...
┃  ┃        ┃      pc: 145
┃  ┃        ┃      callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃        ┃      statusCode: STATUSCODE:StatusCode
┃  ┃        ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃        ┃      method: test%Enum.enum_storage_range()
┃  ┃        ┃
┃  ┃        ┗━━┓
┃  ┃           │
┃  ┃           ├─ 67
┃  ┃           │   k: #injectPrank ~> #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateReve ...
┃  ┃           │   pc: 145
┃  ┃           │   callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃           │   statusCode: STATUSCODE:StatusCode
┃  ┃           │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃           │   method: test%Enum.enum_storage_range()
┃  ┃           ┃
┃  ┃           ┃ (1 step)
┃  ┃           ┣━━┓
┃  ┃           ┃  │
┃  ┃           ┃  └─ 107 (leaf, pending)
┃  ┃           ┃      k: #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateRevertOutput 128 32  ...
┃  ┃           ┃      pc: 145
┃  ┃           ┃      callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃           ┃      statusCode: STATUSCODE:StatusCode
┃  ┃           ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃           ┃      method: test%Enum.enum_storage_range()
┃  ┃           ┃
┃  ┃           ┗━━┓
┃  ┃              │
┃  ┃              └─ 108 (leaf, pending)
┃  ┃                  k: #injectPrank ~> #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateReve ...
┃  ┃                  pc: 145
┃  ┃                  callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃                  statusCode: STATUSCODE:StatusCode
┃  ┃                  src: test/nested/SimpleNested.t.sol:7:11
┃  ┃                  method: test%Enum.enum_storage_range()
┃  ┃
┃  ┣━━┓ subst: .Subst
┃  ┃  ┃ constraint:
┃  ┃  ┃     ACTIVE_CELL:Bool
┃  ┃  ┃     DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
┃  ┃  ┃     ( notBool NEWCALLER_CELL:Account ==K C_ENUM_ID:Int )
┃  ┃  ┃     ( notBool C_ENUM_ID:Int ==Int C_ENUM_MEMBER_CONTRACT_ID:Int )
┃  ┃  │
┃  ┃  ├─ 14
┃  ┃  │   k: #next [ STATICCALL ] ~> #checkRevert ~> #updateRevertOutput 128 32 ~> #execute ~ ...
┃  ┃  │   pc: 145
┃  ┃  │   callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  │   method: test%Enum.enum_storage_range()
┃  ┃  │
┃  ┃  │  (1 step)
┃  ┃  ├─ 25
┃  ┃  │   k: #injectPrank ~> #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateReve ...
┃  ┃  │   pc: 145
┃  ┃  │   callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  │   method: test%Enum.enum_storage_range()
┃  ┃  ┃
┃  ┃  ┃ (1 step)
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 41 (split)
┃  ┃  ┃  │   k: #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateRevertOutput 128 32  ...
┃  ┃  ┃  │   pc: 145
┃  ┃  ┃  │   callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%Enum.enum_storage_range()
┃  ┃  ┃  ┃
┃  ┃  ┃  ┃ (branch)
┃  ┃  ┃  ┣━━┓ subst: .Subst
┃  ┃  ┃  ┃  ┃ constraint:
┃  ┃  ┃  ┃  ┃     C_ENUM_MEMBER_CONTRACT_ID:Int ==Int #address ( FoundryConsole )
┃  ┃  ┃  ┃  ┃     ( notBool C_ENUM_ID:Int ==Int #address ( FoundryConsole ) )
┃  ┃  ┃  ┃  ┃     ( notBool <acctID>
  #address ( FoundryConsole )
</acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
┃  ┃  ┃  ┃  │
┃  ┃  ┃  ┃  ├─ 144
┃  ┃  ┃  ┃  │   k: #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateRevertOutput 128 32  ...
┃  ┃  ┃  ┃  │   pc: 145
┃  ┃  ┃  ┃  │   callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  ┃  │   method: test%Enum.enum_storage_range()
┃  ┃  ┃  ┃  │
┃  ┃  ┃  ┃  │  (4 steps)
┃  ┃  ┃  ┃  └─ 109 (leaf, pending)
┃  ┃  ┃  ┃      k: STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32 ~> #pc [ STATICCALL ] ~> ...
┃  ┃  ┃  ┃      pc: 145
┃  ┃  ┃  ┃      callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  ┃      method: test%Enum.enum_storage_range()
┃  ┃  ┃  ┃
┃  ┃  ┃  ┗━━┓ subst: .Subst
┃  ┃  ┃     ┃ constraint:
┃  ┃  ┃     ┃     ( notBool C_ENUM_ID:Int ==Int C_ENUM_MEMBER_CONTRACT_ID:Int )
┃  ┃  ┃     │
┃  ┃  ┃     ├─ 145
┃  ┃  ┃     │   k: #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateRevertOutput 128 32  ...
┃  ┃  ┃     │   pc: 145
┃  ┃  ┃     │   callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  ┃     │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃     │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃     │   method: test%Enum.enum_storage_range()
┃  ┃  ┃     │
┃  ┃  ┃     │  (4 steps)
┃  ┃  ┃     └─ 110 (leaf, pending)
┃  ┃  ┃         k: STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32 ~> #pc [ STATICCALL ] ~> ...
┃  ┃  ┃         pc: 145
┃  ┃  ┃         callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  ┃         statusCode: STATUSCODE:StatusCode
┃  ┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃         method: test%Enum.enum_storage_range()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 42 (split)
┃  ┃  ┃  │   k: #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateRevertOutput 128 32  ...
┃  ┃  ┃  │   pc: 145
┃  ┃  ┃  │   callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%Enum.enum_storage_range()
┃  ┃  ┃  ┃
┃  ┃  ┃  ┃ (branch)
┃  ┃  ┃  ┣━━┓ subst: .Subst
┃  ┃  ┃  ┃  ┃ constraint:
┃  ┃  ┃  ┃  ┃     C_ENUM_MEMBER_CONTRACT_ID:Int ==Int #address ( FoundryConsole )
┃  ┃  ┃  ┃  ┃     ( notBool C_ENUM_ID:Int ==Int #address ( FoundryConsole ) )
┃  ┃  ┃  ┃  ┃     ( notBool <acctID>
  #address ( FoundryConsole )
</acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
┃  ┃  ┃  ┃  │
┃  ┃  ┃  ┃  ├─ 146
┃  ┃  ┃  ┃  │   k: #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateRevertOutput 128 32  ...
┃  ┃  ┃  ┃  │   pc: 145
┃  ┃  ┃  ┃  │   callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  ┃  │   method: test%Enum.enum_storage_range()
┃  ┃  ┃  ┃  │
┃  ┃  ┃  ┃  │  (4 steps)
┃  ┃  ┃  ┃  └─ 111 (leaf, pending)
┃  ┃  ┃  ┃      k: STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32 ~> #pc [ STATICCALL ] ~> ...
┃  ┃  ┃  ┃      pc: 145
┃  ┃  ┃  ┃      callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  ┃      method: test%Enum.enum_storage_range()
┃  ┃  ┃  ┃
┃  ┃  ┃  ┗━━┓ subst: .Subst
┃  ┃  ┃     ┃ constraint:
┃  ┃  ┃     ┃     ( notBool C_ENUM_ID:Int ==Int C_ENUM_MEMBER_CONTRACT_ID:Int )
┃  ┃  ┃     │
┃  ┃  ┃     ├─ 147
┃  ┃  ┃     │   k: #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateRevertOutput 128 32  ...
┃  ┃  ┃     │   pc: 145
┃  ┃  ┃     │   callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  ┃     │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃     │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃     │   method: test%Enum.enum_storage_range()
┃  ┃  ┃     │
┃  ┃  ┃     │  (4 steps)
┃  ┃  ┃     └─ 112 (leaf, pending)
┃  ┃  ┃         k: STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32 ~> #pc [ STATICCALL ] ~> ...
┃  ┃  ┃         pc: 145
┃  ┃  ┃         callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  ┃         statusCode: STATUSCODE:StatusCode
┃  ┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃         method: test%Enum.enum_storage_range()
┃  ┃  ┃
┃  ┃  ┗━━┓
┃  ┃     │
┃  ┃     ├─ 43
┃  ┃     │   k: #injectPrank ~> #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateReve ...
┃  ┃     │   pc: 145
┃  ┃     │   callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃     │   statusCode: STATUSCODE:StatusCode
┃  ┃     │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃     │   method: test%Enum.enum_storage_range()
┃  ┃     ┃
┃  ┃     ┃ (1 step)
┃  ┃     ┣━━┓
┃  ┃     ┃  │
┃  ┃     ┃  ├─ 70
┃  ┃     ┃  │   k: #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateRevertOutput 128 32  ...
┃  ┃     ┃  │   pc: 145
┃  ┃     ┃  │   callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃     ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃     ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃     ┃  │   method: test%Enum.enum_storage_range()
┃  ┃     ┃  │
┃  ┃     ┃  │  (4 steps)
┃  ┃     ┃  └─ 113 (leaf, pending)
┃  ┃     ┃      k: STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32 ~> #pc [ STATICCALL ] ~> ...
┃  ┃     ┃      pc: 145
┃  ┃     ┃      callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃     ┃      statusCode: STATUSCODE:StatusCode
┃  ┃     ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃     ┃      method: test%Enum.enum_storage_range()
┃  ┃     ┃
┃  ┃     ┗━━┓
┃  ┃        │
┃  ┃        ├─ 71
┃  ┃        │   k: #injectPrank ~> #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateReve ...
┃  ┃        │   pc: 145
┃  ┃        │   callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃        │   statusCode: STATUSCODE:StatusCode
┃  ┃        │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃        │   method: test%Enum.enum_storage_range()
┃  ┃        ┃
┃  ┃        ┃ (1 step)
┃  ┃        ┣━━┓
┃  ┃        ┃  │
┃  ┃        ┃  └─ 114 (leaf, pending)
┃  ┃        ┃      k: #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateRevertOutput 128 32  ...
┃  ┃        ┃      pc: 145
┃  ┃        ┃      callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃        ┃      statusCode: STATUSCODE:StatusCode
┃  ┃        ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃        ┃      method: test%Enum.enum_storage_range()
┃  ┃        ┃
┃  ┃        ┗━━┓
┃  ┃           │
┃  ┃           └─ 115 (leaf, pending)
┃  ┃               k: #injectPrank ~> #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateReve ...
┃  ┃               pc: 145
┃  ┃               callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃               statusCode: STATUSCODE:StatusCode
┃  ┃               src: test/nested/SimpleNested.t.sol:7:11
┃  ┃               method: test%Enum.enum_storage_range()
┃  ┃
┃  ┣━━┓ subst: .Subst
┃  ┃  ┃ constraint:
┃  ┃  ┃     ACTIVE_CELL:Bool
┃  ┃  ┃     DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
┃  ┃  ┃     ( notBool NEWCALLER_CELL:Account ==K C_ENUM_ID:Int )
┃  ┃  ┃     ( notBool C_ENUM_ID:Int ==Int C_ENUM_MEMBER_CONTRACT_ID:Int )
┃  ┃  │
┃  ┃  ├─ 26
┃  ┃  │   k: #next [ STATICCALL ] ~> #checkRevert ~> #updateRevertOutput 128 32 ~> #execute ~ ...
┃  ┃  │   pc: 145
┃  ┃  │   callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  │   method: test%Enum.enum_storage_range()
┃  ┃  │
┃  ┃  │  (1 step)
┃  ┃  ├─ 44
┃  ┃  │   k: #injectPrank ~> #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateReve ...
┃  ┃  │   pc: 145
┃  ┃  │   callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  │   method: test%Enum.enum_storage_range()
┃  ┃  ┃
┃  ┃  ┃ (1 step)
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 72
┃  ┃  ┃  │   k: #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateRevertOutput 128 32  ...
┃  ┃  ┃  │   pc: 145
┃  ┃  ┃  │   callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%Enum.enum_storage_range()
┃  ┃  ┃  │
┃  ┃  ┃  │  (4 steps)
┃  ┃  ┃  └─ 116 (leaf, pending)
┃  ┃  ┃      k: STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32 ~> #pc [ STATICCALL ] ~> ...
┃  ┃  ┃      pc: 145
┃  ┃  ┃      callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%Enum.enum_storage_range()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 73
┃  ┃  ┃  │   k: #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateRevertOutput 128 32  ...
┃  ┃  ┃  │   pc: 145
┃  ┃  ┃  │   callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%Enum.enum_storage_range()
┃  ┃  ┃  │
┃  ┃  ┃  │  (4 steps)
┃  ┃  ┃  └─ 117 (leaf, pending)
┃  ┃  ┃      k: STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32 ~> #pc [ STATICCALL ] ~> ...
┃  ┃  ┃      pc: 145
┃  ┃  ┃      callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%Enum.enum_storage_range()
┃  ┃  ┃
┃  ┃  ┗━━┓
┃  ┃     │
┃  ┃     ├─ 74
┃  ┃     │   k: #injectPrank ~> #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateReve ...
┃  ┃     │   pc: 145
┃  ┃     │   callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃     │   statusCode: STATUSCODE:StatusCode
┃  ┃     │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃     │   method: test%Enum.enum_storage_range()
┃  ┃     ┃
┃  ┃     ┃ (1 step)
┃  ┃     ┣━━┓
┃  ┃     ┃  │
┃  ┃     ┃  └─ 118 (leaf, pending)
┃  ┃     ┃      k: #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateRevertOutput 128 32  ...
┃  ┃     ┃      pc: 145
┃  ┃     ┃      callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃     ┃      statusCode: STATUSCODE:StatusCode
┃  ┃     ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃     ┃      method: test%Enum.enum_storage_range()
┃  ┃     ┃
┃  ┃     ┗━━┓
┃  ┃        │
┃  ┃        └─ 119 (leaf, pending)
┃  ┃            k: #injectPrank ~> #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateReve ...
┃  ┃            pc: 145
┃  ┃            callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃            statusCode: STATUSCODE:StatusCode
┃  ┃            src: test/nested/SimpleNested.t.sol:7:11
┃  ┃            method: test%Enum.enum_storage_range()
┃  ┃
┃  ┣━━┓ subst: .Subst
┃  ┃  ┃ constraint:
┃  ┃  ┃     ACTIVE_CELL:Bool
┃  ┃  ┃     DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
┃  ┃  ┃     ( notBool NEWCALLER_CELL:Account ==K C_ENUM_ID:Int )
┃  ┃  ┃     ( notBool C_ENUM_ID:Int ==Int C_ENUM_MEMBER_CONTRACT_ID:Int )
┃  ┃  │
┃  ┃  ├─ 45
┃  ┃  │   k: #next [ STATICCALL ] ~> #checkRevert ~> #updateRevertOutput 128 32 ~> #execute ~ ...
┃  ┃  │   pc: 145
┃  ┃  │   callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  │   method: test%Enum.enum_storage_range()
┃  ┃  │
┃  ┃  │  (1 step)
┃  ┃  ├─ 75
┃  ┃  │   k: #injectPrank ~> #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateReve ...
┃  ┃  │   pc: 145
┃  ┃  │   callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  │   method: test%Enum.enum_storage_range()
┃  ┃  ┃
┃  ┃  ┃ (1 step)
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 120 (leaf, pending)
┃  ┃  ┃      k: #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateRevertOutput 128 32  ...
┃  ┃  ┃      pc: 145
┃  ┃  ┃      callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%Enum.enum_storage_range()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 121 (leaf, pending)
┃  ┃  ┃      k: #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateRevertOutput 128 32  ...
┃  ┃  ┃      pc: 145
┃  ┃  ┃      callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%Enum.enum_storage_range()
┃  ┃  ┃
┃  ┃  ┗━━┓
┃  ┃     │
┃  ┃     └─ 122 (leaf, pending)
┃  ┃         k: #injectPrank ~> #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateReve ...
┃  ┃         pc: 145
┃  ┃         callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃         statusCode: STATUSCODE:StatusCode
┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
┃  ┃         method: test%Enum.enum_storage_range()
┃  ┃
┃  ┣━━┓ subst: .Subst
┃  ┃  ┃ constraint:
┃  ┃  ┃     ACTIVE_CELL:Bool
┃  ┃  ┃     DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
┃  ┃  ┃     ( notBool NEWCALLER_CELL:Account ==K C_ENUM_ID:Int )
┃  ┃  ┃     ( notBool C_ENUM_ID:Int ==Int C_ENUM_MEMBER_CONTRACT_ID:Int )
┃  ┃  │
┃  ┃  ├─ 76
┃  ┃  │   k: #next [ STATICCALL ] ~> #checkRevert ~> #updateRevertOutput 128 32 ~> #execute ~ ...
┃  ┃  │   pc: 145
┃  ┃  │   callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  │   method: test%Enum.enum_storage_range()
┃  ┃  │
┃  ┃  │  (1 step)
┃  ┃  └─ 123 (leaf, pending)
┃  ┃      k: #injectPrank ~> #next [ STATICCALL ] ~> #endPrank ~> #checkRevert ~> #updateReve ...
┃  ┃      pc: 145
┃  ┃      callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃      method: test%Enum.enum_storage_range()
┃  ┃
┃  ┣━━┓ subst: .Subst
┃  ┃  ┃ constraint:
┃  ┃  ┃     ACTIVE_CELL:Bool
┃  ┃  ┃     DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
┃  ┃  ┃     ( notBool NEWCALLER_CELL:Account ==K C_ENUM_ID:Int )
┃  ┃  ┃     ( notBool C_ENUM_ID:Int ==Int C_ENUM_MEMBER_CONTRACT_ID:Int )
┃  ┃  │
┃  ┃  └─ 124 (leaf, pending)
┃  ┃      k: #next [ STATICCALL ] ~> #checkRevert ~> #updateRevertOutput 128 32 ~> #execute ~ ...
┃  ┃      pc: 145
┃  ┃      callDepth: EXPECTEDDEPTH_CELL:Int
┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃      method: test%Enum.enum_storage_range()
┃  ┃
┃  ┗━━┓ subst: .Subst
┃     ┃ constraint:
┃     ┃     ( notBool C_ENUM_ID:Int ==Int C_ENUM_MEMBER_CONTRACT_ID:Int )
┃     │
┃     └─ 125 (leaf, pending)
┃         k: #next [ STATICCALL ] ~> #checkRevert ~> #updateRevertOutput 128 32 ~> #execute ~ ...
┃         pc: 145
┃         callDepth: EXPECTEDDEPTH_CELL:Int
┃         statusCode: STATUSCODE:StatusCode
┃         src: test/nested/SimpleNested.t.sol:7:11
┃         method: test%Enum.enum_storage_range()
┃
┣━━┓
┃  │
┃  ├─ 5
┃  │   k: #injectPrank ~> #next [ STATICCALL ] ~> #endPrank ~> #execute ~> CONTINUATION:K
┃  │   pc: 145
┃  │   callDepth: DEPTH_CELL:Int
┃  │   statusCode: STATUSCODE:StatusCode
┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  │   method: test%Enum.enum_storage_range()
┃  ┃
┃  ┃ (1 step)
┃  ┣━━┓
┃  ┃  │
┃  ┃  ├─ 9 (split)
┃  ┃  │   k: #next [ STATICCALL ] ~> #endPrank ~> #execute ~> CONTINUATION:K
┃  ┃  │   pc: 145
┃  ┃  │   callDepth: DEPTH_CELL:Int
┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  │   method: test%Enum.enum_storage_range()
┃  ┃  ┃
┃  ┃  ┃ (branch)
┃  ┃  ┣━━┓ subst: .Subst
┃  ┃  ┃  ┃ constraint:
┃  ┃  ┃  ┃     C_ENUM_MEMBER_CONTRACT_ID:Int ==Int #address ( FoundryConsole )
┃  ┃  ┃  ┃     ( notBool C_ENUM_ID:Int ==Int #address ( FoundryConsole ) )
┃  ┃  ┃  ┃     ( notBool <acctID>
  #address ( FoundryConsole )
</acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 126
┃  ┃  ┃  │   k: #next [ STATICCALL ] ~> #endPrank ~> #execute ~> CONTINUATION:K
┃  ┃  ┃  │   pc: 145
┃  ┃  ┃  │   callDepth: DEPTH_CELL:Int
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%Enum.enum_storage_range()
┃  ┃  ┃  │
┃  ┃  ┃  │  (6 steps)
┃  ┃  ┃  └─ 78 (leaf, pending)
┃  ┃  ┃      k: 1 ~> #push ~> #setLocalMem 128 32 b"" ~> #pc [ STATICCALL ] ~> #endPrank ~> #exe ...
┃  ┃  ┃      pc: 145
┃  ┃  ┃      callDepth: DEPTH_CELL:Int
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%Enum.enum_storage_range()
┃  ┃  ┃
┃  ┃  ┣━━┓ subst: .Subst
┃  ┃  ┃  ┃ constraint:
┃  ┃  ┃  ┃     C_ENUM_MEMBER_CONTRACT_ID:Int ==Int #address ( FoundryConsole )
┃  ┃  ┃  ┃     ( notBool C_ENUM_ID:Int ==Int #address ( FoundryConsole ) )
┃  ┃  ┃  ┃     ( notBool C_ENUM_ID:Int ==Int C_ENUM_MEMBER_CONTRACT_ID:Int )
┃  ┃  ┃  ┃     ( notBool <acctID>
  #address ( FoundryConsole )
</acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 148
┃  ┃  ┃  │   k: #next [ STATICCALL ] ~> #endPrank ~> #execute ~> CONTINUATION:K
┃  ┃  ┃  │   pc: 145
┃  ┃  ┃  │   callDepth: DEPTH_CELL:Int
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%Enum.enum_storage_range()
┃  ┃  ┃  │
┃  ┃  ┃  │  (5 steps)
┃  ┃  ┃  └─ 79 (leaf, pending)
┃  ┃  ┃      k: #consoleLog 1756313567 b"" ~> 1 ~> #push ~> #setLocalMem 128 32 b"" ~> #pc [ STA ...
┃  ┃  ┃      pc: 145
┃  ┃  ┃      callDepth: DEPTH_CELL:Int
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%Enum.enum_storage_range()
┃  ┃  ┃
┃  ┃  ┣━━┓ subst: .Subst
┃  ┃  ┃  ┃ constraint:
┃  ┃  ┃  ┃     C_ENUM_MEMBER_CONTRACT_ID:Int ==Int #address ( FoundryConsole )
┃  ┃  ┃  ┃     ( notBool C_ENUM_ID:Int ==Int #address ( FoundryConsole ) )
┃  ┃  ┃  ┃     ( notBool C_ENUM_ID:Int ==Int C_ENUM_MEMBER_CONTRACT_ID:Int )
┃  ┃  ┃  ┃     ( notBool <acctID>
  #address ( FoundryConsole )
</acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 158
┃  ┃  ┃  │   k: #next [ STATICCALL ] ~> #endPrank ~> #execute ~> CONTINUATION:K
┃  ┃  ┃  │   pc: 145
┃  ┃  ┃  │   callDepth: DEPTH_CELL:Int
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%Enum.enum_storage_range()
┃  ┃  ┃  │
┃  ┃  ┃  │  (4 steps)
┃  ┃  ┃  └─ 80 (leaf, pending)
┃  ┃  ┃      k: STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32 ~> #pc [ STATICCALL ] ~> ...
┃  ┃  ┃      pc: 145
┃  ┃  ┃      callDepth: DEPTH_CELL:Int
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%Enum.enum_storage_range()
┃  ┃  ┃
┃  ┃  ┗━━┓ subst: .Subst
┃  ┃     ┃ constraint:
┃  ┃     ┃     ( notBool C_ENUM_ID:Int ==Int C_ENUM_MEMBER_CONTRACT_ID:Int )
┃  ┃     │
┃  ┃     ├─ 159
┃  ┃     │   k: #next [ STATICCALL ] ~> #endPrank ~> #execute ~> CONTINUATION:K
┃  ┃     │   pc: 145
┃  ┃     │   callDepth: DEPTH_CELL:Int
┃  ┃     │   statusCode: STATUSCODE:StatusCode
┃  ┃     │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃     │   method: test%Enum.enum_storage_range()
┃  ┃     │
┃  ┃     │  (4 steps)
┃  ┃     └─ 81 (leaf, pending)
┃  ┃         k: STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32 ~> #pc [ STATICCALL ] ~> ...
┃  ┃         pc: 145
┃  ┃         callDepth: DEPTH_CELL:Int
┃  ┃         statusCode: STATUSCODE:StatusCode
┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
┃  ┃         method: test%Enum.enum_storage_range()
┃  ┃
┃  ┣━━┓
┃  ┃  │
┃  ┃  ├─ 10 (split)
┃  ┃  │   k: #next [ STATICCALL ] ~> #endPrank ~> #execute ~> CONTINUATION:K
┃  ┃  │   pc: 145
┃  ┃  │   callDepth: DEPTH_CELL:Int
┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  │   method: test%Enum.enum_storage_range()
┃  ┃  ┃
┃  ┃  ┃ (branch)
┃  ┃  ┣━━┓ subst: .Subst
┃  ┃  ┃  ┃ constraint:
┃  ┃  ┃  ┃     C_ENUM_MEMBER_CONTRACT_ID:Int ==Int #address ( FoundryConsole )
┃  ┃  ┃  ┃     ( notBool C_ENUM_ID:Int ==Int #address ( FoundryConsole ) )
┃  ┃  ┃  ┃     ( notBool <acctID>
  #address ( FoundryConsole )
</acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 128
┃  ┃  ┃  │   k: #next [ STATICCALL ] ~> #endPrank ~> #execute ~> CONTINUATION:K
┃  ┃  ┃  │   pc: 145
┃  ┃  ┃  │   callDepth: DEPTH_CELL:Int
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%Enum.enum_storage_range()
┃  ┃  ┃  │
┃  ┃  ┃  │  (6 steps)
┃  ┃  ┃  └─ 82 (leaf, pending)
┃  ┃  ┃      k: 1 ~> #push ~> #setLocalMem 128 32 b"" ~> #pc [ STATICCALL ] ~> #endPrank ~> #exe ...
┃  ┃  ┃      pc: 145
┃  ┃  ┃      callDepth: DEPTH_CELL:Int
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%Enum.enum_storage_range()
┃  ┃  ┃
┃  ┃  ┣━━┓ subst: .Subst
┃  ┃  ┃  ┃ constraint:
┃  ┃  ┃  ┃     C_ENUM_MEMBER_CONTRACT_ID:Int ==Int #address ( FoundryConsole )
┃  ┃  ┃  ┃     ( notBool C_ENUM_ID:Int ==Int #address ( FoundryConsole ) )
┃  ┃  ┃  ┃     ( notBool C_ENUM_ID:Int ==Int C_ENUM_MEMBER_CONTRACT_ID:Int )
┃  ┃  ┃  ┃     ( notBool <acctID>
  #address ( FoundryConsole )
</acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 150
┃  ┃  ┃  │   k: #next [ STATICCALL ] ~> #endPrank ~> #execute ~> CONTINUATION:K
┃  ┃  ┃  │   pc: 145
┃  ┃  ┃  │   callDepth: DEPTH_CELL:Int
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%Enum.enum_storage_range()
┃  ┃  ┃  │
┃  ┃  ┃  │  (5 steps)
┃  ┃  ┃  └─ 83 (leaf, pending)
┃  ┃  ┃      k: #consoleLog 1756313567 b"" ~> 1 ~> #push ~> #setLocalMem 128 32 b"" ~> #pc [ STA ...
┃  ┃  ┃      pc: 145
┃  ┃  ┃      callDepth: DEPTH_CELL:Int
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%Enum.enum_storage_range()
┃  ┃  ┃
┃  ┃  ┣━━┓ subst: .Subst
┃  ┃  ┃  ┃ constraint:
┃  ┃  ┃  ┃     C_ENUM_MEMBER_CONTRACT_ID:Int ==Int #address ( FoundryConsole )
┃  ┃  ┃  ┃     ( notBool C_ENUM_ID:Int ==Int #address ( FoundryConsole ) )
┃  ┃  ┃  ┃     ( notBool C_ENUM_ID:Int ==Int C_ENUM_MEMBER_CONTRACT_ID:Int )
┃  ┃  ┃  ┃     ( notBool <acctID>
  #address ( FoundryConsole )
</acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 160
┃  ┃  ┃  │   k: #next [ STATICCALL ] ~> #endPrank ~> #execute ~> CONTINUATION:K
┃  ┃  ┃  │   pc: 145
┃  ┃  ┃  │   callDepth: DEPTH_CELL:Int
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%Enum.enum_storage_range()
┃  ┃  ┃  │
┃  ┃  ┃  │  (4 steps)
┃  ┃  ┃  └─ 84 (leaf, pending)
┃  ┃  ┃      k: STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32 ~> #pc [ STATICCALL ] ~> ...
┃  ┃  ┃      pc: 145
┃  ┃  ┃      callDepth: DEPTH_CELL:Int
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%Enum.enum_storage_range()
┃  ┃  ┃
┃  ┃  ┗━━┓ subst: .Subst
┃  ┃     ┃ constraint:
┃  ┃     ┃     ( notBool C_ENUM_ID:Int ==Int C_ENUM_MEMBER_CONTRACT_ID:Int )
┃  ┃     │
┃  ┃     ├─ 161
┃  ┃     │   k: #next [ STATICCALL ] ~> #endPrank ~> #execute ~> CONTINUATION:K
┃  ┃     │   pc: 145
┃  ┃     │   callDepth: DEPTH_CELL:Int
┃  ┃     │   statusCode: STATUSCODE:StatusCode
┃  ┃     │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃     │   method: test%Enum.enum_storage_range()
┃  ┃     │
┃  ┃     │  (4 steps)
┃  ┃     └─ 85 (leaf, pending)
┃  ┃         k: STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32 ~> #pc [ STATICCALL ] ~> ...
┃  ┃         pc: 145
┃  ┃         callDepth: DEPTH_CELL:Int
┃  ┃         statusCode: STATUSCODE:StatusCode
┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
┃  ┃         method: test%Enum.enum_storage_range()
┃  ┃
┃  ┗━━┓
┃     │
┃     ├─ 11
┃     │   k: #injectPrank ~> #next [ STATICCALL ] ~> #endPrank ~> #execute ~> CONTINUATION:K
┃     │   pc: 145
┃     │   callDepth: DEPTH_CELL:Int
┃     │   statusCode: STATUSCODE:StatusCode
┃     │   src: test/nested/SimpleNested.t.sol:7:11
┃     │   method: test%Enum.enum_storage_range()
┃     ┃
┃     ┃ (1 step)
┃     ┣━━┓
┃     ┃  │
┃     ┃  ├─ 18 (split)
┃     ┃  │   k: #next [ STATICCALL ] ~> #endPrank ~> #execute ~> CONTINUATION:K
┃     ┃  │   pc: 145
┃     ┃  │   callDepth: DEPTH_CELL:Int
┃     ┃  │   statusCode: STATUSCODE:StatusCode
┃     ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃     ┃  │   method: test%Enum.enum_storage_range()
┃     ┃  ┃
┃     ┃  ┃ (branch)
┃     ┃  ┣━━┓ subst: .Subst
┃     ┃  ┃  ┃ constraint:
┃     ┃  ┃  ┃     C_ENUM_MEMBER_CONTRACT_ID:Int ==Int #address ( FoundryConsole )
┃     ┃  ┃  ┃     ( notBool C_ENUM_ID:Int ==Int #address ( FoundryConsole ) )
┃     ┃  ┃  ┃     ( notBool <acctID>
  #address ( FoundryConsole )
</acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
┃     ┃  ┃  │
┃     ┃  ┃  ├─ 130
┃     ┃  ┃  │   k: #next [ STATICCALL ] ~> #endPrank ~> #execute ~> CONTINUATION:K
┃     ┃  ┃  │   pc: 145
┃     ┃  ┃  │   callDepth: DEPTH_CELL:Int
┃     ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃     ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃     ┃  ┃  │   method: test%Enum.enum_storage_range()
┃     ┃  ┃  │
┃     ┃  ┃  │  (5 steps)
┃     ┃  ┃  └─ 86 (leaf, pending)
┃     ┃  ┃      k: #consoleLog 1756313567 b"" ~> 1 ~> #push ~> #setLocalMem 128 32 b"" ~> #pc [ STA ...
┃     ┃  ┃      pc: 145
┃     ┃  ┃      callDepth: DEPTH_CELL:Int
┃     ┃  ┃      statusCode: STATUSCODE:StatusCode
┃     ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃     ┃  ┃      method: test%Enum.enum_storage_range()
┃     ┃  ┃
┃     ┃  ┣━━┓ subst: .Subst
┃     ┃  ┃  ┃ constraint:
┃     ┃  ┃  ┃     C_ENUM_MEMBER_CONTRACT_ID:Int ==Int #address ( FoundryConsole )
┃     ┃  ┃  ┃     ( notBool C_ENUM_ID:Int ==Int #address ( FoundryConsole ) )
┃     ┃  ┃  ┃     ( notBool C_ENUM_ID:Int ==Int C_ENUM_MEMBER_CONTRACT_ID:Int )
┃     ┃  ┃  ┃     ( notBool <acctID>
  #address ( FoundryConsole )
</acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
┃     ┃  ┃  │
┃     ┃  ┃  ├─ 152
┃     ┃  ┃  │   k: #next [ STATICCALL ] ~> #endPrank ~> #execute ~> CONTINUATION:K
┃     ┃  ┃  │   pc: 145
┃     ┃  ┃  │   callDepth: DEPTH_CELL:Int
┃     ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃     ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃     ┃  ┃  │   method: test%Enum.enum_storage_range()
┃     ┃  ┃  │
┃     ┃  ┃  │  (4 steps)
┃     ┃  ┃  └─ 87 (leaf, pending)
┃     ┃  ┃      k: STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32 ~> #pc [ STATICCALL ] ~> ...
┃     ┃  ┃      pc: 145
┃     ┃  ┃      callDepth: DEPTH_CELL:Int
┃     ┃  ┃      statusCode: STATUSCODE:StatusCode
┃     ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃     ┃  ┃      method: test%Enum.enum_storage_range()
┃     ┃  ┃
┃     ┃  ┗━━┓ subst: .Subst
┃     ┃     ┃ constraint:
┃     ┃     ┃     ( notBool C_ENUM_ID:Int ==Int C_ENUM_MEMBER_CONTRACT_ID:Int )
┃     ┃     │
┃     ┃     ├─ 153
┃     ┃     │   k: #next [ STATICCALL ] ~> #endPrank ~> #execute ~> CONTINUATION:K
┃     ┃     │   pc: 145
┃     ┃     │   callDepth: DEPTH_CELL:Int
┃     ┃     │   statusCode: STATUSCODE:StatusCode
┃     ┃     │   src: test/nested/SimpleNested.t.sol:7:11
┃     ┃     │   method: test%Enum.enum_storage_range()
┃     ┃     │
┃     ┃     │  (4 steps)
┃     ┃     └─ 88 (leaf, pending)
┃     ┃         k: STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32 ~> #pc [ STATICCALL ] ~> ...
┃     ┃         pc: 145
┃     ┃         callDepth: DEPTH_CELL:Int
┃     ┃         statusCode: STATUSCODE:StatusCode
┃     ┃         src: test/nested/SimpleNested.t.sol:7:11
┃     ┃         method: test%Enum.enum_storage_range()
┃     ┃
┃     ┗━━┓
┃        │
┃        ├─ 19
┃        │   k: #injectPrank ~> #next [ STATICCALL ] ~> #endPrank ~> #execute ~> CONTINUATION:K
┃        │   pc: 145
┃        │   callDepth: DEPTH_CELL:Int
┃        │   statusCode: STATUSCODE:StatusCode
┃        │   src: test/nested/SimpleNested.t.sol:7:11
┃        │   method: test%Enum.enum_storage_range()
┃        ┃
┃        ┃ (1 step)
┃        ┣━━┓
┃        ┃  │
┃        ┃  ├─ 33 (split)
┃        ┃  │   k: #next [ STATICCALL ] ~> #endPrank ~> #execute ~> CONTINUATION:K
┃        ┃  │   pc: 145
┃        ┃  │   callDepth: DEPTH_CELL:Int
┃        ┃  │   statusCode: STATUSCODE:StatusCode
┃        ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃        ┃  │   method: test%Enum.enum_storage_range()
┃        ┃  ┃
┃        ┃  ┃ (branch)
┃        ┃  ┣━━┓ subst: .Subst
┃        ┃  ┃  ┃ constraint:
┃        ┃  ┃  ┃     C_ENUM_MEMBER_CONTRACT_ID:Int ==Int #address ( FoundryConsole )
┃        ┃  ┃  ┃     ( notBool C_ENUM_ID:Int ==Int #address ( FoundryConsole ) )
┃        ┃  ┃  ┃     ( notBool <acctID>
  #address ( FoundryConsole )
</acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
┃        ┃  ┃  │
┃        ┃  ┃  ├─ 138
┃        ┃  ┃  │   k: #next [ STATICCALL ] ~> #endPrank ~> #execute ~> CONTINUATION:K
┃        ┃  ┃  │   pc: 145
┃        ┃  ┃  │   callDepth: DEPTH_CELL:Int
┃        ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃        ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃        ┃  ┃  │   method: test%Enum.enum_storage_range()
┃        ┃  ┃  │
┃        ┃  ┃  │  (4 steps)
┃        ┃  ┃  └─ 89 (leaf, pending)
┃        ┃  ┃      k: STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32 ~> #pc [ STATICCALL ] ~> ...
┃        ┃  ┃      pc: 145
┃        ┃  ┃      callDepth: DEPTH_CELL:Int
┃        ┃  ┃      statusCode: STATUSCODE:StatusCode
┃        ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃        ┃  ┃      method: test%Enum.enum_storage_range()
┃        ┃  ┃
┃        ┃  ┗━━┓ subst: .Subst
┃        ┃     ┃ constraint:
┃        ┃     ┃     ( notBool C_ENUM_ID:Int ==Int C_ENUM_MEMBER_CONTRACT_ID:Int )
┃        ┃     │
┃        ┃     ├─ 139
┃        ┃     │   k: #next [ STATICCALL ] ~> #endPrank ~> #execute ~> CONTINUATION:K
┃        ┃     │   pc: 145
┃        ┃     │   callDepth: DEPTH_CELL:Int
┃        ┃     │   statusCode: STATUSCODE:StatusCode
┃        ┃     │   src: test/nested/SimpleNested.t.sol:7:11
┃        ┃     │   method: test%Enum.enum_storage_range()
┃        ┃     │
┃        ┃     │  (4 steps)
┃        ┃     └─ 90 (leaf, pending)
┃        ┃         k: STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32 ~> #pc [ STATICCALL ] ~> ...
┃        ┃         pc: 145
┃        ┃         callDepth: DEPTH_CELL:Int
┃        ┃         statusCode: STATUSCODE:StatusCode
┃        ┃         src: test/nested/SimpleNested.t.sol:7:11
┃        ┃         method: test%Enum.enum_storage_range()
┃        ┃
┃        ┗━━┓
┃           │
┃           ├─ 34
┃           │   k: #injectPrank ~> #next [ STATICCALL ] ~> #endPrank ~> #execute ~> CONTINUATION:K
┃           │   pc: 145
┃           │   callDepth: DEPTH_CELL:Int
┃           │   statusCode: STATUSCODE:StatusCode
┃           │   src: test/nested/SimpleNested.t.sol:7:11
┃           │   method: test%Enum.enum_storage_range()
┃           ┃
┃           ┃ (1 step)
┃           ┣━━┓
┃           ┃  │
┃           ┃  ├─ 56
┃           ┃  │   k: #next [ STATICCALL ] ~> #endPrank ~> #execute ~> CONTINUATION:K
┃           ┃  │   pc: 145
┃           ┃  │   callDepth: DEPTH_CELL:Int
┃           ┃  │   statusCode: STATUSCODE:StatusCode
┃           ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃           ┃  │   method: test%Enum.enum_storage_range()
┃           ┃  │
┃           ┃  │  (4 steps)
┃           ┃  └─ 91 (leaf, pending)
┃           ┃      k: STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32 ~> #pc [ STATICCALL ] ~> ...
┃           ┃      pc: 145
┃           ┃      callDepth: DEPTH_CELL:Int
┃           ┃      statusCode: STATUSCODE:StatusCode
┃           ┃      src: test/nested/SimpleNested.t.sol:7:11
┃           ┃      method: test%Enum.enum_storage_range()
┃           ┃
┃           ┗━━┓
┃              │
┃              ├─ 57
┃              │   k: #injectPrank ~> #next [ STATICCALL ] ~> #endPrank ~> #execute ~> CONTINUATION:K
┃              │   pc: 145
┃              │   callDepth: DEPTH_CELL:Int
┃              │   statusCode: STATUSCODE:StatusCode
┃              │   src: test/nested/SimpleNested.t.sol:7:11
┃              │   method: test%Enum.enum_storage_range()
┃              ┃
┃              ┃ (1 step)
┃              ┣━━┓
┃              ┃  │
┃              ┃  └─ 92 (leaf, pending)
┃              ┃      k: #next [ STATICCALL ] ~> #endPrank ~> #execute ~> CONTINUATION:K
┃              ┃      pc: 145
┃              ┃      callDepth: DEPTH_CELL:Int
┃              ┃      statusCode: STATUSCODE:StatusCode
┃              ┃      src: test/nested/SimpleNested.t.sol:7:11
┃              ┃      method: test%Enum.enum_storage_range()
┃              ┃
┃              ┗━━┓
┃                 │
┃                 └─ 93 (leaf, pending)
┃                     k: #injectPrank ~> #next [ STATICCALL ] ~> #endPrank ~> #execute ~> CONTINUATION:K
┃                     pc: 145
┃                     callDepth: DEPTH_CELL:Int
┃                     statusCode: STATUSCODE:StatusCode
┃                     src: test/nested/SimpleNested.t.sol:7:11
┃                     method: test%Enum.enum_storage_range()
┃
┗━━┓
   │
   ├─ 6
   │   k: #addr [ STATICCALL ] ~> #exec [ STATICCALL ] ~> #pc [ STATICCALL ] ~> #execute ~ ...
   │   pc: 145
   │   callDepth: CALLDEPTH_CELL:Int
   │   statusCode: STATUSCODE:StatusCode
   │   src: test/nested/SimpleNested.t.sol:7:11
   │   method: test%Enum.enum_storage_range()
   │
   │  (3 steps)
   ├─ 12
   │   k: STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32 ~> #pc [ STATICCALL ] ~> ...
   │   pc: 145
   │   callDepth: CALLDEPTH_CELL:Int
   │   statusCode: STATUSCODE:StatusCode
   │   src: test/nested/SimpleNested.t.sol:7:11
   │   method: test%Enum.enum_storage_range()
   ┃
   ┃ (1 step)
   ┣━━┓
   ┃  │
   ┃  ├─ 20 (split)
   ┃  │   k: #consoleLog 1756313567 b"" ~> 1 ~> #push ~> #setLocalMem 128 32 b"" ~> #pc [ STA ...
   ┃  │   pc: 145
   ┃  │   callDepth: CALLDEPTH_CELL:Int
   ┃  │   statusCode: STATUSCODE:StatusCode
   ┃  │   src: test/nested/SimpleNested.t.sol:7:11
   ┃  │   method: test%Enum.enum_storage_range()
   ┃  ┃
   ┃  ┃ (branch)
   ┃  ┣━━┓ subst: .Subst
   ┃  ┃  ┃ constraint:
   ┃  ┃  ┃     0 ==Int ( (chop ( lengthBytes ( OUTPUT_CELL:Bytes ) )) s<Word (32) )
   ┃  ┃  │
   ┃  ┃  ├─ 140
   ┃  ┃  │   k: #consoleLog 1756313567 b"" ~> 1 ~> #push ~> #setLocalMem 128 32 b"" ~> #pc [ STA ...
   ┃  ┃  │   pc: 145
   ┃  ┃  │   callDepth: CALLDEPTH_CELL:Int
   ┃  ┃  │   statusCode: STATUSCODE:StatusCode
   ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
   ┃  ┃  │   method: test%Enum.enum_storage_range()
   ┃  ┃  │
   ┃  ┃  │  (188 steps)
   ┃  ┃  └─ 94 (leaf, pending)
   ┃  ┃      k: JUMPI 520 bool2Word ( ( (chop ( lengthBytes ( OUTPUT_CELL:Bytes ) )) s<Word (32) ...
   ┃  ┃      pc: 515
   ┃  ┃      callDepth: CALLDEPTH_CELL:Int
   ┃  ┃      statusCode: STATUSCODE:StatusCode
   ┃  ┃      src: lib/forge-std/src/StdInvariant.sol:90:90
   ┃  ┃      method: test%Enum.enum_storage_range()
   ┃  ┃
   ┃  ┗━━┓ subst: .Subst
   ┃     ┃ constraint:
   ┃     ┃     ( notBool 0 ==Int ( (chop ( lengthBytes ( OUTPUT_CELL:Bytes ) )) s<Word (32) ) )
   ┃     │
   ┃     ├─ 141
   ┃     │   k: #consoleLog 1756313567 b"" ~> 1 ~> #push ~> #setLocalMem 128 32 b"" ~> #pc [ STA ...
   ┃     │   pc: 145
   ┃     │   callDepth: CALLDEPTH_CELL:Int
   ┃     │   statusCode: STATUSCODE:StatusCode
   ┃     │   src: test/nested/SimpleNested.t.sol:7:11
   ┃     │   method: test%Enum.enum_storage_range()
   ┃     │
   ┃     │  (188 steps)
   ┃     └─ 95 (leaf, pending)
   ┃         k: JUMPI 520 bool2Word ( ( (chop ( lengthBytes ( OUTPUT_CELL:Bytes ) )) s<Word (32) ...
   ┃         pc: 515
   ┃         callDepth: CALLDEPTH_CELL:Int
   ┃         statusCode: STATUSCODE:StatusCode
   ┃         src: lib/forge-std/src/StdInvariant.sol:90:90
   ┃         method: test%Enum.enum_storage_range()
   ┃
   ┗━━┓
      │
      ├─ 21 (split)
      │   k: #accessAccounts C_ENUM_MEMBER_CONTRACT_ID:Int ~> #checkCall C_ENUM_ID:Int 0 ~> # ...
      │   pc: 145
      │   callDepth: CALLDEPTH_CELL:Int
      │   statusCode: STATUSCODE:StatusCode
      │   src: test/nested/SimpleNested.t.sol:7:11
      │   method: test%Enum.enum_storage_range()
      ┃
      ┃ (branch)
      ┣━━┓ subst: .Subst
      ┃  ┃ constraint:
      ┃  ┃     CALLDEPTH_CELL:Int <Int 1024
      ┃  │
      ┃  ├─ 132
      ┃  │   k: #accessAccounts C_ENUM_MEMBER_CONTRACT_ID:Int ~> #checkCall C_ENUM_ID:Int 0 ~> # ...
      ┃  │   pc: 145
      ┃  │   callDepth: CALLDEPTH_CELL:Int
      ┃  │   statusCode: STATUSCODE:StatusCode
      ┃  │   src: test/nested/SimpleNested.t.sol:7:11
      ┃  │   method: test%Enum.enum_storage_range()
      ┃  │
      ┃  │  (973 steps)
      ┃  └─ 96 (leaf, pending)
      ┃      k: #halt ~> CONTINUATION:K
      ┃      pc: 68
      ┃      callDepth: CALLDEPTH_CELL:Int
      ┃      statusCode: EVMC_SUCCESS
      ┃      src: test/nested/SimpleNested.t.sol:7:11
      ┃      method: test%Enum.enum_storage_range()
      ┃
      ┗━━┓ subst: .Subst
         ┃ constraint:
         ┃     1024 <=Int CALLDEPTH_CELL:Int
         │
         ├─ 133
         │   k: #accessAccounts C_ENUM_MEMBER_CONTRACT_ID:Int ~> #checkCall C_ENUM_ID:Int 0 ~> # ...
         │   pc: 145
         │   callDepth: CALLDEPTH_CELL:Int
         │   statusCode: STATUSCODE:StatusCode
         │   src: test/nested/SimpleNested.t.sol:7:11
         │   method: test%Enum.enum_storage_range()
         │
         │  (79 steps)
         └─ 97 (leaf, pending)
             k: #halt ~> CONTINUATION:K
             pc: 161
             callDepth: CALLDEPTH_CELL:Int
             statusCode: EVMC_REVERT
             src: test/nested/SimpleNested.t.sol:7:11
             method: test%Enum.enum_storage_range()


┌─ 2 (root, leaf, target, terminal)
│   k: #halt ~> CONTINUATION:K
│   pc: PC_CELL_5d410f2a:Int
│   callDepth: CALLDEPTH_CELL_5d410f2a:Int
│   statusCode: STATUSCODE_FINAL:StatusCode



module SUMMARY-TEST%ENUM.ENUM-STORAGE-RANGE():0
    
    
    rule [BASIC-BLOCK-1-TO-3]: <foundry>
           <kevm>
             <k>
               ( .K => #next [ STATICCALL ] ~> .K )
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     C_ENUM_ID:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( .WordStack => ( 0 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 128 : ( 4 : ( 128 : ( 32 : ( 132 : ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     ( b"" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_ENUM_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_ENUM_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_ENUM_MEMBER_CONTRACT_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_MEMBER_CONTRACT_BAL:Int
                     </balance>
                     <storage>
                       C_ENUM_MEMBER_CONTRACT_STORAGE:Map
                     </storage>
                     <nonce>
                       C_ENUM_MEMBER_CONTRACT_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
               )))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-1-TO-3)]
    
    rule [BASIC-BLOCK-6-TO-12]: <foundry>
           <kevm>
             <k>
               ( #addr [ STATICCALL ]
               ~> #exec [ STATICCALL ] => STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32 ~> .K )
               ~> #pc [ STATICCALL ]
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     C_ENUM_ID:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 0 => 132 ) : ( ( C_ENUM_MEMBER_CONTRACT_ID:Int => 1756313567 ) : ( ( 128 => C_ENUM_MEMBER_CONTRACT_ID:Int ) : ( ( 4 => 5 ) : ( ( 128 => 67 ) : ( ( 32 => 1664546334 ) : ( ( 132 : ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     CALLDEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_ENUM_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_ENUM_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_ENUM_MEMBER_CONTRACT_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_MEMBER_CONTRACT_BAL:Int
                     </balance>
                     <storage>
                       C_ENUM_MEMBER_CONTRACT_STORAGE:Map
                     </storage>
                     <nonce>
                       C_ENUM_MEMBER_CONTRACT_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NEWCALLER_CELL:Account
               </newCaller>
               <active>
                 ACTIVE_CELL:Bool
               </active>
               <depth>
                 DEPTH_CELL:Int
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 ISREVERTEXPECTED_CELL:Bool
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
       andBool ( ( notBool ( CALLDEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int andBool ISREVERTEXPECTED_CELL:Bool ) )
       andBool ( ( notBool ( ACTIVE_CELL:Bool andBool ( CALLDEPTH_CELL:Int ==Int DEPTH_CELL:Int andBool NEWCALLER_CELL:Account =/=K C_ENUM_ID:Int ) ) )
               )))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-6-TO-12)]
    
    rule [BASIC-BLOCK-7-TO-13]: <foundry>
           <kevm>
             <k>
               ( #next [ STATICCALL ] ~> .K => #injectPrank
               ~> #next [ STATICCALL ]
               ~> #endPrank )
               ~> #checkRevert
               ~> #updateRevertOutput 128 32
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     C_ENUM_ID:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( 0 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 128 : ( 4 : ( 128 : ( 32 : ( 132 : ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     EXPECTEDDEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_ENUM_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_ENUM_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_ENUM_MEMBER_CONTRACT_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_MEMBER_CONTRACT_BAL:Int
                     </balance>
                     <storage>
                       C_ENUM_MEMBER_CONTRACT_STORAGE:Map
                     </storage>
                     <nonce>
                       C_ENUM_MEMBER_CONTRACT_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NEWCALLER_CELL:Account
               </newCaller>
               <active>
                 ( ACTIVE_CELL:Bool => true )
               </active>
               <depth>
                 ( DEPTH_CELL:Int => EXPECTEDDEPTH_CELL:Int )
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( ACTIVE_CELL:Bool
       andBool ( _ISREVERTEXPECTED_CELL:Bool
       andBool ( DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( _CALLDEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( NEWCALLER_CELL:Account =/=K C_ENUM_ID:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
               ))))))))))))))))))))))))))))))))))))))
       ensures NEWCALLER_CELL:Account ~> .K =/=K C_ENUM_ID:Int ~> .K
      [priority(20), label(BASIC-BLOCK-7-TO-13)]
    
    rule [BASIC-BLOCK-14-TO-25]: <foundry>
           <kevm>
             <k>
               ( #next [ STATICCALL ] ~> .K => #injectPrank
               ~> #next [ STATICCALL ]
               ~> #endPrank )
               ~> #checkRevert
               ~> #updateRevertOutput 128 32
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     C_ENUM_ID:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( 0 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 128 : ( 4 : ( 128 : ( 32 : ( 132 : ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     EXPECTEDDEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_ENUM_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_ENUM_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_ENUM_MEMBER_CONTRACT_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_MEMBER_CONTRACT_BAL:Int
                     </balance>
                     <storage>
                       C_ENUM_MEMBER_CONTRACT_STORAGE:Map
                     </storage>
                     <nonce>
                       C_ENUM_MEMBER_CONTRACT_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NEWCALLER_CELL:Account
               </newCaller>
               <active>
                 ( ACTIVE_CELL:Bool => true )
               </active>
               <depth>
                 ( DEPTH_CELL:Int => EXPECTEDDEPTH_CELL:Int )
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( ACTIVE_CELL:Bool
       andBool ( _ISREVERTEXPECTED_CELL:Bool
       andBool ( DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( _CALLDEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( NEWCALLER_CELL:Account =/=K C_ENUM_ID:Int
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
               ))))))))))))))))))))))))))))))))))))))
       ensures NEWCALLER_CELL:Account ~> .K =/=K C_ENUM_ID:Int ~> .K
      [priority(20), label(BASIC-BLOCK-14-TO-25)]
    
    rule [BASIC-BLOCK-26-TO-44]: <foundry>
           <kevm>
             <k>
               ( #next [ STATICCALL ] ~> .K => #injectPrank
               ~> #next [ STATICCALL ]
               ~> #endPrank )
               ~> #checkRevert
               ~> #updateRevertOutput 128 32
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     C_ENUM_ID:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( 0 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 128 : ( 4 : ( 128 : ( 32 : ( 132 : ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     EXPECTEDDEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_ENUM_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_ENUM_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_ENUM_MEMBER_CONTRACT_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_MEMBER_CONTRACT_BAL:Int
                     </balance>
                     <storage>
                       C_ENUM_MEMBER_CONTRACT_STORAGE:Map
                     </storage>
                     <nonce>
                       C_ENUM_MEMBER_CONTRACT_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NEWCALLER_CELL:Account
               </newCaller>
               <active>
                 ( ACTIVE_CELL:Bool => true )
               </active>
               <depth>
                 ( DEPTH_CELL:Int => EXPECTEDDEPTH_CELL:Int )
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( ACTIVE_CELL:Bool
       andBool ( _ISREVERTEXPECTED_CELL:Bool
       andBool ( DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( _CALLDEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( NEWCALLER_CELL:Account =/=K C_ENUM_ID:Int
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
               ))))))))))))))))))))))))))))))))))))))
       ensures NEWCALLER_CELL:Account ~> .K =/=K C_ENUM_ID:Int ~> .K
      [priority(20), label(BASIC-BLOCK-26-TO-44)]
    
    rule [BASIC-BLOCK-45-TO-75]: <foundry>
           <kevm>
             <k>
               ( #next [ STATICCALL ] ~> .K => #injectPrank
               ~> #next [ STATICCALL ]
               ~> #endPrank )
               ~> #checkRevert
               ~> #updateRevertOutput 128 32
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     C_ENUM_ID:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( 0 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 128 : ( 4 : ( 128 : ( 32 : ( 132 : ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     EXPECTEDDEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_ENUM_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_ENUM_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_ENUM_MEMBER_CONTRACT_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_MEMBER_CONTRACT_BAL:Int
                     </balance>
                     <storage>
                       C_ENUM_MEMBER_CONTRACT_STORAGE:Map
                     </storage>
                     <nonce>
                       C_ENUM_MEMBER_CONTRACT_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NEWCALLER_CELL:Account
               </newCaller>
               <active>
                 ( ACTIVE_CELL:Bool => true )
               </active>
               <depth>
                 ( DEPTH_CELL:Int => EXPECTEDDEPTH_CELL:Int )
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( ACTIVE_CELL:Bool
       andBool ( _ISREVERTEXPECTED_CELL:Bool
       andBool ( DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( _CALLDEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( NEWCALLER_CELL:Account =/=K C_ENUM_ID:Int
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
               ))))))))))))))))))))))))))))))))))))))
       ensures NEWCALLER_CELL:Account ~> .K =/=K C_ENUM_ID:Int ~> .K
      [priority(20), label(BASIC-BLOCK-45-TO-75)]
    
    rule [BASIC-BLOCK-56-TO-91]: <foundry>
           <kevm>
             <k>
               ( #next [ STATICCALL ] ~> .K => STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32
               ~> #pc [ STATICCALL ] )
               ~> #endPrank
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     NCL:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 0 => 132 ) : ( ( C_ENUM_MEMBER_CONTRACT_ID:Int => 1756313567 ) : ( ( 128 => C_ENUM_MEMBER_CONTRACT_ID:Int ) : ( ( 4 => 5 ) : ( ( 128 => 67 ) : ( ( 32 => 1664546334 ) : ( ( 132 : ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     DEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   NOG2:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_ENUM_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_ENUM_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_ENUM_MEMBER_CONTRACT_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_MEMBER_CONTRACT_BAL:Int
                     </balance>
                     <storage>
                       C_ENUM_MEMBER_CONTRACT_STORAGE:Map
                     </storage>
                     <nonce>
                       C_ENUM_MEMBER_CONTRACT_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NCL:Int
               </newCaller>
               <newOrigin>
                 NOG2:Int
               </newOrigin>
               <active>
                 true
               </active>
               <depth>
                 DEPTH_CELL:Int
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 ISREVERTEXPECTED_CELL:Bool
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( _ACTIVE_CELL:Bool
       andBool ( _CALLDEPTH_CELL:Int ==Int DEPTH_CELL:Int
       andBool ( _NEWCALLER_CELL:Account ==K NCL:Int
       andBool ( _NEWORIGIN_CELL:Account ==K NOG2:Int
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( _NOG:Int =/=Int NOG2:Int
       andBool ( _NOG0:Int =/=Int NOG2:Int
       andBool ( _NOG1:Int =/=Int NOG2:Int
       andBool ( C_ENUM_ID:Int =/=Int NCL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
       andBool ( ( notBool ( DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int andBool ISREVERTEXPECTED_CELL:Bool ) )
               ))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-56-TO-91)]
    
    rule [BASIC-BLOCK-66-TO-106]: <foundry>
           <kevm>
             <k>
               ( #next [ STATICCALL ] ~> .K => STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32
               ~> #pc [ STATICCALL ] )
               ~> #endPrank
               ~> #checkRevert
               ~> #updateRevertOutput 128 32
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     NCL:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 0 => 132 ) : ( ( C_ENUM_MEMBER_CONTRACT_ID:Int => 1756313567 ) : ( ( 128 => C_ENUM_MEMBER_CONTRACT_ID:Int ) : ( ( 4 => 5 ) : ( ( 128 => 67 ) : ( ( 32 => 1664546334 ) : ( ( 132 : ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     EXPECTEDDEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   NOG1:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_ENUM_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_ENUM_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_ENUM_MEMBER_CONTRACT_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_MEMBER_CONTRACT_BAL:Int
                     </balance>
                     <storage>
                       C_ENUM_MEMBER_CONTRACT_STORAGE:Map
                     </storage>
                     <nonce>
                       C_ENUM_MEMBER_CONTRACT_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NCL:Int
               </newCaller>
               <newOrigin>
                 NOG1:Int
               </newOrigin>
               <active>
                 true
               </active>
               <depth>
                 EXPECTEDDEPTH_CELL:Int
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( _ACTIVE_CELL:Bool
       andBool ( _NEWCALLER_CELL:Account ==K NCL:Int
       andBool ( _NEWORIGIN_CELL:Account ==K NOG1:Int
       andBool ( _ISREVERTEXPECTED_CELL:Bool
       andBool ( _DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( _CALLDEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( _NOG:Int =/=Int NOG1:Int
       andBool ( _NOG0:Int =/=Int NOG1:Int
       andBool ( C_ENUM_ID:Int =/=Int NCL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
               ))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-66-TO-106)]
    
    rule [BASIC-BLOCK-70-TO-113]: <foundry>
           <kevm>
             <k>
               ( #next [ STATICCALL ] ~> .K => STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32
               ~> #pc [ STATICCALL ] )
               ~> #endPrank
               ~> #checkRevert
               ~> #updateRevertOutput 128 32
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     NCL:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 0 => 132 ) : ( ( C_ENUM_MEMBER_CONTRACT_ID:Int => 1756313567 ) : ( ( 128 => C_ENUM_MEMBER_CONTRACT_ID:Int ) : ( ( 4 => 5 ) : ( ( 128 => 67 ) : ( ( 32 => 1664546334 ) : ( ( 132 : ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     EXPECTEDDEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   NOG0:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_ENUM_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_ENUM_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_ENUM_MEMBER_CONTRACT_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_MEMBER_CONTRACT_BAL:Int
                     </balance>
                     <storage>
                       C_ENUM_MEMBER_CONTRACT_STORAGE:Map
                     </storage>
                     <nonce>
                       C_ENUM_MEMBER_CONTRACT_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NCL:Int
               </newCaller>
               <newOrigin>
                 NOG0:Int
               </newOrigin>
               <active>
                 true
               </active>
               <depth>
                 EXPECTEDDEPTH_CELL:Int
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( _ACTIVE_CELL:Bool
       andBool ( _NEWCALLER_CELL:Account ==K NCL:Int
       andBool ( _NEWORIGIN_CELL:Account ==K NOG0:Int
       andBool ( _ISREVERTEXPECTED_CELL:Bool
       andBool ( _DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( _CALLDEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( _NOG:Int =/=Int NOG0:Int
       andBool ( C_ENUM_ID:Int =/=Int NCL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
               )))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-70-TO-113)]
    
    rule [BASIC-BLOCK-72-TO-116]: <foundry>
           <kevm>
             <k>
               ( #next [ STATICCALL ] ~> .K => STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32
               ~> #pc [ STATICCALL ] )
               ~> #endPrank
               ~> #checkRevert
               ~> #updateRevertOutput 128 32
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     NCL:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 0 => 132 ) : ( ( C_ENUM_MEMBER_CONTRACT_ID:Int => 1756313567 ) : ( ( 128 => C_ENUM_MEMBER_CONTRACT_ID:Int ) : ( ( 4 => 5 ) : ( ( 128 => 67 ) : ( ( 32 => 1664546334 ) : ( ( 132 : ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     EXPECTEDDEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   NOG:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_ENUM_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_ENUM_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_ENUM_MEMBER_CONTRACT_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_MEMBER_CONTRACT_BAL:Int
                     </balance>
                     <storage>
                       C_ENUM_MEMBER_CONTRACT_STORAGE:Map
                     </storage>
                     <nonce>
                       C_ENUM_MEMBER_CONTRACT_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NCL:Int
               </newCaller>
               <newOrigin>
                 NOG:Int
               </newOrigin>
               <active>
                 true
               </active>
               <depth>
                 EXPECTEDDEPTH_CELL:Int
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( _ACTIVE_CELL:Bool
       andBool ( _NEWCALLER_CELL:Account ==K NCL:Int
       andBool ( _NEWORIGIN_CELL:Account ==K NOG:Int
       andBool ( _ISREVERTEXPECTED_CELL:Bool
       andBool ( _DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( _CALLDEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int =/=Int NCL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
               ))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-72-TO-116)]
    
    rule [BASIC-BLOCK-73-TO-117]: <foundry>
           <kevm>
             <k>
               ( #next [ STATICCALL ] ~> .K => STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32
               ~> #pc [ STATICCALL ] )
               ~> #endPrank
               ~> #checkRevert
               ~> #updateRevertOutput 128 32
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     NCL:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 0 => 132 ) : ( ( C_ENUM_MEMBER_CONTRACT_ID:Int => 1756313567 ) : ( ( 128 => C_ENUM_MEMBER_CONTRACT_ID:Int ) : ( ( 4 => 5 ) : ( ( 128 => 67 ) : ( ( 32 => 1664546334 ) : ( ( 132 : ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     EXPECTEDDEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_ENUM_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_ENUM_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_ENUM_MEMBER_CONTRACT_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_MEMBER_CONTRACT_BAL:Int
                     </balance>
                     <storage>
                       C_ENUM_MEMBER_CONTRACT_STORAGE:Map
                     </storage>
                     <nonce>
                       C_ENUM_MEMBER_CONTRACT_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NCL:Int
               </newCaller>
               <newOrigin>
                 .Account
               </newOrigin>
               <active>
                 true
               </active>
               <depth>
                 EXPECTEDDEPTH_CELL:Int
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( _ACTIVE_CELL:Bool
       andBool ( _NEWCALLER_CELL:Account ==K NCL:Int
       andBool ( _ISREVERTEXPECTED_CELL:Bool
       andBool ( _DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( _CALLDEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( _NEWORIGIN_CELL:Account ==K .Account
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int =/=Int NCL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
               ))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-73-TO-117)]
    
    rule [BASIC-BLOCK-76-TO-123]: <foundry>
           <kevm>
             <k>
               ( #next [ STATICCALL ] ~> .K => #injectPrank
               ~> #next [ STATICCALL ]
               ~> #endPrank )
               ~> #checkRevert
               ~> #updateRevertOutput 128 32
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     C_ENUM_ID:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( 0 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 128 : ( 4 : ( 128 : ( 32 : ( 132 : ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     EXPECTEDDEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_ENUM_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_ENUM_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_ENUM_MEMBER_CONTRACT_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_MEMBER_CONTRACT_BAL:Int
                     </balance>
                     <storage>
                       C_ENUM_MEMBER_CONTRACT_STORAGE:Map
                     </storage>
                     <nonce>
                       C_ENUM_MEMBER_CONTRACT_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NEWCALLER_CELL:Account
               </newCaller>
               <active>
                 ( ACTIVE_CELL:Bool => true )
               </active>
               <depth>
                 ( DEPTH_CELL:Int => EXPECTEDDEPTH_CELL:Int )
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( ACTIVE_CELL:Bool
       andBool ( _ISREVERTEXPECTED_CELL:Bool
       andBool ( DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( _CALLDEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( NEWCALLER_CELL:Account =/=K C_ENUM_ID:Int
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
               ))))))))))))))))))))))))))))))))))))))
       ensures NEWCALLER_CELL:Account ~> .K =/=K C_ENUM_ID:Int ~> .K
      [priority(20), label(BASIC-BLOCK-76-TO-123)]
    
    rule [BASIC-BLOCK-138-TO-89]: <foundry>
           <kevm>
             <k>
               ( #next [ STATICCALL ] ~> .K => STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32
               ~> #pc [ STATICCALL ] )
               ~> #endPrank
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     NCL:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 0 => 132 ) : ( ( C_ENUM_MEMBER_CONTRACT_ID:Int => 1756313567 ) : ( ( 128 => C_ENUM_MEMBER_CONTRACT_ID:Int ) : ( ( 4 => 5 ) : ( ( 128 => 67 ) : ( ( 32 => 1664546334 ) : ( ( 132 : ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     DEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   NOG1:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_ENUM_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_ENUM_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_ENUM_MEMBER_CONTRACT_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_MEMBER_CONTRACT_BAL:Int
                     </balance>
                     <storage>
                       C_ENUM_MEMBER_CONTRACT_STORAGE:Map
                     </storage>
                     <nonce>
                       C_ENUM_MEMBER_CONTRACT_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NCL:Int
               </newCaller>
               <newOrigin>
                 NOG1:Int
               </newOrigin>
               <active>
                 true
               </active>
               <depth>
                 DEPTH_CELL:Int
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 ISREVERTEXPECTED_CELL:Bool
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( _ACTIVE_CELL:Bool
       andBool ( _CALLDEPTH_CELL:Int ==Int DEPTH_CELL:Int
       andBool ( _NEWCALLER_CELL:Account ==K NCL:Int
       andBool ( _NEWORIGIN_CELL:Account ==K NOG1:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int ==Int #address ( FoundryConsole )
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryConsole )
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( _NOG:Int =/=Int NOG1:Int
       andBool ( _NOG0:Int =/=Int NOG1:Int
       andBool ( C_ENUM_ID:Int =/=Int NCL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          #address ( FoundryConsole )
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
       andBool ( ( notBool ( DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int andBool ISREVERTEXPECTED_CELL:Bool ) )
               ))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-138-TO-89)]
    
    rule [BASIC-BLOCK-139-TO-90]: <foundry>
           <kevm>
             <k>
               ( #next [ STATICCALL ] ~> .K => STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32
               ~> #pc [ STATICCALL ] )
               ~> #endPrank
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     NCL:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 0 => 132 ) : ( ( C_ENUM_MEMBER_CONTRACT_ID:Int => 1756313567 ) : ( ( 128 => C_ENUM_MEMBER_CONTRACT_ID:Int ) : ( ( 4 => 5 ) : ( ( 128 => 67 ) : ( ( 32 => 1664546334 ) : ( ( 132 : ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     DEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   NOG1:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_ENUM_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_ENUM_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_ENUM_MEMBER_CONTRACT_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_MEMBER_CONTRACT_BAL:Int
                     </balance>
                     <storage>
                       C_ENUM_MEMBER_CONTRACT_STORAGE:Map
                     </storage>
                     <nonce>
                       C_ENUM_MEMBER_CONTRACT_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NCL:Int
               </newCaller>
               <newOrigin>
                 NOG1:Int
               </newOrigin>
               <active>
                 true
               </active>
               <depth>
                 DEPTH_CELL:Int
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 ISREVERTEXPECTED_CELL:Bool
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( _ACTIVE_CELL:Bool
       andBool ( _CALLDEPTH_CELL:Int ==Int DEPTH_CELL:Int
       andBool ( _NEWCALLER_CELL:Account ==K NCL:Int
       andBool ( _NEWORIGIN_CELL:Account ==K NOG1:Int
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( _NOG:Int =/=Int NOG1:Int
       andBool ( _NOG0:Int =/=Int NOG1:Int
       andBool ( C_ENUM_ID:Int =/=Int NCL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
       andBool ( ( notBool ( DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int andBool ISREVERTEXPECTED_CELL:Bool ) )
               )))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-139-TO-90)]
    
    rule [BASIC-BLOCK-140-TO-94]: <foundry>
           <kevm>
             <k>
               ( #consoleLog 1756313567 b""
               ~> 1
               ~> #push
               ~> #setLocalMem 128 32 b""
               ~> #pc [ STATICCALL ] => JUMPI 520 bool2Word ( ( (chop ( lengthBytes ( OUTPUT_CELL:Bytes ) )) s<Word (32) ) ==Int 0 )
               ~> #pc [ JUMPI ] )
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   OUTPUT_CELL:Bytes
                 </output>
                 <callState>
                   <id>
                     C_ENUM_ID:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 132 => 0 ) : ( ( 1756313567 => 128 ) : ( ( #address ( FoundryConsole ) => chop ( ( lengthBytes ( OUTPUT_CELL:Bytes ) +Int 128 ) ) ) : ( ( 5 => 198 ) : ( ( 67 => 5 ) : ( ( 1664546334 => 67 ) : ( .WordStack => ( 1664546334 : .WordStack ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     ( b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , chop ( ( ( notMaxUInt5 &Int chop ( ( lengthBytes ( OUTPUT_CELL:Bytes ) +Int maxUInt5 ) ) ) +Int 128 ) ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     CALLDEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       #address ( FoundryConsole )
                     </acctID>
                     <balance>
                       C_ENUM_MEMBER_CONTRACT_BAL:Int
                     </balance>
                     <storage>
                       C_ENUM_MEMBER_CONTRACT_STORAGE:Map
                     </storage>
                     <nonce>
                       C_ENUM_MEMBER_CONTRACT_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_ENUM_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #address ( FoundryConsole ) )
                       C_ENUM_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_ENUM_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NEWCALLER_CELL:Account
               </newCaller>
               <active>
                 ACTIVE_CELL:Bool
               </active>
               <depth>
                 DEPTH_CELL:Int
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 ISREVERTEXPECTED_CELL:Bool
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( _C_ENUM_MEMBER_CONTRACT_ID:Int ==Int #address ( FoundryConsole )
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryConsole )
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( 0 ==Int ( (chop ( lengthBytes ( OUTPUT_CELL:Bytes ) )) s<Word (32) )
       andBool ( ( notBool <acctID>
          #address ( FoundryConsole )
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( notBool ( CALLDEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int andBool ISREVERTEXPECTED_CELL:Bool ) )
       andBool ( ( notBool ( ACTIVE_CELL:Bool andBool ( CALLDEPTH_CELL:Int ==Int DEPTH_CELL:Int andBool NEWCALLER_CELL:Account =/=K C_ENUM_ID:Int ) ) )
               )))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-140-TO-94)]
    
    rule [BASIC-BLOCK-141-TO-95]: <foundry>
           <kevm>
             <k>
               ( #consoleLog 1756313567 b""
               ~> 1
               ~> #push
               ~> #setLocalMem 128 32 b""
               ~> #pc [ STATICCALL ] => JUMPI 520 bool2Word ( ( (chop ( lengthBytes ( OUTPUT_CELL:Bytes ) )) s<Word (32) ) ==Int 0 )
               ~> #pc [ JUMPI ] )
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   OUTPUT_CELL:Bytes
                 </output>
                 <callState>
                   <id>
                     C_ENUM_ID:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 132 => 0 ) : ( ( 1756313567 => 128 ) : ( ( #address ( FoundryConsole ) => chop ( ( lengthBytes ( OUTPUT_CELL:Bytes ) +Int 128 ) ) ) : ( ( 5 => 198 ) : ( ( 67 => 5 ) : ( ( 1664546334 => 67 ) : ( .WordStack => ( 1664546334 : .WordStack ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     ( b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , chop ( ( ( notMaxUInt5 &Int chop ( ( lengthBytes ( OUTPUT_CELL:Bytes ) +Int maxUInt5 ) ) ) +Int 128 ) ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     CALLDEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       #address ( FoundryConsole )
                     </acctID>
                     <balance>
                       C_ENUM_MEMBER_CONTRACT_BAL:Int
                     </balance>
                     <storage>
                       C_ENUM_MEMBER_CONTRACT_STORAGE:Map
                     </storage>
                     <nonce>
                       C_ENUM_MEMBER_CONTRACT_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_ENUM_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #address ( FoundryConsole ) )
                       C_ENUM_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_ENUM_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NEWCALLER_CELL:Account
               </newCaller>
               <active>
                 ACTIVE_CELL:Bool
               </active>
               <depth>
                 DEPTH_CELL:Int
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 ISREVERTEXPECTED_CELL:Bool
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( _C_ENUM_MEMBER_CONTRACT_ID:Int ==Int #address ( FoundryConsole )
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryConsole )
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          #address ( FoundryConsole )
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( 0 =/=Int ( (chop ( lengthBytes ( OUTPUT_CELL:Bytes ) )) s<Word (32) )
       andBool ( ( notBool ( CALLDEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int andBool ISREVERTEXPECTED_CELL:Bool ) )
       andBool ( ( notBool ( ACTIVE_CELL:Bool andBool ( CALLDEPTH_CELL:Int ==Int DEPTH_CELL:Int andBool NEWCALLER_CELL:Account =/=K C_ENUM_ID:Int ) ) )
               )))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-141-TO-95)]
    
    rule [BASIC-BLOCK-142-TO-104]: <foundry>
           <kevm>
             <k>
               ( #next [ STATICCALL ] ~> .K => STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32
               ~> #pc [ STATICCALL ] )
               ~> #endPrank
               ~> #checkRevert
               ~> #updateRevertOutput 128 32
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     NCL:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 0 => 132 ) : ( ( C_ENUM_MEMBER_CONTRACT_ID:Int => 1756313567 ) : ( ( 128 => C_ENUM_MEMBER_CONTRACT_ID:Int ) : ( ( 4 => 5 ) : ( ( 128 => 67 ) : ( ( 32 => 1664546334 ) : ( ( 132 : ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     EXPECTEDDEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   NOG0:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_ENUM_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_ENUM_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_ENUM_MEMBER_CONTRACT_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_MEMBER_CONTRACT_BAL:Int
                     </balance>
                     <storage>
                       C_ENUM_MEMBER_CONTRACT_STORAGE:Map
                     </storage>
                     <nonce>
                       C_ENUM_MEMBER_CONTRACT_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NCL:Int
               </newCaller>
               <newOrigin>
                 NOG0:Int
               </newOrigin>
               <active>
                 true
               </active>
               <depth>
                 EXPECTEDDEPTH_CELL:Int
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( _ACTIVE_CELL:Bool
       andBool ( _NEWCALLER_CELL:Account ==K NCL:Int
       andBool ( _NEWORIGIN_CELL:Account ==K NOG0:Int
       andBool ( _ISREVERTEXPECTED_CELL:Bool
       andBool ( _DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( _CALLDEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int ==Int #address ( FoundryConsole )
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryConsole )
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( _NOG:Int =/=Int NOG0:Int
       andBool ( C_ENUM_ID:Int =/=Int NCL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          #address ( FoundryConsole )
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
               ))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-142-TO-104)]
    
    rule [BASIC-BLOCK-143-TO-105]: <foundry>
           <kevm>
             <k>
               ( #next [ STATICCALL ] ~> .K => STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32
               ~> #pc [ STATICCALL ] )
               ~> #endPrank
               ~> #checkRevert
               ~> #updateRevertOutput 128 32
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     NCL:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 0 => 132 ) : ( ( C_ENUM_MEMBER_CONTRACT_ID:Int => 1756313567 ) : ( ( 128 => C_ENUM_MEMBER_CONTRACT_ID:Int ) : ( ( 4 => 5 ) : ( ( 128 => 67 ) : ( ( 32 => 1664546334 ) : ( ( 132 : ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     EXPECTEDDEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   NOG0:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_ENUM_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_ENUM_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_ENUM_MEMBER_CONTRACT_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_MEMBER_CONTRACT_BAL:Int
                     </balance>
                     <storage>
                       C_ENUM_MEMBER_CONTRACT_STORAGE:Map
                     </storage>
                     <nonce>
                       C_ENUM_MEMBER_CONTRACT_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NCL:Int
               </newCaller>
               <newOrigin>
                 NOG0:Int
               </newOrigin>
               <active>
                 true
               </active>
               <depth>
                 EXPECTEDDEPTH_CELL:Int
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( _ACTIVE_CELL:Bool
       andBool ( _NEWCALLER_CELL:Account ==K NCL:Int
       andBool ( _NEWORIGIN_CELL:Account ==K NOG0:Int
       andBool ( _ISREVERTEXPECTED_CELL:Bool
       andBool ( _DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( _CALLDEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( _NOG:Int =/=Int NOG0:Int
       andBool ( C_ENUM_ID:Int =/=Int NCL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
               )))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-143-TO-105)]
    
    rule [BASIC-BLOCK-144-TO-109]: <foundry>
           <kevm>
             <k>
               ( #next [ STATICCALL ] ~> .K => STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32
               ~> #pc [ STATICCALL ] )
               ~> #endPrank
               ~> #checkRevert
               ~> #updateRevertOutput 128 32
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     NCL:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 0 => 132 ) : ( ( C_ENUM_MEMBER_CONTRACT_ID:Int => 1756313567 ) : ( ( 128 => C_ENUM_MEMBER_CONTRACT_ID:Int ) : ( ( 4 => 5 ) : ( ( 128 => 67 ) : ( ( 32 => 1664546334 ) : ( ( 132 : ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     EXPECTEDDEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   NOG:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_ENUM_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_ENUM_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_ENUM_MEMBER_CONTRACT_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_MEMBER_CONTRACT_BAL:Int
                     </balance>
                     <storage>
                       C_ENUM_MEMBER_CONTRACT_STORAGE:Map
                     </storage>
                     <nonce>
                       C_ENUM_MEMBER_CONTRACT_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NCL:Int
               </newCaller>
               <newOrigin>
                 NOG:Int
               </newOrigin>
               <active>
                 true
               </active>
               <depth>
                 EXPECTEDDEPTH_CELL:Int
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( _ACTIVE_CELL:Bool
       andBool ( _NEWCALLER_CELL:Account ==K NCL:Int
       andBool ( _NEWORIGIN_CELL:Account ==K NOG:Int
       andBool ( _ISREVERTEXPECTED_CELL:Bool
       andBool ( _DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( _CALLDEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int ==Int #address ( FoundryConsole )
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryConsole )
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int =/=Int NCL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          #address ( FoundryConsole )
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
               )))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-144-TO-109)]
    
    rule [BASIC-BLOCK-145-TO-110]: <foundry>
           <kevm>
             <k>
               ( #next [ STATICCALL ] ~> .K => STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32
               ~> #pc [ STATICCALL ] )
               ~> #endPrank
               ~> #checkRevert
               ~> #updateRevertOutput 128 32
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     NCL:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 0 => 132 ) : ( ( C_ENUM_MEMBER_CONTRACT_ID:Int => 1756313567 ) : ( ( 128 => C_ENUM_MEMBER_CONTRACT_ID:Int ) : ( ( 4 => 5 ) : ( ( 128 => 67 ) : ( ( 32 => 1664546334 ) : ( ( 132 : ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     EXPECTEDDEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   NOG:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_ENUM_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_ENUM_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_ENUM_MEMBER_CONTRACT_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_MEMBER_CONTRACT_BAL:Int
                     </balance>
                     <storage>
                       C_ENUM_MEMBER_CONTRACT_STORAGE:Map
                     </storage>
                     <nonce>
                       C_ENUM_MEMBER_CONTRACT_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NCL:Int
               </newCaller>
               <newOrigin>
                 NOG:Int
               </newOrigin>
               <active>
                 true
               </active>
               <depth>
                 EXPECTEDDEPTH_CELL:Int
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( _ACTIVE_CELL:Bool
       andBool ( _NEWCALLER_CELL:Account ==K NCL:Int
       andBool ( _NEWORIGIN_CELL:Account ==K NOG:Int
       andBool ( _ISREVERTEXPECTED_CELL:Bool
       andBool ( _DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( _CALLDEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int =/=Int NCL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
               ))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-145-TO-110)]
    
    rule [BASIC-BLOCK-146-TO-111]: <foundry>
           <kevm>
             <k>
               ( #next [ STATICCALL ] ~> .K => STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32
               ~> #pc [ STATICCALL ] )
               ~> #endPrank
               ~> #checkRevert
               ~> #updateRevertOutput 128 32
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     NCL:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 0 => 132 ) : ( ( C_ENUM_MEMBER_CONTRACT_ID:Int => 1756313567 ) : ( ( 128 => C_ENUM_MEMBER_CONTRACT_ID:Int ) : ( ( 4 => 5 ) : ( ( 128 => 67 ) : ( ( 32 => 1664546334 ) : ( ( 132 : ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     EXPECTEDDEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_ENUM_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_ENUM_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_ENUM_MEMBER_CONTRACT_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_MEMBER_CONTRACT_BAL:Int
                     </balance>
                     <storage>
                       C_ENUM_MEMBER_CONTRACT_STORAGE:Map
                     </storage>
                     <nonce>
                       C_ENUM_MEMBER_CONTRACT_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NCL:Int
               </newCaller>
               <newOrigin>
                 .Account
               </newOrigin>
               <active>
                 true
               </active>
               <depth>
                 EXPECTEDDEPTH_CELL:Int
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( _ACTIVE_CELL:Bool
       andBool ( _NEWCALLER_CELL:Account ==K NCL:Int
       andBool ( _ISREVERTEXPECTED_CELL:Bool
       andBool ( _DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( _CALLDEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int ==Int #address ( FoundryConsole )
       andBool ( _NEWORIGIN_CELL:Account ==K .Account
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryConsole )
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int =/=Int NCL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          #address ( FoundryConsole )
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
               )))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-146-TO-111)]
    
    rule [BASIC-BLOCK-147-TO-112]: <foundry>
           <kevm>
             <k>
               ( #next [ STATICCALL ] ~> .K => STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32
               ~> #pc [ STATICCALL ] )
               ~> #endPrank
               ~> #checkRevert
               ~> #updateRevertOutput 128 32
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     NCL:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 0 => 132 ) : ( ( C_ENUM_MEMBER_CONTRACT_ID:Int => 1756313567 ) : ( ( 128 => C_ENUM_MEMBER_CONTRACT_ID:Int ) : ( ( 4 => 5 ) : ( ( 128 => 67 ) : ( ( 32 => 1664546334 ) : ( ( 132 : ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     EXPECTEDDEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_ENUM_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_ENUM_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_ENUM_MEMBER_CONTRACT_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_MEMBER_CONTRACT_BAL:Int
                     </balance>
                     <storage>
                       C_ENUM_MEMBER_CONTRACT_STORAGE:Map
                     </storage>
                     <nonce>
                       C_ENUM_MEMBER_CONTRACT_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NCL:Int
               </newCaller>
               <newOrigin>
                 .Account
               </newOrigin>
               <active>
                 true
               </active>
               <depth>
                 EXPECTEDDEPTH_CELL:Int
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( _ACTIVE_CELL:Bool
       andBool ( _NEWCALLER_CELL:Account ==K NCL:Int
       andBool ( _ISREVERTEXPECTED_CELL:Bool
       andBool ( _DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( _CALLDEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( _NEWORIGIN_CELL:Account ==K .Account
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int =/=Int NCL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
               ))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-147-TO-112)]
    
    rule [BASIC-BLOCK-152-TO-87]: <foundry>
           <kevm>
             <k>
               ( #next [ STATICCALL ] ~> .K => STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32
               ~> #pc [ STATICCALL ] )
               ~> #endPrank
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     NCL:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 0 => 132 ) : ( ( C_ENUM_MEMBER_CONTRACT_ID:Int => 1756313567 ) : ( ( 128 => C_ENUM_MEMBER_CONTRACT_ID:Int ) : ( ( 4 => 5 ) : ( ( 128 => 67 ) : ( ( 32 => 1664546334 ) : ( ( 132 : ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     DEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   NOG0:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_ENUM_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_ENUM_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_ENUM_MEMBER_CONTRACT_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_MEMBER_CONTRACT_BAL:Int
                     </balance>
                     <storage>
                       C_ENUM_MEMBER_CONTRACT_STORAGE:Map
                     </storage>
                     <nonce>
                       C_ENUM_MEMBER_CONTRACT_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NCL:Int
               </newCaller>
               <newOrigin>
                 NOG0:Int
               </newOrigin>
               <active>
                 true
               </active>
               <depth>
                 DEPTH_CELL:Int
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 ISREVERTEXPECTED_CELL:Bool
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( _ACTIVE_CELL:Bool
       andBool ( _CALLDEPTH_CELL:Int ==Int DEPTH_CELL:Int
       andBool ( _NEWCALLER_CELL:Account ==K NCL:Int
       andBool ( _NEWORIGIN_CELL:Account ==K NOG0:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int ==Int #address ( FoundryConsole )
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryConsole )
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( _NOG:Int =/=Int NOG0:Int
       andBool ( C_ENUM_ID:Int =/=Int NCL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          #address ( FoundryConsole )
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
       andBool ( ( notBool ( DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int andBool ISREVERTEXPECTED_CELL:Bool ) )
               )))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-152-TO-87)]
    
    rule [BASIC-BLOCK-153-TO-88]: <foundry>
           <kevm>
             <k>
               ( #next [ STATICCALL ] ~> .K => STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32
               ~> #pc [ STATICCALL ] )
               ~> #endPrank
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     NCL:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 0 => 132 ) : ( ( C_ENUM_MEMBER_CONTRACT_ID:Int => 1756313567 ) : ( ( 128 => C_ENUM_MEMBER_CONTRACT_ID:Int ) : ( ( 4 => 5 ) : ( ( 128 => 67 ) : ( ( 32 => 1664546334 ) : ( ( 132 : ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     DEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   NOG0:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_ENUM_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_ENUM_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_ENUM_MEMBER_CONTRACT_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_MEMBER_CONTRACT_BAL:Int
                     </balance>
                     <storage>
                       C_ENUM_MEMBER_CONTRACT_STORAGE:Map
                     </storage>
                     <nonce>
                       C_ENUM_MEMBER_CONTRACT_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NCL:Int
               </newCaller>
               <newOrigin>
                 NOG0:Int
               </newOrigin>
               <active>
                 true
               </active>
               <depth>
                 DEPTH_CELL:Int
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 ISREVERTEXPECTED_CELL:Bool
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( _ACTIVE_CELL:Bool
       andBool ( _CALLDEPTH_CELL:Int ==Int DEPTH_CELL:Int
       andBool ( _NEWCALLER_CELL:Account ==K NCL:Int
       andBool ( _NEWORIGIN_CELL:Account ==K NOG0:Int
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( _NOG:Int =/=Int NOG0:Int
       andBool ( C_ENUM_ID:Int =/=Int NCL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
       andBool ( ( notBool ( DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int andBool ISREVERTEXPECTED_CELL:Bool ) )
               ))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-153-TO-88)]
    
    rule [BASIC-BLOCK-154-TO-99]: <foundry>
           <kevm>
             <k>
               ( #next [ STATICCALL ] ~> .K => STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32
               ~> #pc [ STATICCALL ] )
               ~> #endPrank
               ~> #checkRevert
               ~> #updateRevertOutput 128 32
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     NCL:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 0 => 132 ) : ( ( C_ENUM_MEMBER_CONTRACT_ID:Int => 1756313567 ) : ( ( 128 => C_ENUM_MEMBER_CONTRACT_ID:Int ) : ( ( 4 => 5 ) : ( ( 128 => 67 ) : ( ( 32 => 1664546334 ) : ( ( 132 : ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     EXPECTEDDEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   NOG:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_ENUM_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_ENUM_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_ENUM_MEMBER_CONTRACT_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_MEMBER_CONTRACT_BAL:Int
                     </balance>
                     <storage>
                       C_ENUM_MEMBER_CONTRACT_STORAGE:Map
                     </storage>
                     <nonce>
                       C_ENUM_MEMBER_CONTRACT_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NCL:Int
               </newCaller>
               <newOrigin>
                 NOG:Int
               </newOrigin>
               <active>
                 true
               </active>
               <depth>
                 EXPECTEDDEPTH_CELL:Int
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( _ACTIVE_CELL:Bool
       andBool ( _NEWCALLER_CELL:Account ==K NCL:Int
       andBool ( _NEWORIGIN_CELL:Account ==K NOG:Int
       andBool ( _ISREVERTEXPECTED_CELL:Bool
       andBool ( _DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( _CALLDEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int ==Int #address ( FoundryConsole )
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryConsole )
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int =/=Int NCL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          #address ( FoundryConsole )
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
               )))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-154-TO-99)]
    
    rule [BASIC-BLOCK-155-TO-100]: <foundry>
           <kevm>
             <k>
               ( #next [ STATICCALL ] ~> .K => STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32
               ~> #pc [ STATICCALL ] )
               ~> #endPrank
               ~> #checkRevert
               ~> #updateRevertOutput 128 32
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     NCL:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 0 => 132 ) : ( ( C_ENUM_MEMBER_CONTRACT_ID:Int => 1756313567 ) : ( ( 128 => C_ENUM_MEMBER_CONTRACT_ID:Int ) : ( ( 4 => 5 ) : ( ( 128 => 67 ) : ( ( 32 => 1664546334 ) : ( ( 132 : ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     EXPECTEDDEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   NOG:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_ENUM_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_ENUM_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_ENUM_MEMBER_CONTRACT_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_MEMBER_CONTRACT_BAL:Int
                     </balance>
                     <storage>
                       C_ENUM_MEMBER_CONTRACT_STORAGE:Map
                     </storage>
                     <nonce>
                       C_ENUM_MEMBER_CONTRACT_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NCL:Int
               </newCaller>
               <newOrigin>
                 NOG:Int
               </newOrigin>
               <active>
                 true
               </active>
               <depth>
                 EXPECTEDDEPTH_CELL:Int
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( _ACTIVE_CELL:Bool
       andBool ( _NEWCALLER_CELL:Account ==K NCL:Int
       andBool ( _NEWORIGIN_CELL:Account ==K NOG:Int
       andBool ( _ISREVERTEXPECTED_CELL:Bool
       andBool ( _DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( _CALLDEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int =/=Int NCL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
               ))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-155-TO-100)]
    
    rule [BASIC-BLOCK-156-TO-102]: <foundry>
           <kevm>
             <k>
               ( #next [ STATICCALL ] ~> .K => STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32
               ~> #pc [ STATICCALL ] )
               ~> #endPrank
               ~> #checkRevert
               ~> #updateRevertOutput 128 32
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     NCL:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 0 => 132 ) : ( ( C_ENUM_MEMBER_CONTRACT_ID:Int => 1756313567 ) : ( ( 128 => C_ENUM_MEMBER_CONTRACT_ID:Int ) : ( ( 4 => 5 ) : ( ( 128 => 67 ) : ( ( 32 => 1664546334 ) : ( ( 132 : ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     EXPECTEDDEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_ENUM_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_ENUM_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_ENUM_MEMBER_CONTRACT_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_MEMBER_CONTRACT_BAL:Int
                     </balance>
                     <storage>
                       C_ENUM_MEMBER_CONTRACT_STORAGE:Map
                     </storage>
                     <nonce>
                       C_ENUM_MEMBER_CONTRACT_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NCL:Int
               </newCaller>
               <newOrigin>
                 .Account
               </newOrigin>
               <active>
                 true
               </active>
               <depth>
                 EXPECTEDDEPTH_CELL:Int
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( _ACTIVE_CELL:Bool
       andBool ( _NEWCALLER_CELL:Account ==K NCL:Int
       andBool ( _ISREVERTEXPECTED_CELL:Bool
       andBool ( _DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( _CALLDEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int ==Int #address ( FoundryConsole )
       andBool ( _NEWORIGIN_CELL:Account ==K .Account
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryConsole )
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int =/=Int NCL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          #address ( FoundryConsole )
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
               )))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-156-TO-102)]
    
    rule [BASIC-BLOCK-157-TO-103]: <foundry>
           <kevm>
             <k>
               ( #next [ STATICCALL ] ~> .K => STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32
               ~> #pc [ STATICCALL ] )
               ~> #endPrank
               ~> #checkRevert
               ~> #updateRevertOutput 128 32
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     NCL:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 0 => 132 ) : ( ( C_ENUM_MEMBER_CONTRACT_ID:Int => 1756313567 ) : ( ( 128 => C_ENUM_MEMBER_CONTRACT_ID:Int ) : ( ( 4 => 5 ) : ( ( 128 => 67 ) : ( ( 32 => 1664546334 ) : ( ( 132 : ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     EXPECTEDDEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_ENUM_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_ENUM_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_ENUM_MEMBER_CONTRACT_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_MEMBER_CONTRACT_BAL:Int
                     </balance>
                     <storage>
                       C_ENUM_MEMBER_CONTRACT_STORAGE:Map
                     </storage>
                     <nonce>
                       C_ENUM_MEMBER_CONTRACT_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NCL:Int
               </newCaller>
               <newOrigin>
                 .Account
               </newOrigin>
               <active>
                 true
               </active>
               <depth>
                 EXPECTEDDEPTH_CELL:Int
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( _ACTIVE_CELL:Bool
       andBool ( _NEWCALLER_CELL:Account ==K NCL:Int
       andBool ( _ISREVERTEXPECTED_CELL:Bool
       andBool ( _DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( _CALLDEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( _NEWORIGIN_CELL:Account ==K .Account
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int =/=Int NCL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
               ))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-157-TO-103)]
    
    rule [BASIC-BLOCK-158-TO-80]: <foundry>
           <kevm>
             <k>
               ( #next [ STATICCALL ] ~> .K => STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32
               ~> #pc [ STATICCALL ] )
               ~> #endPrank
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     NCL:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 0 => 132 ) : ( ( C_ENUM_MEMBER_CONTRACT_ID:Int => 1756313567 ) : ( ( 128 => C_ENUM_MEMBER_CONTRACT_ID:Int ) : ( ( 4 => 5 ) : ( ( 128 => 67 ) : ( ( 32 => 1664546334 ) : ( ( 132 : ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     DEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   NOG:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_ENUM_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_ENUM_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_ENUM_MEMBER_CONTRACT_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_MEMBER_CONTRACT_BAL:Int
                     </balance>
                     <storage>
                       C_ENUM_MEMBER_CONTRACT_STORAGE:Map
                     </storage>
                     <nonce>
                       C_ENUM_MEMBER_CONTRACT_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NCL:Int
               </newCaller>
               <newOrigin>
                 NOG:Int
               </newOrigin>
               <active>
                 true
               </active>
               <depth>
                 DEPTH_CELL:Int
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 ISREVERTEXPECTED_CELL:Bool
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( _ACTIVE_CELL:Bool
       andBool ( _CALLDEPTH_CELL:Int ==Int DEPTH_CELL:Int
       andBool ( _NEWCALLER_CELL:Account ==K NCL:Int
       andBool ( _NEWORIGIN_CELL:Account ==K NOG:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int ==Int #address ( FoundryConsole )
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryConsole )
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int =/=Int NCL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          #address ( FoundryConsole )
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
       andBool ( ( notBool ( DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int andBool ISREVERTEXPECTED_CELL:Bool ) )
               ))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-158-TO-80)]
    
    rule [BASIC-BLOCK-159-TO-81]: <foundry>
           <kevm>
             <k>
               ( #next [ STATICCALL ] ~> .K => STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32
               ~> #pc [ STATICCALL ] )
               ~> #endPrank
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     NCL:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 0 => 132 ) : ( ( C_ENUM_MEMBER_CONTRACT_ID:Int => 1756313567 ) : ( ( 128 => C_ENUM_MEMBER_CONTRACT_ID:Int ) : ( ( 4 => 5 ) : ( ( 128 => 67 ) : ( ( 32 => 1664546334 ) : ( ( 132 : ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     DEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   NOG:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_ENUM_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_ENUM_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_ENUM_MEMBER_CONTRACT_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_MEMBER_CONTRACT_BAL:Int
                     </balance>
                     <storage>
                       C_ENUM_MEMBER_CONTRACT_STORAGE:Map
                     </storage>
                     <nonce>
                       C_ENUM_MEMBER_CONTRACT_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NCL:Int
               </newCaller>
               <newOrigin>
                 NOG:Int
               </newOrigin>
               <active>
                 true
               </active>
               <depth>
                 DEPTH_CELL:Int
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 ISREVERTEXPECTED_CELL:Bool
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( _ACTIVE_CELL:Bool
       andBool ( _CALLDEPTH_CELL:Int ==Int DEPTH_CELL:Int
       andBool ( _NEWCALLER_CELL:Account ==K NCL:Int
       andBool ( _NEWORIGIN_CELL:Account ==K NOG:Int
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int =/=Int NCL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
       andBool ( ( notBool ( DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int andBool ISREVERTEXPECTED_CELL:Bool ) )
               )))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-159-TO-81)]
    
    rule [BASIC-BLOCK-160-TO-84]: <foundry>
           <kevm>
             <k>
               ( #next [ STATICCALL ] ~> .K => STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32
               ~> #pc [ STATICCALL ] )
               ~> #endPrank
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     NCL:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 0 => 132 ) : ( ( C_ENUM_MEMBER_CONTRACT_ID:Int => 1756313567 ) : ( ( 128 => C_ENUM_MEMBER_CONTRACT_ID:Int ) : ( ( 4 => 5 ) : ( ( 128 => 67 ) : ( ( 32 => 1664546334 ) : ( ( 132 : ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     DEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_ENUM_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_ENUM_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_ENUM_MEMBER_CONTRACT_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_MEMBER_CONTRACT_BAL:Int
                     </balance>
                     <storage>
                       C_ENUM_MEMBER_CONTRACT_STORAGE:Map
                     </storage>
                     <nonce>
                       C_ENUM_MEMBER_CONTRACT_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NCL:Int
               </newCaller>
               <newOrigin>
                 .Account
               </newOrigin>
               <active>
                 true
               </active>
               <depth>
                 DEPTH_CELL:Int
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 ISREVERTEXPECTED_CELL:Bool
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( _ACTIVE_CELL:Bool
       andBool ( _CALLDEPTH_CELL:Int ==Int DEPTH_CELL:Int
       andBool ( _NEWCALLER_CELL:Account ==K NCL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int ==Int #address ( FoundryConsole )
       andBool ( _NEWORIGIN_CELL:Account ==K .Account
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryConsole )
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int =/=Int NCL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          #address ( FoundryConsole )
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
       andBool ( ( notBool ( DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int andBool ISREVERTEXPECTED_CELL:Bool ) )
               ))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-160-TO-84)]
    
    rule [BASIC-BLOCK-161-TO-85]: <foundry>
           <kevm>
             <k>
               ( #next [ STATICCALL ] ~> .K => STATICCALL 0 C_ENUM_MEMBER_CONTRACT_ID:Int 128 4 128 32
               ~> #pc [ STATICCALL ] )
               ~> #endPrank
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     NCL:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 0 => 132 ) : ( ( C_ENUM_MEMBER_CONTRACT_ID:Int => 1756313567 ) : ( ( 128 => C_ENUM_MEMBER_CONTRACT_ID:Int ) : ( ( 4 => 5 ) : ( ( 128 => 67 ) : ( ( 32 => 1664546334 ) : ( ( 132 : ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     DEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_ENUM_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_ENUM_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_ENUM_MEMBER_CONTRACT_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_MEMBER_CONTRACT_BAL:Int
                     </balance>
                     <storage>
                       C_ENUM_MEMBER_CONTRACT_STORAGE:Map
                     </storage>
                     <nonce>
                       C_ENUM_MEMBER_CONTRACT_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NCL:Int
               </newCaller>
               <newOrigin>
                 .Account
               </newOrigin>
               <active>
                 true
               </active>
               <depth>
                 DEPTH_CELL:Int
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 ISREVERTEXPECTED_CELL:Bool
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( _ACTIVE_CELL:Bool
       andBool ( _CALLDEPTH_CELL:Int ==Int DEPTH_CELL:Int
       andBool ( _NEWCALLER_CELL:Account ==K NCL:Int
       andBool ( _NEWORIGIN_CELL:Account ==K .Account
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int =/=Int NCL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
       andBool ( ( notBool ( DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int andBool ISREVERTEXPECTED_CELL:Bool ) )
               )))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-161-TO-85)]
    
    rule [BASIC-BLOCK-126-TO-78]: <foundry>
           <kevm>
             <k>
               ( #next [ STATICCALL ] ~> .K => 1
               ~> #push
               ~> #setLocalMem 128 32 b""
               ~> #pc [ STATICCALL ] )
               ~> #endPrank
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     NCL:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 0 => 132 ) : ( ( C_ENUM_MEMBER_CONTRACT_ID:Int => 1756313567 ) : ( ( 128 => #address ( FoundryConsole ) ) : ( ( 4 => 5 ) : ( ( 128 => 67 ) : ( ( 32 => 1664546334 ) : ( ( 132 : ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     DEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   NOG:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       ( C_ENUM_ID:Int => #address ( FoundryConsole ) )
                     </acctID>
                     <balance>
                       ( C_ENUM_BAL:Int => C_ENUM_MEMBER_CONTRACT_BAL:Int )
                     </balance>
                     <storage>
                       ( ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map ) => C_ENUM_MEMBER_CONTRACT_STORAGE:Map )
                     </storage>
                     <origStorage>
                       ( C_ENUM_ORIGSTORAGE:Map => C_ENUM_MEMBER_CONTRACT_ORIGSTORAGE:Map )
                     </origStorage>
                     <transientStorage>
                       ( C_ENUM_TRANSIENTSTORAGE:Map => C_ENUM_MEMBER_CONTRACT_TRANSIENTSTORAGE:Map )
                     </transientStorage>
                     <nonce>
                       ( C_ENUM_NONCE:Int => C_ENUM_MEMBER_CONTRACT_NONCE:Int )
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       ( C_ENUM_MEMBER_CONTRACT_ID:Int => C_ENUM_ID:Int )
                     </acctID>
                     <balance>
                       ( C_ENUM_MEMBER_CONTRACT_BAL:Int => C_ENUM_BAL:Int )
                     </balance>
                     <storage>
                       ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map => ( ( 0 |-> #address ( FoundryConsole ) )
                       C_ENUM_STORAGE:Map ) )
                     </storage>
                     <origStorage>
                       ( C_ENUM_MEMBER_CONTRACT_ORIGSTORAGE:Map => C_ENUM_ORIGSTORAGE:Map )
                     </origStorage>
                     <transientStorage>
                       ( C_ENUM_MEMBER_CONTRACT_TRANSIENTSTORAGE:Map => C_ENUM_TRANSIENTSTORAGE:Map )
                     </transientStorage>
                     <nonce>
                       ( C_ENUM_MEMBER_CONTRACT_NONCE:Int => C_ENUM_NONCE:Int )
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NCL:Int
               </newCaller>
               <newOrigin>
                 NOG:Int
               </newOrigin>
               <active>
                 true
               </active>
               <depth>
                 DEPTH_CELL:Int
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 ISREVERTEXPECTED_CELL:Bool
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( _ACTIVE_CELL:Bool
       andBool ( _CALLDEPTH_CELL:Int ==Int DEPTH_CELL:Int
       andBool ( _NEWCALLER_CELL:Account ==K NCL:Int
       andBool ( _NEWORIGIN_CELL:Account ==K NOG:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int ==Int #address ( FoundryConsole )
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryConsole )
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int =/=Int NCL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          #address ( FoundryConsole )
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
       andBool ( ( notBool ( DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int andBool ISREVERTEXPECTED_CELL:Bool ) )
               ))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-126-TO-78)]
    
    rule [BASIC-BLOCK-128-TO-82]: <foundry>
           <kevm>
             <k>
               ( #next [ STATICCALL ] ~> .K => 1
               ~> #push
               ~> #setLocalMem 128 32 b""
               ~> #pc [ STATICCALL ] )
               ~> #endPrank
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     NCL:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 0 => 132 ) : ( ( C_ENUM_MEMBER_CONTRACT_ID:Int => 1756313567 ) : ( ( 128 => #address ( FoundryConsole ) ) : ( ( 4 => 5 ) : ( ( 128 => 67 ) : ( ( 32 => 1664546334 ) : ( ( 132 : ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     DEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       ( C_ENUM_ID:Int => #address ( FoundryConsole ) )
                     </acctID>
                     <balance>
                       ( C_ENUM_BAL:Int => C_ENUM_MEMBER_CONTRACT_BAL:Int )
                     </balance>
                     <storage>
                       ( ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map ) => C_ENUM_MEMBER_CONTRACT_STORAGE:Map )
                     </storage>
                     <origStorage>
                       ( C_ENUM_ORIGSTORAGE:Map => C_ENUM_MEMBER_CONTRACT_ORIGSTORAGE:Map )
                     </origStorage>
                     <transientStorage>
                       ( C_ENUM_TRANSIENTSTORAGE:Map => C_ENUM_MEMBER_CONTRACT_TRANSIENTSTORAGE:Map )
                     </transientStorage>
                     <nonce>
                       ( C_ENUM_NONCE:Int => C_ENUM_MEMBER_CONTRACT_NONCE:Int )
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       ( C_ENUM_MEMBER_CONTRACT_ID:Int => C_ENUM_ID:Int )
                     </acctID>
                     <balance>
                       ( C_ENUM_MEMBER_CONTRACT_BAL:Int => C_ENUM_BAL:Int )
                     </balance>
                     <storage>
                       ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map => ( ( 0 |-> #address ( FoundryConsole ) )
                       C_ENUM_STORAGE:Map ) )
                     </storage>
                     <origStorage>
                       ( C_ENUM_MEMBER_CONTRACT_ORIGSTORAGE:Map => C_ENUM_ORIGSTORAGE:Map )
                     </origStorage>
                     <transientStorage>
                       ( C_ENUM_MEMBER_CONTRACT_TRANSIENTSTORAGE:Map => C_ENUM_TRANSIENTSTORAGE:Map )
                     </transientStorage>
                     <nonce>
                       ( C_ENUM_MEMBER_CONTRACT_NONCE:Int => C_ENUM_NONCE:Int )
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NCL:Int
               </newCaller>
               <newOrigin>
                 .Account
               </newOrigin>
               <active>
                 true
               </active>
               <depth>
                 DEPTH_CELL:Int
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 ISREVERTEXPECTED_CELL:Bool
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( _ACTIVE_CELL:Bool
       andBool ( _CALLDEPTH_CELL:Int ==Int DEPTH_CELL:Int
       andBool ( _NEWCALLER_CELL:Account ==K NCL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int ==Int #address ( FoundryConsole )
       andBool ( _NEWORIGIN_CELL:Account ==K .Account
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryConsole )
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int =/=Int NCL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          #address ( FoundryConsole )
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
       andBool ( ( notBool ( DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int andBool ISREVERTEXPECTED_CELL:Bool ) )
               ))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-128-TO-82)]
    
    rule [BASIC-BLOCK-148-TO-79]: <foundry>
           <kevm>
             <k>
               ( #next [ STATICCALL ] ~> .K => #consoleLog 1756313567 b""
               ~> 1
               ~> #push
               ~> #setLocalMem 128 32 b""
               ~> #pc [ STATICCALL ] )
               ~> #endPrank
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     NCL:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 0 => 132 ) : ( ( C_ENUM_MEMBER_CONTRACT_ID:Int => 1756313567 ) : ( ( 128 => #address ( FoundryConsole ) ) : ( ( 4 => 5 ) : ( ( 128 => 67 ) : ( ( 32 => 1664546334 ) : ( ( 132 : ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     DEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   NOG:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       ( C_ENUM_ID:Int => #address ( FoundryConsole ) )
                     </acctID>
                     <balance>
                       ( C_ENUM_BAL:Int => C_ENUM_MEMBER_CONTRACT_BAL:Int )
                     </balance>
                     <storage>
                       ( ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map ) => C_ENUM_MEMBER_CONTRACT_STORAGE:Map )
                     </storage>
                     <origStorage>
                       ( C_ENUM_ORIGSTORAGE:Map => C_ENUM_MEMBER_CONTRACT_ORIGSTORAGE:Map )
                     </origStorage>
                     <transientStorage>
                       ( C_ENUM_TRANSIENTSTORAGE:Map => C_ENUM_MEMBER_CONTRACT_TRANSIENTSTORAGE:Map )
                     </transientStorage>
                     <nonce>
                       ( C_ENUM_NONCE:Int => C_ENUM_MEMBER_CONTRACT_NONCE:Int )
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       ( C_ENUM_MEMBER_CONTRACT_ID:Int => C_ENUM_ID:Int )
                     </acctID>
                     <balance>
                       ( C_ENUM_MEMBER_CONTRACT_BAL:Int => C_ENUM_BAL:Int )
                     </balance>
                     <storage>
                       ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map => ( ( 0 |-> #address ( FoundryConsole ) )
                       C_ENUM_STORAGE:Map ) )
                     </storage>
                     <origStorage>
                       ( C_ENUM_MEMBER_CONTRACT_ORIGSTORAGE:Map => C_ENUM_ORIGSTORAGE:Map )
                     </origStorage>
                     <transientStorage>
                       ( C_ENUM_MEMBER_CONTRACT_TRANSIENTSTORAGE:Map => C_ENUM_TRANSIENTSTORAGE:Map )
                     </transientStorage>
                     <nonce>
                       ( C_ENUM_MEMBER_CONTRACT_NONCE:Int => C_ENUM_NONCE:Int )
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NCL:Int
               </newCaller>
               <newOrigin>
                 NOG:Int
               </newOrigin>
               <active>
                 true
               </active>
               <depth>
                 DEPTH_CELL:Int
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 ISREVERTEXPECTED_CELL:Bool
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( _ACTIVE_CELL:Bool
       andBool ( _CALLDEPTH_CELL:Int ==Int DEPTH_CELL:Int
       andBool ( _NEWCALLER_CELL:Account ==K NCL:Int
       andBool ( _NEWORIGIN_CELL:Account ==K NOG:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int ==Int #address ( FoundryConsole )
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryConsole )
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int =/=Int NCL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          #address ( FoundryConsole )
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
       andBool ( ( notBool ( DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int andBool ISREVERTEXPECTED_CELL:Bool ) )
               ))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-148-TO-79)]
    
    rule [BASIC-BLOCK-150-TO-83]: <foundry>
           <kevm>
             <k>
               ( #next [ STATICCALL ] ~> .K => #consoleLog 1756313567 b""
               ~> 1
               ~> #push
               ~> #setLocalMem 128 32 b""
               ~> #pc [ STATICCALL ] )
               ~> #endPrank
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     NCL:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 0 => 132 ) : ( ( C_ENUM_MEMBER_CONTRACT_ID:Int => 1756313567 ) : ( ( 128 => #address ( FoundryConsole ) ) : ( ( 4 => 5 ) : ( ( 128 => 67 ) : ( ( 32 => 1664546334 ) : ( ( 132 : ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     DEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       ( C_ENUM_ID:Int => #address ( FoundryConsole ) )
                     </acctID>
                     <balance>
                       ( C_ENUM_BAL:Int => C_ENUM_MEMBER_CONTRACT_BAL:Int )
                     </balance>
                     <storage>
                       ( ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map ) => C_ENUM_MEMBER_CONTRACT_STORAGE:Map )
                     </storage>
                     <origStorage>
                       ( C_ENUM_ORIGSTORAGE:Map => C_ENUM_MEMBER_CONTRACT_ORIGSTORAGE:Map )
                     </origStorage>
                     <transientStorage>
                       ( C_ENUM_TRANSIENTSTORAGE:Map => C_ENUM_MEMBER_CONTRACT_TRANSIENTSTORAGE:Map )
                     </transientStorage>
                     <nonce>
                       ( C_ENUM_NONCE:Int => C_ENUM_MEMBER_CONTRACT_NONCE:Int )
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       ( C_ENUM_MEMBER_CONTRACT_ID:Int => C_ENUM_ID:Int )
                     </acctID>
                     <balance>
                       ( C_ENUM_MEMBER_CONTRACT_BAL:Int => C_ENUM_BAL:Int )
                     </balance>
                     <storage>
                       ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map => ( ( 0 |-> #address ( FoundryConsole ) )
                       C_ENUM_STORAGE:Map ) )
                     </storage>
                     <origStorage>
                       ( C_ENUM_MEMBER_CONTRACT_ORIGSTORAGE:Map => C_ENUM_ORIGSTORAGE:Map )
                     </origStorage>
                     <transientStorage>
                       ( C_ENUM_MEMBER_CONTRACT_TRANSIENTSTORAGE:Map => C_ENUM_TRANSIENTSTORAGE:Map )
                     </transientStorage>
                     <nonce>
                       ( C_ENUM_MEMBER_CONTRACT_NONCE:Int => C_ENUM_NONCE:Int )
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NCL:Int
               </newCaller>
               <newOrigin>
                 .Account
               </newOrigin>
               <active>
                 true
               </active>
               <depth>
                 DEPTH_CELL:Int
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 ISREVERTEXPECTED_CELL:Bool
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( _ACTIVE_CELL:Bool
       andBool ( _CALLDEPTH_CELL:Int ==Int DEPTH_CELL:Int
       andBool ( _NEWCALLER_CELL:Account ==K NCL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int ==Int #address ( FoundryConsole )
       andBool ( _NEWORIGIN_CELL:Account ==K .Account
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryConsole )
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int =/=Int NCL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          #address ( FoundryConsole )
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
       andBool ( ( notBool ( DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int andBool ISREVERTEXPECTED_CELL:Bool ) )
               ))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-150-TO-83)]
    
    rule [BASIC-BLOCK-130-TO-86]: <foundry>
           <kevm>
             <k>
               ( #next [ STATICCALL ] ~> .K => #consoleLog 1756313567 b""
               ~> 1
               ~> #push
               ~> #setLocalMem 128 32 b""
               ~> #pc [ STATICCALL ] )
               ~> #endPrank
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     NCL:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 0 => 132 ) : ( ( C_ENUM_MEMBER_CONTRACT_ID:Int => 1756313567 ) : ( ( 128 => #address ( FoundryConsole ) ) : ( ( 4 => 5 ) : ( ( 128 => 67 ) : ( ( 32 => 1664546334 ) : ( ( 132 : ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     DEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   NOG0:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       ( C_ENUM_ID:Int => #address ( FoundryConsole ) )
                     </acctID>
                     <balance>
                       ( C_ENUM_BAL:Int => C_ENUM_MEMBER_CONTRACT_BAL:Int )
                     </balance>
                     <storage>
                       ( ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map ) => C_ENUM_MEMBER_CONTRACT_STORAGE:Map )
                     </storage>
                     <origStorage>
                       ( C_ENUM_ORIGSTORAGE:Map => C_ENUM_MEMBER_CONTRACT_ORIGSTORAGE:Map )
                     </origStorage>
                     <transientStorage>
                       ( C_ENUM_TRANSIENTSTORAGE:Map => C_ENUM_MEMBER_CONTRACT_TRANSIENTSTORAGE:Map )
                     </transientStorage>
                     <nonce>
                       ( C_ENUM_NONCE:Int => C_ENUM_MEMBER_CONTRACT_NONCE:Int )
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       ( C_ENUM_MEMBER_CONTRACT_ID:Int => C_ENUM_ID:Int )
                     </acctID>
                     <balance>
                       ( C_ENUM_MEMBER_CONTRACT_BAL:Int => C_ENUM_BAL:Int )
                     </balance>
                     <storage>
                       ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map => ( ( 0 |-> #address ( FoundryConsole ) )
                       C_ENUM_STORAGE:Map ) )
                     </storage>
                     <origStorage>
                       ( C_ENUM_MEMBER_CONTRACT_ORIGSTORAGE:Map => C_ENUM_ORIGSTORAGE:Map )
                     </origStorage>
                     <transientStorage>
                       ( C_ENUM_MEMBER_CONTRACT_TRANSIENTSTORAGE:Map => C_ENUM_TRANSIENTSTORAGE:Map )
                     </transientStorage>
                     <nonce>
                       ( C_ENUM_MEMBER_CONTRACT_NONCE:Int => C_ENUM_NONCE:Int )
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NCL:Int
               </newCaller>
               <newOrigin>
                 NOG0:Int
               </newOrigin>
               <active>
                 true
               </active>
               <depth>
                 DEPTH_CELL:Int
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 ISREVERTEXPECTED_CELL:Bool
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( _ACTIVE_CELL:Bool
       andBool ( _CALLDEPTH_CELL:Int ==Int DEPTH_CELL:Int
       andBool ( _NEWCALLER_CELL:Account ==K NCL:Int
       andBool ( _NEWORIGIN_CELL:Account ==K NOG0:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int ==Int #address ( FoundryConsole )
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryConsole )
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( _NOG:Int =/=Int NOG0:Int
       andBool ( C_ENUM_ID:Int =/=Int NCL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          #address ( FoundryConsole )
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
       andBool ( ( notBool ( DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int andBool ISREVERTEXPECTED_CELL:Bool ) )
               )))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-130-TO-86)]
    
    rule [BASIC-BLOCK-132-TO-96]: <foundry>
           <kevm>
             <k>
               ( #accessAccounts C_ENUM_MEMBER_CONTRACT_ID:Int
               ~> #checkCall C_ENUM_ID:Int 0
               ~> #call C_ENUM_ID:Int C_ENUM_MEMBER_CONTRACT_ID:Int C_ENUM_MEMBER_CONTRACT_ID:Int 0 0 b"h\xaf7\xdf" true
               ~> #return 128 32
               ~> #pc [ STATICCALL ]
               ~> #execute => #halt ~> .K )
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   ( _OUTPUT_CELL:Bytes => b"" )
                 </output>
                 <statusCode>
                   ( _STATUSCODE:StatusCode => EVMC_SUCCESS )
                 </statusCode>
                 <touchedAccounts>
                   ( TOUCHEDACCOUNTS_CELL:Set => TOUCHEDACCOUNTS_CELL:Set |Set SetItem ( C_ENUM_ID:Int ) |Set SetItem ( C_ENUM_MEMBER_CONTRACT_ID:Int ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_ENUM_ID:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 132 => 1664546334 ) : ( ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) => .WordStack ) )
                   </wordStack>
                   <localMem>
                     ( b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) ) +Bytes #buf ( 32 , #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) ) )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     CALLDEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( ACCESSEDACCOUNTS_CELL:Set => ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_ENUM_MEMBER_CONTRACT_ID:Int ) |Set SetItem ( C_ENUM_ID:Int ) )
                   </accessedAccounts>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_ENUM_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_ENUM_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_ENUM_MEMBER_CONTRACT_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_MEMBER_CONTRACT_BAL:Int
                     </balance>
                     <storage>
                       C_ENUM_MEMBER_CONTRACT_STORAGE:Map
                     </storage>
                     <nonce>
                       C_ENUM_MEMBER_CONTRACT_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NEWCALLER_CELL:Account
               </newCaller>
               <active>
                 ACTIVE_CELL:Bool
               </active>
               <depth>
                 DEPTH_CELL:Int
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 ISREVERTEXPECTED_CELL:Bool
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
       andBool ( ( notBool ( CALLDEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int andBool ISREVERTEXPECTED_CELL:Bool ) )
       andBool ( ( notBool ( ACTIVE_CELL:Bool andBool ( CALLDEPTH_CELL:Int ==Int DEPTH_CELL:Int andBool NEWCALLER_CELL:Account =/=K C_ENUM_ID:Int ) ) )
       andBool ( ( notBool ( ( notBool <acctID>
          #address ( FoundryConsole )
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) ) andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int ==Int #address ( FoundryConsole ) andBool C_ENUM_ID:Int =/=Int #address ( FoundryConsole ) ) ) )
               )))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-132-TO-96)]
    
    rule [BASIC-BLOCK-133-TO-97]: <foundry>
           <kevm>
             <k>
               ( #accessAccounts C_ENUM_MEMBER_CONTRACT_ID:Int
               ~> #checkCall C_ENUM_ID:Int 0
               ~> #call C_ENUM_ID:Int C_ENUM_MEMBER_CONTRACT_ID:Int C_ENUM_MEMBER_CONTRACT_ID:Int 0 0 b"h\xaf7\xdf" true
               ~> #return 128 32
               ~> #pc [ STATICCALL ]
               ~> #execute => #halt ~> .K )
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   ( _OUTPUT_CELL:Bytes => b"" )
                 </output>
                 <statusCode>
                   ( _STATUSCODE:StatusCode => EVMC_REVERT )
                 </statusCode>
                 <callState>
                   <id>
                     C_ENUM_ID:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 132 => 1 ) : ( ( 1756313567 => 132 ) : ( ( C_ENUM_MEMBER_CONTRACT_ID:Int => 1756313567 ) : ( ( 5 => C_ENUM_MEMBER_CONTRACT_ID:Int ) : ( ( 67 => 5 ) : ( ( 1664546334 => 67 ) : ( .WordStack => ( 1664546334 : .WordStack ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     CALLDEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( ACCESSEDACCOUNTS_CELL:Set => ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_ENUM_MEMBER_CONTRACT_ID:Int ) )
                   </accessedAccounts>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_ENUM_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_ENUM_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_ENUM_MEMBER_CONTRACT_ID:Int
                     </acctID>
                     <balance>
                       C_ENUM_MEMBER_CONTRACT_BAL:Int
                     </balance>
                     <storage>
                       C_ENUM_MEMBER_CONTRACT_STORAGE:Map
                     </storage>
                     <nonce>
                       C_ENUM_MEMBER_CONTRACT_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NEWCALLER_CELL:Account
               </newCaller>
               <active>
                 ACTIVE_CELL:Bool
               </active>
               <depth>
                 DEPTH_CELL:Int
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 ISREVERTEXPECTED_CELL:Bool
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( 1024 <=Int CALLDEPTH_CELL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
       andBool ( ( notBool ( CALLDEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int andBool ISREVERTEXPECTED_CELL:Bool ) )
       andBool ( ( notBool ( ACTIVE_CELL:Bool andBool ( CALLDEPTH_CELL:Int ==Int DEPTH_CELL:Int andBool NEWCALLER_CELL:Account =/=K C_ENUM_ID:Int ) ) )
       andBool ( ( notBool ( ( notBool <acctID>
          #address ( FoundryConsole )
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) ) andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int ==Int #address ( FoundryConsole ) andBool C_ENUM_ID:Int =/=Int #address ( FoundryConsole ) ) ) )
               )))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-133-TO-97)]
    
    rule [BASIC-BLOCK-134-TO-98]: <foundry>
           <kevm>
             <k>
               ( #next [ STATICCALL ] ~> .K => #consoleLog 1756313567 b""
               ~> 1
               ~> #push
               ~> #setLocalMem 128 32 b""
               ~> #pc [ STATICCALL ] )
               ~> #endPrank
               ~> #checkRevert
               ~> #updateRevertOutput 128 32
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     NCL:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 0 => 132 ) : ( ( C_ENUM_MEMBER_CONTRACT_ID:Int => 1756313567 ) : ( ( 128 => #address ( FoundryConsole ) ) : ( ( 4 => 5 ) : ( ( 128 => 67 ) : ( ( 32 => 1664546334 ) : ( ( 132 : ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     EXPECTEDDEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   NOG:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       ( C_ENUM_ID:Int => #address ( FoundryConsole ) )
                     </acctID>
                     <balance>
                       ( C_ENUM_BAL:Int => C_ENUM_MEMBER_CONTRACT_BAL:Int )
                     </balance>
                     <storage>
                       ( ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map ) => C_ENUM_MEMBER_CONTRACT_STORAGE:Map )
                     </storage>
                     <origStorage>
                       ( C_ENUM_ORIGSTORAGE:Map => C_ENUM_MEMBER_CONTRACT_ORIGSTORAGE:Map )
                     </origStorage>
                     <transientStorage>
                       ( C_ENUM_TRANSIENTSTORAGE:Map => C_ENUM_MEMBER_CONTRACT_TRANSIENTSTORAGE:Map )
                     </transientStorage>
                     <nonce>
                       ( C_ENUM_NONCE:Int => C_ENUM_MEMBER_CONTRACT_NONCE:Int )
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       ( C_ENUM_MEMBER_CONTRACT_ID:Int => C_ENUM_ID:Int )
                     </acctID>
                     <balance>
                       ( C_ENUM_MEMBER_CONTRACT_BAL:Int => C_ENUM_BAL:Int )
                     </balance>
                     <storage>
                       ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map => ( ( 0 |-> #address ( FoundryConsole ) )
                       C_ENUM_STORAGE:Map ) )
                     </storage>
                     <origStorage>
                       ( C_ENUM_MEMBER_CONTRACT_ORIGSTORAGE:Map => C_ENUM_ORIGSTORAGE:Map )
                     </origStorage>
                     <transientStorage>
                       ( C_ENUM_MEMBER_CONTRACT_TRANSIENTSTORAGE:Map => C_ENUM_TRANSIENTSTORAGE:Map )
                     </transientStorage>
                     <nonce>
                       ( C_ENUM_MEMBER_CONTRACT_NONCE:Int => C_ENUM_NONCE:Int )
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NCL:Int
               </newCaller>
               <newOrigin>
                 NOG:Int
               </newOrigin>
               <active>
                 true
               </active>
               <depth>
                 EXPECTEDDEPTH_CELL:Int
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( _ACTIVE_CELL:Bool
       andBool ( _NEWCALLER_CELL:Account ==K NCL:Int
       andBool ( _NEWORIGIN_CELL:Account ==K NOG:Int
       andBool ( _ISREVERTEXPECTED_CELL:Bool
       andBool ( _DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( _CALLDEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int ==Int #address ( FoundryConsole )
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryConsole )
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int =/=Int NCL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          #address ( FoundryConsole )
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
               )))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-134-TO-98)]
    
    rule [BASIC-BLOCK-136-TO-101]: <foundry>
           <kevm>
             <k>
               ( #next [ STATICCALL ] ~> .K => #consoleLog 1756313567 b""
               ~> 1
               ~> #push
               ~> #setLocalMem 128 32 b""
               ~> #pc [ STATICCALL ] )
               ~> #endPrank
               ~> #checkRevert
               ~> #updateRevertOutput 128 32
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     NCL:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"c6\xf6\x1e"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 0 => 132 ) : ( ( C_ENUM_MEMBER_CONTRACT_ID:Int => 1756313567 ) : ( ( 128 => #address ( FoundryConsole ) ) : ( ( 4 => 5 ) : ( ( 128 => 67 ) : ( ( 32 => 1664546334 ) : ( ( 132 : ( 1756313567 : ( C_ENUM_MEMBER_CONTRACT_ID:Int : ( 5 : ( 67 : ( 1664546334 : .WordStack ) ) ) ) ) ) => .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00h\xaf7\xdf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <callDepth>
                     EXPECTEDDEPTH_CELL:Int
                   </callDepth>
                   <codeAddr>
                     C_ENUM_ID:Int
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       ( C_ENUM_ID:Int => #address ( FoundryConsole ) )
                     </acctID>
                     <balance>
                       ( C_ENUM_BAL:Int => C_ENUM_MEMBER_CONTRACT_BAL:Int )
                     </balance>
                     <storage>
                       ( ( ( 0 |-> C_ENUM_MEMBER_CONTRACT_ID:Int )
                       C_ENUM_STORAGE:Map ) => C_ENUM_MEMBER_CONTRACT_STORAGE:Map )
                     </storage>
                     <origStorage>
                       ( C_ENUM_ORIGSTORAGE:Map => C_ENUM_MEMBER_CONTRACT_ORIGSTORAGE:Map )
                     </origStorage>
                     <transientStorage>
                       ( C_ENUM_TRANSIENTSTORAGE:Map => C_ENUM_MEMBER_CONTRACT_TRANSIENTSTORAGE:Map )
                     </transientStorage>
                     <nonce>
                       ( C_ENUM_NONCE:Int => C_ENUM_MEMBER_CONTRACT_NONCE:Int )
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       ( C_ENUM_MEMBER_CONTRACT_ID:Int => C_ENUM_ID:Int )
                     </acctID>
                     <balance>
                       ( C_ENUM_MEMBER_CONTRACT_BAL:Int => C_ENUM_BAL:Int )
                     </balance>
                     <storage>
                       ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map => ( ( 0 |-> #address ( FoundryConsole ) )
                       C_ENUM_STORAGE:Map ) )
                     </storage>
                     <origStorage>
                       ( C_ENUM_MEMBER_CONTRACT_ORIGSTORAGE:Map => C_ENUM_ORIGSTORAGE:Map )
                     </origStorage>
                     <transientStorage>
                       ( C_ENUM_MEMBER_CONTRACT_TRANSIENTSTORAGE:Map => C_ENUM_TRANSIENTSTORAGE:Map )
                     </transientStorage>
                     <nonce>
                       ( C_ENUM_MEMBER_CONTRACT_NONCE:Int => C_ENUM_NONCE:Int )
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <newCaller>
                 NCL:Int
               </newCaller>
               <newOrigin>
                 .Account
               </newOrigin>
               <active>
                 true
               </active>
               <depth>
                 EXPECTEDDEPTH_CELL:Int
               </depth>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 true
               </isRevertExpected>
               <expectedDepth>
                 EXPECTEDDEPTH_CELL:Int
               </expectedDepth>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( _ACTIVE_CELL:Bool
       andBool ( _NEWCALLER_CELL:Account ==K NCL:Int
       andBool ( _ISREVERTEXPECTED_CELL:Bool
       andBool ( _DEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( _CALLDEPTH_CELL:Int ==Int EXPECTEDDEPTH_CELL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int ==Int #address ( FoundryConsole )
       andBool ( _NEWORIGIN_CELL:Account ==K .Account
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int C_ENUM_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_ENUM_BAL:Int
       andBool ( 0 <=Int C_ENUM_NONCE:Int
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryConsole )
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_BAL:Int
       andBool ( 0 <=Int C_ENUM_MEMBER_CONTRACT_NONCE:Int
       andBool ( C_ENUM_NONCE:Int <Int maxUInt64
       andBool ( C_ENUM_MEMBER_CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_ENUM_ID:Int =/=Int NCL:Int
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int <Int pow160
       andBool ( C_ENUM_BAL:Int <Int pow256
       andBool ( C_ENUM_ID:Int =/=Int C_ENUM_MEMBER_CONTRACT_ID:Int
       andBool ( ( notBool 0 in_keys ( C_ENUM_STORAGE:Map ) )
       andBool ( C_ENUM_MEMBER_CONTRACT_BAL:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( C_ENUM_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ORIGIN_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          #address ( FoundryConsole )
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( #lookup ( C_ENUM_MEMBER_CONTRACT_STORAGE:Map , 1 ) <Int 6
       andBool ( C_ENUM_MEMBER_CONTRACT_ID:Int =/=Int #address ( FoundryCheat )
       andBool ( ( notBool <acctID>
          C_ENUM_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_ENUM_MEMBER_CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( CALLER_ID:Int <=Int 0
          orBool ( 10 <Int CALLER_ID:Int
                 ))
       andBool ( ( C_ENUM_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_ID:Int
                 ))
       andBool ( ( ORIGIN_ID:Int <=Int 0
          orBool ( 10 <Int ORIGIN_ID:Int
                 ))
       andBool ( ( C_ENUM_MEMBER_CONTRACT_ID:Int <=Int 0
          orBool ( 10 <Int C_ENUM_MEMBER_CONTRACT_ID:Int
                 ))
               )))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-136-TO-101)]

endmodule