
┌─ 1 (root, init)
│   k: #execute ~> CONTINUATION:K
│   pc: 0
│   callDepth: 0
│   statusCode: STATUSCODE:StatusCode
│   src: test/ProviderUnit.t.sol:12:70
│   method: test%ProviderUnitTest.setUp()
│
│  (236 steps)
├─ 3 (terminal)
│   k: #halt ~> CONTINUATION:K
│   pc: 339
│   callDepth: 0
│   statusCode: EVMC_SUCCESS
│   src: test/ProviderUnit.t.sol:42:49
│   method: test%ProviderUnitTest.setUp()
│
│  (1 step)
├─ 4
│   k: #execute ~> CONTINUATION:K
│   pc: 0
│   callDepth: 0
│   statusCode: STATUSCODE:StatusCode
│   src: test/ProviderUnit.t.sol:12:70
│   method: test%ProviderUnitTest.testDeposit()
│
│  (378 steps)
├─ 6
│   k: FETCH_ACCOUNT 103357696640705820808527172172828496799009669636 ~> #call 72881556 ...
│   pc: 1663
│   callDepth: 0
│   statusCode: STATUSCODE:StatusCode
│   src: test/ProviderUnit.t.sol:22:22
│   method: test%ProviderUnitTest.testDeposit()
│
│  (1 step)
├─ 7
│   k: #call 728815563385977040452943777879061427756277306518 1033576966407058208085271 ...
│   pc: 1663
│   callDepth: 0
│   statusCode: STATUSCODE:StatusCode
│   src: test/ProviderUnit.t.sol:22:22
│   method: test%ProviderUnitTest.testDeposit()
│
│  (374 steps)
├─ 8
│   k: FETCH_ACCOUNT_STORAGE 103357696640705820808527172172828496799009669636 134071993 ...
│   pc: 3042
│   callDepth: 1
│   statusCode: STATUSCODE:StatusCode
│
│  (1 step)
├─ 9
│   k: 0 ~> #push ~> #pc [ SLOAD ] ~> #execute ~> #return 128 32 ~> #pc [ STATICCALL ]  ...
│   pc: 3042
│   callDepth: 1
│   statusCode: STATUSCODE:StatusCode
│
│  (89 steps)
├─ 10
│   k: #halt ~> #return 128 32 ~> #pc [ STATICCALL ] ~> #execute ~> CONTINUATION:K
│   pc: 786
│   callDepth: 1
│   statusCode: EVMC_SUCCESS
│
│  (1000 steps)
├─ 11
│   k: JUMPDEST ~> #pc [ JUMPDEST ] ~> #execute ~> CONTINUATION:K
│   pc: 2045
│   callDepth: 0
│   statusCode: EVMC_SUCCESS
│   src: test/ProviderUnit.t.sol:27:27
│   method: test%ProviderUnitTest.testDeposit()
│
│  (508 steps)
├─ 12
│   k: #halt ~> #return 192 0 ~> #pc [ CALL ] ~> #execute ~> CONTINUATION:K
│   pc: 1041
│   callDepth: 1
│   statusCode: EVMC_SUCCESS
│
│  (677 steps)
├─ 13
│   k: #halt ~> #return 192 32 ~> #pc [ STATICCALL ] ~> #execute ~> CONTINUATION:K
│   pc: 786
│   callDepth: 1
│   statusCode: EVMC_SUCCESS
│
│  (303 steps)
├─ 14 (terminal)
│   k: #halt ~> CONTINUATION:K
│   pc: 297
│   callDepth: 0
│   statusCode: EVMC_SUCCESS
│   src: test/ProviderUnit.t.sol:42:49
│   method: test%ProviderUnitTest.testDeposit()
│
┊  constraint: true
┊  subst: ...
└─ 5 (leaf, target, terminal)
    k: #halt ~> CONTINUATION:K
    pc: PC_CELL_5d410f2a:Int
    callDepth: CALLDEPTH_CELL_5d410f2a:Int
    statusCode: STATUSCODE_FINAL:StatusCode




module SUMMARY-TEST%PROVIDERUNITTEST.TESTDEPOSIT():0
    
    
    rule [BASIC-BLOCK-1-TO-3]: <foundry>
           <kevm>
             <k>
               ( #execute => #halt )
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <statusCode>
                   ( _STATUSCODE:StatusCode => EVMC_SUCCESS )
                 </statusCode>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   .Set
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"\n\x92T\xe4"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( .WordStack => ( selector ( "setUp()" ) : .WordStack ) )
                   </wordStack>
                   <localMem>
                     ( b"" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80" )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     .Set
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   <createdAccounts>
                     .Set
                   </createdAccounts>
                   ...
                 </substate>
                 <gasPrice>
                   0
                 </gasPrice>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <coinbase>
                     376793390874373408599387495934666716005045108753
                   </coinbase>
                   <number>
                     131674109
                   </number>
                   <gasLimit>
                     60000000
                   </gasLimit>
                   <timestamp>
                     1738946995
                   </timestamp>
                   <baseFee>
                     585
                   </baseFee>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   10
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( .Map => ( maxUInt5 |-> 26459570340020690126982956076244095180546475426816 ) )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account> )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <forkedAccounts>
             .Set
           </forkedAccounts>
           <allowWeb3Connection>
             true
           </allowWeb3Connection>
           <stackChecks>
             false
           </stackChecks>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( _C_PROVIDERUNITTEST_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 10 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 10 ) )
               )))))))))
      [priority(20), label(BASIC-BLOCK-1-TO-3)]
    
    rule [BASIC-BLOCK-3-TO-4]: <foundry>
           <kevm>
             <k>
               ( #halt => #execute )
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <statusCode>
                   ( EVMC_SUCCESS => ?_STATUSCODE:StatusCode )
                 </statusCode>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   .Set
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     ( b"\n\x92T\xe4" => b"\x7f\x92LN" )
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( selector ( "setUp()" ) : .WordStack ) => .WordStack )
                   </wordStack>
                   <localMem>
                     ( b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80" => b"" )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     .Set
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   <createdAccounts>
                     .Set
                   </createdAccounts>
                   ...
                 </substate>
                 <gasPrice>
                   0
                 </gasPrice>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <coinbase>
                     376793390874373408599387495934666716005045108753
                   </coinbase>
                   <number>
                     131674109
                   </number>
                   <gasLimit>
                     60000000
                   </gasLimit>
                   <timestamp>
                     1738946995
                   </timestamp>
                   <baseFee>
                     585
                   </baseFee>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   10
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( maxUInt5 |-> 26459570340020690126982956076244095180546475426816 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account> )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <forkedAccounts>
             .Set
           </forkedAccounts>
           <allowWeb3Connection>
             true
           </allowWeb3Connection>
           <stackChecks>
             false
           </stackChecks>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( _C_PROVIDERUNITTEST_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 10 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 10 ) )
               )))))))))
      [priority(20), label(BASIC-BLOCK-3-TO-4)]
    
    rule [BASIC-BLOCK-4-TO-6]: <foundry>
           <kevm>
             <k>
               ( .K => FETCH_ACCOUNT 103357696640705820808527172172828496799009669636
               ~> #call 728815563385977040452943777879061427756277306518 103357696640705820808527172172828496799009669636 103357696640705820808527172172828496799009669636 0 0 b"p\xa0\x821\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\xa98[\xe1\x02\xac>\xac)t\x83\xddb3\xd6+>\x14\x96" true
               ~> #return 128 32
               ~> #pc [ STATICCALL ] )
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   .Set
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"\x7f\x92LN"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( .WordStack => ( 164 : ( selector ( "balanceOf(address)" ) : ( 103357696640705820808527172172828496799009669636 : ( 0 : ( 296 : ( selector ( "testDeposit()" ) : .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     ( b"" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00p\xa0\x821\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\xa98[\xe1\x02\xac>\xac)t\x83\xddb3\xd6+>\x14\x96" )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( .Set => SetItem ( 103357696640705820808527172172828496799009669636 ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   <createdAccounts>
                     .Set
                   </createdAccounts>
                   ...
                 </substate>
                 <gasPrice>
                   0
                 </gasPrice>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <coinbase>
                     376793390874373408599387495934666716005045108753
                   </coinbase>
                   <number>
                     131674109
                   </number>
                   <gasLimit>
                     60000000
                   </gasLimit>
                   <timestamp>
                     1738946995
                   </timestamp>
                   <baseFee>
                     585
                   </baseFee>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   10
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( maxUInt5 |-> 26459570340020690126982956076244095180546475426816 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account> )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <forkedAccounts>
             .Set
           </forkedAccounts>
           <allowWeb3Connection>
             true
           </allowWeb3Connection>
           <stackChecks>
             false
           </stackChecks>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 10 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 10 ) )
               ))))))))
      [priority(20), label(BASIC-BLOCK-4-TO-6)]
    
    rule [BASIC-BLOCK-6-TO-7]: <foundry>
           <kevm>
             <k>
               ( FETCH_ACCOUNT 103357696640705820808527172172828496799009669636 ~> .K => .K )
               ~> #call 728815563385977040452943777879061427756277306518 103357696640705820808527172172828496799009669636 103357696640705820808527172172828496799009669636 0 0 b"p\xa0\x821\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\xa98[\xe1\x02\xac>\xac)t\x83\xddb3\xd6+>\x14\x96" true
               ~> #return 128 32
               ~> #pc [ STATICCALL ]
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   .Set
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"\x7f\x92LN"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( 164 : ( selector ( "balanceOf(address)" ) : ( 103357696640705820808527172172828496799009669636 : ( 0 : ( 296 : ( selector ( "testDeposit()" ) : .WordStack ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00p\xa0\x821\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\xa98[\xe1\x02\xac>\xac)t\x83\xddb3\xd6+>\x14\x96"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     SetItem ( 103357696640705820808527172172828496799009669636 )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   <createdAccounts>
                     .Set
                   </createdAccounts>
                   ...
                 </substate>
                 <gasPrice>
                   0
                 </gasPrice>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <coinbase>
                     376793390874373408599387495934666716005045108753
                   </coinbase>
                   <number>
                     131674109
                   </number>
                   <gasLimit>
                     60000000
                   </gasLimit>
                   <timestamp>
                     1738946995
                   </timestamp>
                   <baseFee>
                     585
                   </baseFee>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   10
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       ( 645326474426547203313410069153905908525362434349 => 103357696640705820808527172172828496799009669636 )
                     </acctID>
                     <balance>
                       ( 0 => 108013846086269695372 )
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( maxUInt5 |-> 26459570340020690126982956076244095180546475426816 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account> => ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( maxUInt5 |-> 26459570340020690126982956076244095180546475426816 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account> ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <forkedAccounts>
             ( .Set => SetItem ( 103357696640705820808527172172828496799009669636 ) )
           </forkedAccounts>
           <allowWeb3Connection>
             true
           </allowWeb3Connection>
           <stackChecks>
             false
           </stackChecks>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 10 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 10 ) )
               ))))))))
      [priority(20), label(BASIC-BLOCK-6-TO-7)]
    
    rule [BASIC-BLOCK-7-TO-8]: <foundry>
           <kevm>
             <k>
               ( #call 728815563385977040452943777879061427756277306518 103357696640705820808527172172828496799009669636 103357696640705820808527172172828496799009669636 0 0 b"p\xa0\x821\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\xa98[\xe1\x02\xac>\xac)t\x83\xddb3\xd6+>\x14\x96" true ~> .K => FETCH_ACCOUNT_STORAGE 103357696640705820808527172172828496799009669636 13407199363679635973052879518465057167389910613330280238043615909335847287356
               ~> #push
               ~> #pc [ SLOAD ]
               ~> #execute )
               ~> #return 128 32
               ~> #pc [ STATICCALL ]
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ( .List => ListItem ( <callState>
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"\x7f\x92LN"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 164 : ( selector ( "balanceOf(address)" ) : ( 103357696640705820808527172172828496799009669636 : ( 0 : ( 296 : ( selector ( "testDeposit()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00p\xa0\x821\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\xa98[\xe1\x02\xac>\xac)t\x83\xddb3\xd6+>\x14\x96"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                     ...
                   </callState> ) )
                 </callStack>
                 <interimStates>
                   ( .List => ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         103357696640705820808527172172828496799009669636
                       </acctID>
                       <balance>
                         108013846086269695372
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <transientStorage>
                         .Map
                       </transientStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <transientStorage>
                         .Map
                       </transientStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( maxUInt5 |-> 26459570340020690126982956076244095180546475426816 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <transientStorage>
                         .Map
                       </transientStorage>
                       <nonce>
                         1
                       </nonce>
                       ...
                     </account> ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       .List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       SetItem ( 103357696640705820808527172172828496799009669636 )
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                     <createdAccounts>
                       .Set
                     </createdAccounts>
                   </substate> } ) )
                 </interimStates>
                 <touchedAccounts>
                   ( .Set => ( SetItem ( 103357696640705820808527172172828496799009669636 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     ( 728815563385977040452943777879061427756277306518 => 103357696640705820808527172172828496799009669636 )
                   </id>
                   <caller>
                     ( CALLER_ID:Int => 728815563385977040452943777879061427756277306518 )
                   </caller>
                   <callData>
                     ( b"\x7f\x92LN" => b"p\xa0\x821\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\xa98[\xe1\x02\xac>\xac)t\x83\xddb3\xd6+>\x14\x96" )
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 164 => 765 ) : ( selector ( "balanceOf(address)" ) : ( ( 103357696640705820808527172172828496799009669636 : ( 0 : ( 296 : ( selector ( "testDeposit()" ) : .WordStack ) ) ) ) => .WordStack ) ) )
                   </wordStack>
                   <localMem>
                     ( b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00p\xa0\x821\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\xa98[\xe1\x02\xac>\xac)t\x83\xddb3\xd6+>\x14\x96" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\xa98[\xe1\x02\xac>\xac)t\x83\xddb3\xd6+>\x14\x96\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80" )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     ( false => true )
                   </static>
                   <callDepth>
                     ( 0 => 1 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 103357696640705820808527172172828496799009669636 ) => ( SetItem ( 103357696640705820808527172172828496799009669636 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   <createdAccounts>
                     .Set
                   </createdAccounts>
                 </substate>
                 <gasPrice>
                   0
                 </gasPrice>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <coinbase>
                     376793390874373408599387495934666716005045108753
                   </coinbase>
                   <number>
                     131674109
                   </number>
                   <gasLimit>
                     60000000
                   </gasLimit>
                   <timestamp>
                     1738946995
                   </timestamp>
                   <baseFee>
                     585
                   </baseFee>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   10
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       103357696640705820808527172172828496799009669636
                     </acctID>
                     <balance>
                       108013846086269695372
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( maxUInt5 |-> 26459570340020690126982956076244095180546475426816 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <forkedAccounts>
             SetItem ( 103357696640705820808527172172828496799009669636 )
           </forkedAccounts>
           <allowWeb3Connection>
             true
           </allowWeb3Connection>
           <stackChecks>
             false
           </stackChecks>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 10 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 10 ) )
               ))))))))
      [priority(20), label(BASIC-BLOCK-7-TO-8)]
    
    rule [BASIC-BLOCK-8-TO-9]: <foundry>
           <kevm>
             <k>
               ( FETCH_ACCOUNT_STORAGE 103357696640705820808527172172828496799009669636 13407199363679635973052879518465057167389910613330280238043615909335847287356 => 0 )
               ~> #push
               ~> #pc [ SLOAD ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ STATICCALL ]
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"\x7f\x92LN"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 164 : ( selector ( "balanceOf(address)" ) : ( 103357696640705820808527172172828496799009669636 : ( 0 : ( 296 : ( selector ( "testDeposit()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00p\xa0\x821\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\xa98[\xe1\x02\xac>\xac)t\x83\xddb3\xd6+>\x14\x96"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                     ...
                   </callState> )
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         103357696640705820808527172172828496799009669636
                       </acctID>
                       <balance>
                         108013846086269695372
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <transientStorage>
                         .Map
                       </transientStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <transientStorage>
                         .Map
                       </transientStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( maxUInt5 |-> 26459570340020690126982956076244095180546475426816 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <transientStorage>
                         .Map
                       </transientStorage>
                       <nonce>
                         1
                       </nonce>
                       ...
                     </account> ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       .List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       SetItem ( 103357696640705820808527172172828496799009669636 )
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                     <createdAccounts>
                       .Set
                     </createdAccounts>
                   </substate> } )
                 </interimStates>
                 <touchedAccounts>
                   ( SetItem ( 103357696640705820808527172172828496799009669636 ) SetItem ( 728815563385977040452943777879061427756277306518 ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     103357696640705820808527172172828496799009669636
                   </id>
                   <caller>
                     728815563385977040452943777879061427756277306518
                   </caller>
                   <callData>
                     b"p\xa0\x821\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\xa98[\xe1\x02\xac>\xac)t\x83\xddb3\xd6+>\x14\x96"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( 765 : ( selector ( "balanceOf(address)" ) : .WordStack ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\xa98[\xe1\x02\xac>\xac)t\x83\xddb3\xd6+>\x14\x96\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     true
                   </static>
                   <callDepth>
                     1
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 103357696640705820808527172172828496799009669636 ) SetItem ( 728815563385977040452943777879061427756277306518 ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   <createdAccounts>
                     .Set
                   </createdAccounts>
                 </substate>
                 <gasPrice>
                   0
                 </gasPrice>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <coinbase>
                     376793390874373408599387495934666716005045108753
                   </coinbase>
                   <number>
                     131674109
                   </number>
                   <gasLimit>
                     60000000
                   </gasLimit>
                   <timestamp>
                     1738946995
                   </timestamp>
                   <baseFee>
                     585
                   </baseFee>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   10
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       103357696640705820808527172172828496799009669636
                     </acctID>
                     <balance>
                       108013846086269695372
                     </balance>
                     <storage>
                       ( .Map => ( 13407199363679635973052879518465057167389910613330280238043615909335847287356 |-> 0 ) )
                     </storage>
                     <origStorage>
                       ( .Map => ( 13407199363679635973052879518465057167389910613330280238043615909335847287356 |-> 0 ) )
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( maxUInt5 |-> 26459570340020690126982956076244095180546475426816 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <forkedAccounts>
             SetItem ( 103357696640705820808527172172828496799009669636 )
           </forkedAccounts>
           <allowWeb3Connection>
             true
           </allowWeb3Connection>
           <stackChecks>
             false
           </stackChecks>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 10 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 10 ) )
               ))))))))
      [priority(20), label(BASIC-BLOCK-8-TO-9)]
    
    rule [BASIC-BLOCK-9-TO-10]: <foundry>
           <kevm>
             <k>
               ( 0
               ~> #push
               ~> #pc [ SLOAD ]
               ~> #execute => #halt ~> .K )
               ~> #return 128 32
               ~> #pc [ STATICCALL ]
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   ( b"" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" )
                 </output>
                 <statusCode>
                   ( _STATUSCODE:StatusCode => EVMC_SUCCESS )
                 </statusCode>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"\x7f\x92LN"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 164 : ( selector ( "balanceOf(address)" ) : ( 103357696640705820808527172172828496799009669636 : ( 0 : ( 296 : ( selector ( "testDeposit()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00p\xa0\x821\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\xa98[\xe1\x02\xac>\xac)t\x83\xddb3\xd6+>\x14\x96"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                     ...
                   </callState> )
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         103357696640705820808527172172828496799009669636
                       </acctID>
                       <balance>
                         108013846086269695372
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <transientStorage>
                         .Map
                       </transientStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <transientStorage>
                         .Map
                       </transientStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( maxUInt5 |-> 26459570340020690126982956076244095180546475426816 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <transientStorage>
                         .Map
                       </transientStorage>
                       <nonce>
                         1
                       </nonce>
                       ...
                     </account> ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       .List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       SetItem ( 103357696640705820808527172172828496799009669636 )
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                     <createdAccounts>
                       .Set
                     </createdAccounts>
                   </substate> } )
                 </interimStates>
                 <touchedAccounts>
                   ( SetItem ( 103357696640705820808527172172828496799009669636 ) SetItem ( 728815563385977040452943777879061427756277306518 ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     103357696640705820808527172172828496799009669636
                   </id>
                   <caller>
                     728815563385977040452943777879061427756277306518
                   </caller>
                   <callData>
                     b"p\xa0\x821\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\xa98[\xe1\x02\xac>\xac)t\x83\xddb3\xd6+>\x14\x96"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( 765 : ( selector ( "balanceOf(address)" ) : .WordStack ) )
                   </wordStack>
                   <localMem>
                     ( b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\xa98[\xe1\x02\xac>\xac)t\x83\xddb3\xd6+>\x14\x96\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\xa98[\xe1\x02\xac>\xac)t\x83\xddb3\xd6+>\x14\x96\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     true
                   </static>
                   <callDepth>
                     1
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 103357696640705820808527172172828496799009669636 ) SetItem ( 728815563385977040452943777879061427756277306518 ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   <createdAccounts>
                     .Set
                   </createdAccounts>
                 </substate>
                 <gasPrice>
                   0
                 </gasPrice>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <coinbase>
                     376793390874373408599387495934666716005045108753
                   </coinbase>
                   <number>
                     131674109
                   </number>
                   <gasLimit>
                     60000000
                   </gasLimit>
                   <timestamp>
                     1738946995
                   </timestamp>
                   <baseFee>
                     585
                   </baseFee>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   10
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       103357696640705820808527172172828496799009669636
                     </acctID>
                     <balance>
                       108013846086269695372
                     </balance>
                     <storage>
                       ( 13407199363679635973052879518465057167389910613330280238043615909335847287356 |-> 0 )
                     </storage>
                     <origStorage>
                       ( 13407199363679635973052879518465057167389910613330280238043615909335847287356 |-> 0 )
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( maxUInt5 |-> 26459570340020690126982956076244095180546475426816 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <forkedAccounts>
             SetItem ( 103357696640705820808527172172828496799009669636 )
           </forkedAccounts>
           <allowWeb3Connection>
             true
           </allowWeb3Connection>
           <stackChecks>
             false
           </stackChecks>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 10 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 10 ) )
               ))))))))
      [priority(20), label(BASIC-BLOCK-9-TO-10)]
    
    rule [BASIC-BLOCK-10-TO-11]: <foundry>
           <kevm>
             <k>
               ( #halt
               ~> #return 128 32
               ~> #pc [ STATICCALL ] => JUMPDEST
               ~> #pc [ JUMPDEST ] )
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   ( b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" => b"" )
                 </output>
                 <statusCode>
                   EVMC_SUCCESS
                 </statusCode>
                 <callStack>
                   ( ListItem ( <callState>
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"\x7f\x92LN"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 164 : ( selector ( "balanceOf(address)" ) : ( 103357696640705820808527172172828496799009669636 : ( 0 : ( 296 : ( selector ( "testDeposit()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00p\xa0\x821\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\xa98[\xe1\x02\xac>\xac)t\x83\xddb3\xd6+>\x14\x96"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                     ...
                   </callState> ) => .List )
                 </callStack>
                 <interimStates>
                   ( ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         103357696640705820808527172172828496799009669636
                       </acctID>
                       <balance>
                         108013846086269695372
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <transientStorage>
                         .Map
                       </transientStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <transientStorage>
                         .Map
                       </transientStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( maxUInt5 |-> 26459570340020690126982956076244095180546475426816 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <transientStorage>
                         .Map
                       </transientStorage>
                       <nonce>
                         1
                       </nonce>
                       ...
                     </account> ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       .List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       SetItem ( 103357696640705820808527172172828496799009669636 )
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                     <createdAccounts>
                       .Set
                     </createdAccounts>
                   </substate> } ) => .List )
                 </interimStates>
                 <touchedAccounts>
                   ( SetItem ( 103357696640705820808527172172828496799009669636 ) SetItem ( 728815563385977040452943777879061427756277306518 ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     ( 103357696640705820808527172172828496799009669636 => 728815563385977040452943777879061427756277306518 )
                   </id>
                   <caller>
                     ( 728815563385977040452943777879061427756277306518 => CALLER_ID:Int )
                   </caller>
                   <callData>
                     ( b"p\xa0\x821\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\xa98[\xe1\x02\xac>\xac)t\x83\xddb3\xd6+>\x14\x96" => b"\x7f\x92LN" )
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 765 => 0 ) : ( ( selector ( "balanceOf(address)" ) => 103357696640705820808527172172828496799009669636 ) : ( .WordStack => ( ??WORD:Int : ( 192 : ( 4 : ( 192 : ( 0 : ( 196 : ( ??WORD:Int : ( selector ( "deposit()" ) : ( 103357696640705820808527172172828496799009669636 : ( ??WORD:Int : ( 0 : ( 296 : ( selector ( "testDeposit()" ) : .WordStack ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     ( b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\xa98[\xe1\x02\xac>\xac)t\x83\xddb3\xd6+>\x14\x96\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ??WORD:Int ) +Bytes b"\xd0\xe3\r\xb0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00+>\x14\x96" +Bytes #buf ( 32 , ??WORD:Int ) )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     ( true => false )
                   </static>
                   <callDepth>
                     ( 1 => 0 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 103357696640705820808527172172828496799009669636 ) ( SetItem ( 728815563385977040452943777879061427756277306518 ) => ( SetItem ( 645326474426547203313410069153905908525362434349 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   <createdAccounts>
                     .Set
                   </createdAccounts>
                 </substate>
                 <gasPrice>
                   0
                 </gasPrice>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <coinbase>
                     376793390874373408599387495934666716005045108753
                   </coinbase>
                   <number>
                     131674109
                   </number>
                   <gasLimit>
                     60000000
                   </gasLimit>
                   <timestamp>
                     1738946995
                   </timestamp>
                   <baseFee>
                     585
                   </baseFee>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   10
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       103357696640705820808527172172828496799009669636
                     </acctID>
                     <balance>
                       108013846086269695372
                     </balance>
                     <storage>
                       ( 13407199363679635973052879518465057167389910613330280238043615909335847287356 |-> 0 )
                     </storage>
                     <origStorage>
                       ( 13407199363679635973052879518465057167389910613330280238043615909335847287356 |-> 0 )
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       ( 0 => ??WORD:Int )
                     </balance>
                     <storage>
                       ( maxUInt5 |-> 26459570340020690126982956076244095180546475426816 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <forkedAccounts>
             SetItem ( 103357696640705820808527172172828496799009669636 )
           </forkedAccounts>
           <allowWeb3Connection>
             true
           </allowWeb3Connection>
           <stackChecks>
             false
           </stackChecks>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 10 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 10 ) )
               ))))))))
       ensures ( 0 <=Int ??WORD:Int
       andBool ( ??WORD:Int <Int pow256
               ))
      [priority(20), label(BASIC-BLOCK-10-TO-11)]
    
    rule [BASIC-BLOCK-11-TO-12]: <foundry>
           <kevm>
             <k>
               ( JUMPDEST
               ~> #pc [ JUMPDEST ] => #halt
               ~> #return 192 0
               ~> #pc [ CALL ] )
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <statusCode>
                   EVMC_SUCCESS
                 </statusCode>
                 <callStack>
                   ( .List => ListItem ( <callState>
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"\x7f\x92LN"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 196 : ( ?WORD:Int : ( selector ( "deposit()" ) : ( 103357696640705820808527172172828496799009669636 : ( ?WORD:Int : ( 0 : ( 296 : ( selector ( "testDeposit()" ) : .WordStack ) ) ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ?WORD:Int ) +Bytes b"\xd0\xe3\r\xb0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00+>\x14\x96" +Bytes #buf ( 32 , ?WORD:Int )
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                     ...
                   </callState> ) )
                 </callStack>
                 <interimStates>
                   ( .List => ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         103357696640705820808527172172828496799009669636
                       </acctID>
                       <balance>
                         108013846086269695372
                       </balance>
                       <storage>
                         ( 13407199363679635973052879518465057167389910613330280238043615909335847287356 |-> 0 )
                       </storage>
                       <origStorage>
                         ( 13407199363679635973052879518465057167389910613330280238043615909335847287356 |-> 0 )
                       </origStorage>
                       <transientStorage>
                         .Map
                       </transientStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <transientStorage>
                         .Map
                       </transientStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         ?WORD:Int
                       </balance>
                       <storage>
                         ( maxUInt5 |-> 26459570340020690126982956076244095180546475426816 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <transientStorage>
                         .Map
                       </transientStorage>
                       <nonce>
                         1
                       </nonce>
                       ...
                     </account> ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       .List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ( SetItem ( 103357696640705820808527172172828496799009669636 ) ( SetItem ( 645326474426547203313410069153905908525362434349 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) )
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                     <createdAccounts>
                       .Set
                     </createdAccounts>
                   </substate> } ) )
                 </interimStates>
                 <touchedAccounts>
                   ( SetItem ( 103357696640705820808527172172828496799009669636 ) SetItem ( 728815563385977040452943777879061427756277306518 ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     ( 728815563385977040452943777879061427756277306518 => 103357696640705820808527172172828496799009669636 )
                   </id>
                   <caller>
                     ( CALLER_ID:Int => 728815563385977040452943777879061427756277306518 )
                   </caller>
                   <callData>
                     ( b"\x7f\x92LN" => b"\xd0\xe3\r\xb0" )
                   </callData>
                   <callValue>
                     ( 0 => ?WORD:Int )
                   </callValue>
                   <wordStack>
                     ( ( 0 => selector ( "deposit()" ) ) : ( ( 103357696640705820808527172172828496799009669636 : ( ?WORD:Int : ( 192 : ( 4 : ( 192 : ( 0 : ( 196 : ( ?WORD:Int : ( selector ( "deposit()" ) : ( 103357696640705820808527172172828496799009669636 : ( ?WORD:Int : ( 0 : ( 296 : ( selector ( "testDeposit()" ) : .WordStack ) ) ) ) ) ) ) ) ) ) ) ) ) ) => .WordStack ) )
                   </wordStack>
                   <localMem>
                     ( b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\xa98[\xe1\x02\xac>\xac)t\x83\xddb3\xd6+>\x14\x96\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" ) +Bytes ( #buf ( 32 , ?WORD:Int ) +Bytes b"\xd0\xe3\r\xb0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00+>\x14\x96" +Bytes #buf ( 32 , ?WORD:Int ) => #buf ( 32 , ?WORD:Int ) )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( 0 => 1 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     ( .List => ListItem ( { 103357696640705820808527172172828496799009669636 | ListItem ( 102222681472383059465863322013072701928378550215632170212813623808969952268444 ) ListItem ( 728815563385977040452943777879061427756277306518 ) | #buf ( 32 , ?WORD:Int ) } ) )
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 103357696640705820808527172172828496799009669636 ) ( SetItem ( 645326474426547203313410069153905908525362434349 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   <createdAccounts>
                     .Set
                   </createdAccounts>
                 </substate>
                 <gasPrice>
                   0
                 </gasPrice>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <coinbase>
                     376793390874373408599387495934666716005045108753
                   </coinbase>
                   <number>
                     131674109
                   </number>
                   <gasLimit>
                     60000000
                   </gasLimit>
                   <timestamp>
                     1738946995
                   </timestamp>
                   <baseFee>
                     585
                   </baseFee>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   10
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       103357696640705820808527172172828496799009669636
                     </acctID>
                     <balance>
                       ( 108013846086269695372 => chop ( ( ?WORD:Int +Int 108013846086269695372 ) ) )
                     </balance>
                     <storage>
                       ( 13407199363679635973052879518465057167389910613330280238043615909335847287356 |-> ( 0 => ?WORD:Int ) )
                     </storage>
                     <origStorage>
                       ( 13407199363679635973052879518465057167389910613330280238043615909335847287356 |-> 0 )
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       ( ?WORD:Int => 0 )
                     </balance>
                     <storage>
                       ( maxUInt5 |-> 26459570340020690126982956076244095180546475426816 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <forkedAccounts>
             SetItem ( 103357696640705820808527172172828496799009669636 )
           </forkedAccounts>
           <allowWeb3Connection>
             true
           </allowWeb3Connection>
           <stackChecks>
             false
           </stackChecks>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int ?WORD:Int
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( ?WORD:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 10 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 10 ) )
               ))))))))))
      [priority(20), label(BASIC-BLOCK-11-TO-12)]
    
    rule [BASIC-BLOCK-12-TO-13]: <foundry>
           <kevm>
             <k>
               #halt
               ~> ( #return 192 0
               ~> #pc [ CALL ] => #return 192 32
               ~> #pc [ STATICCALL ] )
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   ( b"" => #buf ( 32 , ?WORD:Int ) )
                 </output>
                 <statusCode>
                   EVMC_SUCCESS
                 </statusCode>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"\x7f\x92LN"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( ( 196 => 228 ) : ( ( ?WORD:Int => selector ( "balanceOf(address)" ) ) : ( ( selector ( "deposit()" ) => 103357696640705820808527172172828496799009669636 ) : ( ( 103357696640705820808527172172828496799009669636 => 0 ) : ( ?WORD:Int : ( 0 : ( 296 : ( selector ( "testDeposit()" ) : .WordStack ) ) ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ?WORD:Int ) +Bytes ( b"\xd0\xe3\r\xb0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00+>\x14\x96" => b"p\xa0\x821\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\xa98[\xe1\x02\xac>\xac)t\x83\xddb3\xd6+>\x14\x96" ) +Bytes #buf ( 32 , ?WORD:Int )
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                     ...
                   </callState> )
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         103357696640705820808527172172828496799009669636
                       </acctID>
                       <balance>
                         ( 108013846086269695372 => chop ( ( ?WORD:Int +Int 108013846086269695372 ) ) )
                       </balance>
                       <storage>
                         ( 13407199363679635973052879518465057167389910613330280238043615909335847287356 |-> ( 0 => ?WORD:Int ) )
                       </storage>
                       <origStorage>
                         ( 13407199363679635973052879518465057167389910613330280238043615909335847287356 |-> 0 )
                       </origStorage>
                       <transientStorage>
                         .Map
                       </transientStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <transientStorage>
                         .Map
                       </transientStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         ( ?WORD:Int => 0 )
                       </balance>
                       <storage>
                         ( maxUInt5 |-> 26459570340020690126982956076244095180546475426816 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <transientStorage>
                         .Map
                       </transientStorage>
                       <nonce>
                         1
                       </nonce>
                       ...
                     </account> ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       ( .List => ListItem ( { 103357696640705820808527172172828496799009669636 | ListItem ( 102222681472383059465863322013072701928378550215632170212813623808969952268444 ) ListItem ( 728815563385977040452943777879061427756277306518 ) | #buf ( 32 , ?WORD:Int ) } ) )
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ( SetItem ( 103357696640705820808527172172828496799009669636 ) ( SetItem ( 645326474426547203313410069153905908525362434349 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) )
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                     <createdAccounts>
                       .Set
                     </createdAccounts>
                   </substate> } )
                 </interimStates>
                 <touchedAccounts>
                   ( SetItem ( 103357696640705820808527172172828496799009669636 ) SetItem ( 728815563385977040452943777879061427756277306518 ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     103357696640705820808527172172828496799009669636
                   </id>
                   <caller>
                     728815563385977040452943777879061427756277306518
                   </caller>
                   <callData>
                     ( b"\xd0\xe3\r\xb0" => b"p\xa0\x821\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\xa98[\xe1\x02\xac>\xac)t\x83\xddb3\xd6+>\x14\x96" )
                   </callData>
                   <callValue>
                     ( ?WORD:Int => 0 )
                   </callValue>
                   <wordStack>
                     ( ( selector ( "deposit()" ) => 765 ) : ( .WordStack => ( selector ( "balanceOf(address)" ) : .WordStack ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\xa98[\xe1\x02\xac>\xac)t\x83\xddb3\xd6+>\x14\x96\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ?WORD:Int )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     ( false => true )
                   </static>
                   <callDepth>
                     1
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     ListItem ( { 103357696640705820808527172172828496799009669636 | ListItem ( 102222681472383059465863322013072701928378550215632170212813623808969952268444 ) ListItem ( 728815563385977040452943777879061427756277306518 ) | #buf ( 32 , ?WORD:Int ) } )
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 103357696640705820808527172172828496799009669636 ) ( SetItem ( 645326474426547203313410069153905908525362434349 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   <createdAccounts>
                     .Set
                   </createdAccounts>
                 </substate>
                 <gasPrice>
                   0
                 </gasPrice>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <coinbase>
                     376793390874373408599387495934666716005045108753
                   </coinbase>
                   <number>
                     131674109
                   </number>
                   <gasLimit>
                     60000000
                   </gasLimit>
                   <timestamp>
                     1738946995
                   </timestamp>
                   <baseFee>
                     585
                   </baseFee>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   10
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       103357696640705820808527172172828496799009669636
                     </acctID>
                     <balance>
                       chop ( ( ?WORD:Int +Int 108013846086269695372 ) )
                     </balance>
                     <storage>
                       ( 13407199363679635973052879518465057167389910613330280238043615909335847287356 |-> ?WORD:Int )
                     </storage>
                     <origStorage>
                       ( 13407199363679635973052879518465057167389910613330280238043615909335847287356 |-> 0 )
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( maxUInt5 |-> 26459570340020690126982956076244095180546475426816 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <forkedAccounts>
             SetItem ( 103357696640705820808527172172828496799009669636 )
           </forkedAccounts>
           <allowWeb3Connection>
             true
           </allowWeb3Connection>
           <stackChecks>
             false
           </stackChecks>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int ?WORD:Int
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( ?WORD:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 10 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 10 ) )
               ))))))))))
      [priority(20), label(BASIC-BLOCK-12-TO-13)]
    
    rule [BASIC-BLOCK-13-TO-14]: <foundry>
           <kevm>
             <k>
               #halt
               ~> ( #return 192 32
               ~> #pc [ STATICCALL ]
               ~> #execute => .K )
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   ( #buf ( 32 , ?WORD:Int ) => b"" )
                 </output>
                 <statusCode>
                   EVMC_SUCCESS
                 </statusCode>
                 <callStack>
                   ( ListItem ( <callState>
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"\x7f\x92LN"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 228 : ( selector ( "balanceOf(address)" ) : ( 103357696640705820808527172172828496799009669636 : ( 0 : ( ?WORD:Int : ( 0 : ( 296 : ( selector ( "testDeposit()" ) : .WordStack ) ) ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ?WORD:Int ) +Bytes b"p\xa0\x821\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\xa98[\xe1\x02\xac>\xac)t\x83\xddb3\xd6+>\x14\x96" +Bytes #buf ( 32 , ?WORD:Int )
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                     ...
                   </callState> ) => .List )
                 </callStack>
                 <interimStates>
                   ( ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         103357696640705820808527172172828496799009669636
                       </acctID>
                       <balance>
                         chop ( ( ?WORD:Int +Int 108013846086269695372 ) )
                       </balance>
                       <storage>
                         ( 13407199363679635973052879518465057167389910613330280238043615909335847287356 |-> ?WORD:Int )
                       </storage>
                       <origStorage>
                         ( 13407199363679635973052879518465057167389910613330280238043615909335847287356 |-> 0 )
                       </origStorage>
                       <transientStorage>
                         .Map
                       </transientStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <transientStorage>
                         .Map
                       </transientStorage>
                       <nonce>
                         0
                       </nonce>
                       ...
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         0
                       </balance>
                       <storage>
                         ( maxUInt5 |-> 26459570340020690126982956076244095180546475426816 )
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <transientStorage>
                         .Map
                       </transientStorage>
                       <nonce>
                         1
                       </nonce>
                       ...
                     </account> ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       ListItem ( { 103357696640705820808527172172828496799009669636 | ListItem ( 102222681472383059465863322013072701928378550215632170212813623808969952268444 ) ListItem ( 728815563385977040452943777879061427756277306518 ) | #buf ( 32 , ?WORD:Int ) } )
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ( SetItem ( 103357696640705820808527172172828496799009669636 ) ( SetItem ( 645326474426547203313410069153905908525362434349 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) )
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                     <createdAccounts>
                       .Set
                     </createdAccounts>
                   </substate> } ) => .List )
                 </interimStates>
                 <touchedAccounts>
                   ( SetItem ( 103357696640705820808527172172828496799009669636 ) SetItem ( 728815563385977040452943777879061427756277306518 ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     ( 103357696640705820808527172172828496799009669636 => 728815563385977040452943777879061427756277306518 )
                   </id>
                   <caller>
                     ( 728815563385977040452943777879061427756277306518 => CALLER_ID:Int )
                   </caller>
                   <callData>
                     ( b"p\xa0\x821\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\xa98[\xe1\x02\xac>\xac)t\x83\xddb3\xd6+>\x14\x96" => b"\x7f\x92LN" )
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 765 => selector ( "testDeposit()" ) ) : ( ( selector ( "balanceOf(address)" ) : .WordStack ) => .WordStack ) )
                   </wordStack>
                   <localMem>
                     ( b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\xa98[\xe1\x02\xac>\xac)t\x83\xddb3\xd6+>\x14\x96\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" ) +Bytes ( #buf ( 32 , ?WORD:Int ) => #buf ( 32 , ?WORD:Int ) +Bytes #buf ( 32 , ?WORD:Int ) +Bytes b"+>\x14\x96" +Bytes #buf ( 32 , ?WORD:Int ) )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     ( true => false )
                   </static>
                   <callDepth>
                     ( 1 => 0 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     ListItem ( { 103357696640705820808527172172828496799009669636 | ListItem ( 102222681472383059465863322013072701928378550215632170212813623808969952268444 ) ListItem ( 728815563385977040452943777879061427756277306518 ) | #buf ( 32 , ?WORD:Int ) } )
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( SetItem ( 103357696640705820808527172172828496799009669636 ) ( SetItem ( 645326474426547203313410069153905908525362434349 ) SetItem ( 728815563385977040452943777879061427756277306518 ) ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   <createdAccounts>
                     .Set
                   </createdAccounts>
                 </substate>
                 <gasPrice>
                   0
                 </gasPrice>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <coinbase>
                     376793390874373408599387495934666716005045108753
                   </coinbase>
                   <number>
                     131674109
                   </number>
                   <gasLimit>
                     60000000
                   </gasLimit>
                   <timestamp>
                     1738946995
                   </timestamp>
                   <baseFee>
                     585
                   </baseFee>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   10
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       103357696640705820808527172172828496799009669636
                     </acctID>
                     <balance>
                       chop ( ( ?WORD:Int +Int 108013846086269695372 ) )
                     </balance>
                     <storage>
                       ( 13407199363679635973052879518465057167389910613330280238043615909335847287356 |-> ?WORD:Int )
                     </storage>
                     <origStorage>
                       ( 13407199363679635973052879518465057167389910613330280238043615909335847287356 |-> 0 )
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       ( maxUInt5 |-> 26459570340020690126982956076244095180546475426816 )
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account> ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <forkedAccounts>
             SetItem ( 103357696640705820808527172172828496799009669636 )
           </forkedAccounts>
           <allowWeb3Connection>
             true
           </allowWeb3Connection>
           <stackChecks>
             false
           </stackChecks>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int ?WORD:Int
       andBool ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( ?WORD:Int <Int pow256
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 10 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 10 ) )
               ))))))))))
      [priority(20), label(BASIC-BLOCK-13-TO-14)]

endmodule
0 Failure nodes. (0 pending and 0 failing)

Join the Runtime Verification Discord server (https://discord.com/invite/CurfmXNtbN) or Telegram group (https://t.me/rv_kontrol) for support.

See `foundry_success` predicate for more information:
https://github.com/runtimeverification/kontrol/blob/master/src/kontrol/kdist/foundry.md#foundry-success-predicate

Access documentation for Kontrol at https://docs.runtimeverification.com/kontrol