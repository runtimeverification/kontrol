
┌─ 1 (root, init)
│   k: #execute ~> CONTINUATION:K
│   pc: 0
│   callDepth: 0
│   statusCode: STATUSCODE:StatusCode
│
│  (179 steps)
├─ 3
│   k: #end EVMC_SUCCESS ~> #pc [ STOP ] ~> #execute ~> CONTINUATION:K
│   pc: 328
│   callDepth: 0
│   statusCode: STATUSCODE:StatusCode
│
│  (1 step)
├─ 4
│   k: #halt ~> #pc [ STOP ] ~> #execute ~> CONTINUATION:K
│   pc: 328
│   callDepth: 0
│   statusCode: EVMC_SUCCESS
│
│  (2 steps)
├─ 5 (terminal)
│   k: #halt ~> CONTINUATION:K
│   pc: 328
│   callDepth: 0
│   statusCode: EVMC_SUCCESS
│
│  (1 step)
├─ 6
│   k: #execute ~> CONTINUATION:K
│   pc: 0
│   callDepth: 0
│   statusCode: STATUSCODE:StatusCode
│
│  (263 steps)
├─ 8
│   k: #end EVMC_SUCCESS ~> #pc [ STOP ] ~> #execute ~> CONTINUATION:K
│   pc: 328
│   callDepth: 0
│   statusCode: STATUSCODE:StatusCode
│
│  (1 step)
├─ 9
│   k: #halt ~> #pc [ STOP ] ~> #execute ~> CONTINUATION:K
│   pc: 328
│   callDepth: 0
│   statusCode: EVMC_SUCCESS
│
│  (2 steps)
├─ 10 (terminal)
│   k: #halt ~> CONTINUATION:K
│   pc: 328
│   callDepth: 0
│   statusCode: EVMC_SUCCESS
│
┊  constraint: true
┊  subst: OMITTED SUBST
└─ 7 (leaf, target, terminal)
    k: #halt ~> CONTINUATION:K
    pc: PC_CELL_5d410f2a:Int
    callDepth: CALLDEPTH_CELL_5d410f2a:Int
    statusCode: STATUSCODE_FINAL:StatusCode




    
    
    rule [BASIC-BLOCK-1-TO-3]: <generatedTop>
           <foundry>
             <kevm>
               <k>
                 ( .K => #end EVMC_SUCCESS
                 ~> #pc [ STOP ] )
                 ~> #execute
                 ~> _CONTINUATION
               </k>
               <exit-code>
                 _EXITCODE_CELL
               </exit-code>
               <mode>
                 NORMAL
               </mode>
               <schedule>
                 SHANGHAI
               </schedule>
               <useGas>
                 false
               </useGas>
               <ethereum>
                 <evm>
                   <output>
                     b""
                   </output>
                   <statusCode>
                     _STATUSCODE
                   </statusCode>
                   <callStack>
                     .List
                   </callStack>
                   <interimStates>
                     .List
                   </interimStates>
                   <touchedAccounts>
                     .Set
                   </touchedAccounts>
                   <callState>
                     ...
                     ...
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"\n\x92T\xe4"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( .WordStack => ( selector ( "setUp()" ) : .WordStack ) )
                     </wordStack>
                     <localMem>
                       ( b"" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80" )
                     </localMem>
                     ...
                     ...
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                   </callState>
                   <substate>
                     <selfDestruct>
                       _SELFDESTRUCT_CELL
                     </selfDestruct>
                     <log>
                       .List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       .Set
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                   </substate>
                   <gasPrice>
                     _GASPRICE_CELL
                   </gasPrice>
                   <origin>
                     ORIGIN_ID:Int
                   </origin>
                   <blockhashes>
                     _BLOCKHASHES_CELL
                   </blockhashes>
                   <block>
                     <previousHash>
                       _PREVIOUSHASH_CELL
                     </previousHash>
                     <ommersHash>
                       _OMMERSHASH_CELL
                     </ommersHash>
                     <coinbase>
                       _COINBASE_CELL
                     </coinbase>
                     <stateRoot>
                       _STATEROOT_CELL
                     </stateRoot>
                     <transactionsRoot>
                       _TRANSACTIONSROOT_CELL
                     </transactionsRoot>
                     <receiptsRoot>
                       _RECEIPTSROOT_CELL
                     </receiptsRoot>
                     <logsBloom>
                       _LOGSBLOOM_CELL
                     </logsBloom>
                     <difficulty>
                       _DIFFICULTY_CELL
                     </difficulty>
                     <number>
                       NUMBER_CELL:Int
                     </number>
                     <gasLimit>
                       _GASLIMIT_CELL
                     </gasLimit>
                     <gasUsed>
                       _GASUSED_CELL
                     </gasUsed>
                     <timestamp>
                       _TIMESTAMP_CELL
                     </timestamp>
                     <extraData>
                       _EXTRADATA_CELL
                     </extraData>
                     <mixHash>
                       _MIXHASH_CELL
                     </mixHash>
                     <blockNonce>
                       _BLOCKNONCE_CELL
                     </blockNonce>
                     <baseFee>
                       _BASEFEE_CELL
                     </baseFee>
                     <withdrawalsRoot>
                       _WITHDRAWALSROOT_CELL
                     </withdrawalsRoot>
                     <ommerBlockHeaders>
                       _OMMERBLOCKHEADERS_CELL
                     </ommerBlockHeaders>
                   </block>
                 </evm>
                 <network>
                   <chainID>
                     _CHAINID_CELL
                   </chainID>
                   <accounts>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       ...
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         0
                       </nonce>
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         0
                       </balance>
                       ...
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         1
                       </nonce>
                     </account> )
                   </accounts>
                   <txOrder>
                     _TXORDER_CELL
                   </txOrder>
                   <txPending>
                     _TXPENDING_CELL
                   </txPending>
                   <messages>
                     _MESSAGES_CELL
                   </messages>
                 </network>
               </ethereum>
             </kevm>
             <cheatcodes>
               <prank>
                 <prevCaller>
                   _PREVCALLER_CELL
                 </prevCaller>
                 <prevOrigin>
                   _PREVORIGIN_CELL
                 </prevOrigin>
                 <newCaller>
                   _NEWCALLER_CELL
                 </newCaller>
                 <newOrigin>
                   _NEWORIGIN_CELL
                 </newOrigin>
                 <active>
                   false
                 </active>
                 <depth>
                   _DEPTH_CELL
                 </depth>
                 <singleCall>
                   false
                 </singleCall>
               </prank>
               <expectedRevert>
                 <isRevertExpected>
                   false
                 </isRevertExpected>
                 <expectedReason>
                   _EXPECTEDREASON_CELL
                 </expectedReason>
                 <expectedDepth>
                   _EXPECTEDDEPTH_CELL
                 </expectedDepth>
               </expectedRevert>
               <expectedOpcode>
                 <isOpcodeExpected>
                   false
                 </isOpcodeExpected>
                 <expectedAddress>
                   _EXPECTEDADDRESS_CELL
                 </expectedAddress>
                 <expectedValue>
                   _EXPECTEDVALUE_CELL
                 </expectedValue>
                 <expectedData>
                   _EXPECTEDDATA_CELL
                 </expectedData>
                 <opcodeType>
                   _OPCODETYPE_CELL
                 </opcodeType>
               </expectedOpcode>
               <expectEmit>
                 <recordEvent>
                   false
                 </recordEvent>
                 <isEventExpected>
                   false
                 </isEventExpected>
                 <checkedTopics>
                   _CHECKEDTOPICS_CELL
                 </checkedTopics>
                 <checkedData>
                   _CHECKEDDATA_CELL
                 </checkedData>
                 <expectedEventAddress>
                   _EXPECTEDEVENTADDRESS_CELL
                 </expectedEventAddress>
               </expectEmit>
               <whitelist>
                 <isCallWhitelistActive>
                   false
                 </isCallWhitelistActive>
                 <isStorageWhitelistActive>
                   false
                 </isStorageWhitelistActive>
                 <addressSet>
                   .Set
                 </addressSet>
                 <storageSlotSet>
                   .Set
                 </storageSlotSet>
               </whitelist>
             </cheatcodes>
           </foundry>
           <generatedCounter>
             _GENERATEDCOUNTER_CELL
           </generatedCounter>
         </generatedTop>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
               ))))))
      [priority(20), label(BASIC-BLOCK-1-TO-3)]
    
    rule [BASIC-BLOCK-3-TO-4]: <generatedTop>
           <foundry>
             <kevm>
               <k>
                 ( #end EVMC_SUCCESS => #halt )
                 ~> #pc [ STOP ]
                 ~> #execute
                 ~> _CONTINUATION
               </k>
               <exit-code>
                 _EXITCODE_CELL
               </exit-code>
               <mode>
                 NORMAL
               </mode>
               <schedule>
                 SHANGHAI
               </schedule>
               <useGas>
                 false
               </useGas>
               <ethereum>
                 <evm>
                   <output>
                     b""
                   </output>
                   <statusCode>
                     ( _STATUSCODE => EVMC_SUCCESS )
                   </statusCode>
                   <callStack>
                     .List
                   </callStack>
                   <interimStates>
                     .List
                   </interimStates>
                   <touchedAccounts>
                     .Set
                   </touchedAccounts>
                   <callState>
                     ...
                     ...
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"\n\x92T\xe4"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( selector ( "setUp()" ) : .WordStack )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80"
                     </localMem>
                     ...
                     ...
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                   </callState>
                   <substate>
                     <selfDestruct>
                       _SELFDESTRUCT_CELL
                     </selfDestruct>
                     <log>
                       .List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       .Set
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                   </substate>
                   <gasPrice>
                     _GASPRICE_CELL
                   </gasPrice>
                   <origin>
                     ORIGIN_ID:Int
                   </origin>
                   <blockhashes>
                     _BLOCKHASHES_CELL
                   </blockhashes>
                   <block>
                     <previousHash>
                       _PREVIOUSHASH_CELL
                     </previousHash>
                     <ommersHash>
                       _OMMERSHASH_CELL
                     </ommersHash>
                     <coinbase>
                       _COINBASE_CELL
                     </coinbase>
                     <stateRoot>
                       _STATEROOT_CELL
                     </stateRoot>
                     <transactionsRoot>
                       _TRANSACTIONSROOT_CELL
                     </transactionsRoot>
                     <receiptsRoot>
                       _RECEIPTSROOT_CELL
                     </receiptsRoot>
                     <logsBloom>
                       _LOGSBLOOM_CELL
                     </logsBloom>
                     <difficulty>
                       _DIFFICULTY_CELL
                     </difficulty>
                     <number>
                       NUMBER_CELL:Int
                     </number>
                     <gasLimit>
                       _GASLIMIT_CELL
                     </gasLimit>
                     <gasUsed>
                       _GASUSED_CELL
                     </gasUsed>
                     <timestamp>
                       _TIMESTAMP_CELL
                     </timestamp>
                     <extraData>
                       _EXTRADATA_CELL
                     </extraData>
                     <mixHash>
                       _MIXHASH_CELL
                     </mixHash>
                     <blockNonce>
                       _BLOCKNONCE_CELL
                     </blockNonce>
                     <baseFee>
                       _BASEFEE_CELL
                     </baseFee>
                     <withdrawalsRoot>
                       _WITHDRAWALSROOT_CELL
                     </withdrawalsRoot>
                     <ommerBlockHeaders>
                       _OMMERBLOCKHEADERS_CELL
                     </ommerBlockHeaders>
                   </block>
                 </evm>
                 <network>
                   <chainID>
                     _CHAINID_CELL
                   </chainID>
                   <accounts>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       ...
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         0
                       </nonce>
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         0
                       </balance>
                       ...
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         1
                       </nonce>
                     </account> )
                   </accounts>
                   <txOrder>
                     _TXORDER_CELL
                   </txOrder>
                   <txPending>
                     _TXPENDING_CELL
                   </txPending>
                   <messages>
                     _MESSAGES_CELL
                   </messages>
                 </network>
               </ethereum>
             </kevm>
             <cheatcodes>
               <prank>
                 <prevCaller>
                   _PREVCALLER_CELL
                 </prevCaller>
                 <prevOrigin>
                   _PREVORIGIN_CELL
                 </prevOrigin>
                 <newCaller>
                   _NEWCALLER_CELL
                 </newCaller>
                 <newOrigin>
                   _NEWORIGIN_CELL
                 </newOrigin>
                 <active>
                   false
                 </active>
                 <depth>
                   _DEPTH_CELL
                 </depth>
                 <singleCall>
                   false
                 </singleCall>
               </prank>
               <expectedRevert>
                 <isRevertExpected>
                   false
                 </isRevertExpected>
                 <expectedReason>
                   _EXPECTEDREASON_CELL
                 </expectedReason>
                 <expectedDepth>
                   _EXPECTEDDEPTH_CELL
                 </expectedDepth>
               </expectedRevert>
               <expectedOpcode>
                 <isOpcodeExpected>
                   false
                 </isOpcodeExpected>
                 <expectedAddress>
                   _EXPECTEDADDRESS_CELL
                 </expectedAddress>
                 <expectedValue>
                   _EXPECTEDVALUE_CELL
                 </expectedValue>
                 <expectedData>
                   _EXPECTEDDATA_CELL
                 </expectedData>
                 <opcodeType>
                   _OPCODETYPE_CELL
                 </opcodeType>
               </expectedOpcode>
               <expectEmit>
                 <recordEvent>
                   false
                 </recordEvent>
                 <isEventExpected>
                   false
                 </isEventExpected>
                 <checkedTopics>
                   _CHECKEDTOPICS_CELL
                 </checkedTopics>
                 <checkedData>
                   _CHECKEDDATA_CELL
                 </checkedData>
                 <expectedEventAddress>
                   _EXPECTEDEVENTADDRESS_CELL
                 </expectedEventAddress>
               </expectEmit>
               <whitelist>
                 <isCallWhitelistActive>
                   false
                 </isCallWhitelistActive>
                 <isStorageWhitelistActive>
                   false
                 </isStorageWhitelistActive>
                 <addressSet>
                   .Set
                 </addressSet>
                 <storageSlotSet>
                   .Set
                 </storageSlotSet>
               </whitelist>
             </cheatcodes>
           </foundry>
           <generatedCounter>
             _GENERATEDCOUNTER_CELL
           </generatedCounter>
         </generatedTop>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
               ))))))
      [priority(20), label(BASIC-BLOCK-3-TO-4)]
    
    rule [BASIC-BLOCK-4-TO-5]: <generatedTop>
           <foundry>
             <kevm>
               <k>
                 #halt
                 ~> ( #pc [ STOP ]
                 ~> #execute => .K )
                 ~> _CONTINUATION
               </k>
               <exit-code>
                 _EXITCODE_CELL
               </exit-code>
               <mode>
                 NORMAL
               </mode>
               <schedule>
                 SHANGHAI
               </schedule>
               <useGas>
                 false
               </useGas>
               <ethereum>
                 <evm>
                   <output>
                     b""
                   </output>
                   <statusCode>
                     EVMC_SUCCESS
                   </statusCode>
                   <callStack>
                     .List
                   </callStack>
                   <interimStates>
                     .List
                   </interimStates>
                   <touchedAccounts>
                     .Set
                   </touchedAccounts>
                   <callState>
                     ...
                     ...
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"\n\x92T\xe4"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( selector ( "setUp()" ) : .WordStack )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80"
                     </localMem>
                     ...
                     ...
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                   </callState>
                   <substate>
                     <selfDestruct>
                       _SELFDESTRUCT_CELL
                     </selfDestruct>
                     <log>
                       .List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       .Set
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                   </substate>
                   <gasPrice>
                     _GASPRICE_CELL
                   </gasPrice>
                   <origin>
                     ORIGIN_ID:Int
                   </origin>
                   <blockhashes>
                     _BLOCKHASHES_CELL
                   </blockhashes>
                   <block>
                     <previousHash>
                       _PREVIOUSHASH_CELL
                     </previousHash>
                     <ommersHash>
                       _OMMERSHASH_CELL
                     </ommersHash>
                     <coinbase>
                       _COINBASE_CELL
                     </coinbase>
                     <stateRoot>
                       _STATEROOT_CELL
                     </stateRoot>
                     <transactionsRoot>
                       _TRANSACTIONSROOT_CELL
                     </transactionsRoot>
                     <receiptsRoot>
                       _RECEIPTSROOT_CELL
                     </receiptsRoot>
                     <logsBloom>
                       _LOGSBLOOM_CELL
                     </logsBloom>
                     <difficulty>
                       _DIFFICULTY_CELL
                     </difficulty>
                     <number>
                       NUMBER_CELL:Int
                     </number>
                     <gasLimit>
                       _GASLIMIT_CELL
                     </gasLimit>
                     <gasUsed>
                       _GASUSED_CELL
                     </gasUsed>
                     <timestamp>
                       _TIMESTAMP_CELL
                     </timestamp>
                     <extraData>
                       _EXTRADATA_CELL
                     </extraData>
                     <mixHash>
                       _MIXHASH_CELL
                     </mixHash>
                     <blockNonce>
                       _BLOCKNONCE_CELL
                     </blockNonce>
                     <baseFee>
                       _BASEFEE_CELL
                     </baseFee>
                     <withdrawalsRoot>
                       _WITHDRAWALSROOT_CELL
                     </withdrawalsRoot>
                     <ommerBlockHeaders>
                       _OMMERBLOCKHEADERS_CELL
                     </ommerBlockHeaders>
                   </block>
                 </evm>
                 <network>
                   <chainID>
                     _CHAINID_CELL
                   </chainID>
                   <accounts>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       ...
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         0
                       </nonce>
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         0
                       </balance>
                       ...
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         1
                       </nonce>
                     </account> )
                   </accounts>
                   <txOrder>
                     _TXORDER_CELL
                   </txOrder>
                   <txPending>
                     _TXPENDING_CELL
                   </txPending>
                   <messages>
                     _MESSAGES_CELL
                   </messages>
                 </network>
               </ethereum>
             </kevm>
             <cheatcodes>
               <prank>
                 <prevCaller>
                   _PREVCALLER_CELL
                 </prevCaller>
                 <prevOrigin>
                   _PREVORIGIN_CELL
                 </prevOrigin>
                 <newCaller>
                   _NEWCALLER_CELL
                 </newCaller>
                 <newOrigin>
                   _NEWORIGIN_CELL
                 </newOrigin>
                 <active>
                   false
                 </active>
                 <depth>
                   _DEPTH_CELL
                 </depth>
                 <singleCall>
                   false
                 </singleCall>
               </prank>
               <expectedRevert>
                 <isRevertExpected>
                   false
                 </isRevertExpected>
                 <expectedReason>
                   _EXPECTEDREASON_CELL
                 </expectedReason>
                 <expectedDepth>
                   _EXPECTEDDEPTH_CELL
                 </expectedDepth>
               </expectedRevert>
               <expectedOpcode>
                 <isOpcodeExpected>
                   false
                 </isOpcodeExpected>
                 <expectedAddress>
                   _EXPECTEDADDRESS_CELL
                 </expectedAddress>
                 <expectedValue>
                   _EXPECTEDVALUE_CELL
                 </expectedValue>
                 <expectedData>
                   _EXPECTEDDATA_CELL
                 </expectedData>
                 <opcodeType>
                   _OPCODETYPE_CELL
                 </opcodeType>
               </expectedOpcode>
               <expectEmit>
                 <recordEvent>
                   false
                 </recordEvent>
                 <isEventExpected>
                   false
                 </isEventExpected>
                 <checkedTopics>
                   _CHECKEDTOPICS_CELL
                 </checkedTopics>
                 <checkedData>
                   _CHECKEDDATA_CELL
                 </checkedData>
                 <expectedEventAddress>
                   _EXPECTEDEVENTADDRESS_CELL
                 </expectedEventAddress>
               </expectEmit>
               <whitelist>
                 <isCallWhitelistActive>
                   false
                 </isCallWhitelistActive>
                 <isStorageWhitelistActive>
                   false
                 </isStorageWhitelistActive>
                 <addressSet>
                   .Set
                 </addressSet>
                 <storageSlotSet>
                   .Set
                 </storageSlotSet>
               </whitelist>
             </cheatcodes>
           </foundry>
           <generatedCounter>
             _GENERATEDCOUNTER_CELL
           </generatedCounter>
         </generatedTop>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
               ))))))
      [priority(20), label(BASIC-BLOCK-4-TO-5)]
    
    rule [BASIC-BLOCK-5-TO-6]: <generatedTop>
           <foundry>
             <kevm>
               <k>
                 ( #halt => #execute )
                 ~> _CONTINUATION
               </k>
               <exit-code>
                 _EXITCODE_CELL
               </exit-code>
               <mode>
                 NORMAL
               </mode>
               <schedule>
                 SHANGHAI
               </schedule>
               <useGas>
                 false
               </useGas>
               <ethereum>
                 <evm>
                   <output>
                     b""
                   </output>
                   <statusCode>
                     ( EVMC_SUCCESS => ?_STATUSCODE )
                   </statusCode>
                   <callStack>
                     .List
                   </callStack>
                   <interimStates>
                     .List
                   </interimStates>
                   <touchedAccounts>
                     .Set
                   </touchedAccounts>
                   <callState>
                     ...
                     ...
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       ( b"\n\x92T\xe4" => b"6\r\xa4\xd2" )
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( ( selector ( "setUp()" ) : .WordStack ) => .WordStack )
                     </wordStack>
                     <localMem>
                       ( b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80" => b"" )
                     </localMem>
                     ...
                     ...
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                   </callState>
                   <substate>
                     <selfDestruct>
                       _SELFDESTRUCT_CELL
                     </selfDestruct>
                     <log>
                       .List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       .Set
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                   </substate>
                   <gasPrice>
                     _GASPRICE_CELL
                   </gasPrice>
                   <origin>
                     ORIGIN_ID:Int
                   </origin>
                   <blockhashes>
                     _BLOCKHASHES_CELL
                   </blockhashes>
                   <block>
                     <previousHash>
                       _PREVIOUSHASH_CELL
                     </previousHash>
                     <ommersHash>
                       _OMMERSHASH_CELL
                     </ommersHash>
                     <coinbase>
                       _COINBASE_CELL
                     </coinbase>
                     <stateRoot>
                       _STATEROOT_CELL
                     </stateRoot>
                     <transactionsRoot>
                       _TRANSACTIONSROOT_CELL
                     </transactionsRoot>
                     <receiptsRoot>
                       _RECEIPTSROOT_CELL
                     </receiptsRoot>
                     <logsBloom>
                       _LOGSBLOOM_CELL
                     </logsBloom>
                     <difficulty>
                       _DIFFICULTY_CELL
                     </difficulty>
                     <number>
                       NUMBER_CELL:Int
                     </number>
                     <gasLimit>
                       _GASLIMIT_CELL
                     </gasLimit>
                     <gasUsed>
                       _GASUSED_CELL
                     </gasUsed>
                     <timestamp>
                       _TIMESTAMP_CELL
                     </timestamp>
                     <extraData>
                       _EXTRADATA_CELL
                     </extraData>
                     <mixHash>
                       _MIXHASH_CELL
                     </mixHash>
                     <blockNonce>
                       _BLOCKNONCE_CELL
                     </blockNonce>
                     <baseFee>
                       _BASEFEE_CELL
                     </baseFee>
                     <withdrawalsRoot>
                       _WITHDRAWALSROOT_CELL
                     </withdrawalsRoot>
                     <ommerBlockHeaders>
                       _OMMERBLOCKHEADERS_CELL
                     </ommerBlockHeaders>
                   </block>
                 </evm>
                 <network>
                   <chainID>
                     _CHAINID_CELL
                   </chainID>
                   <accounts>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       ...
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         0
                       </nonce>
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         0
                       </balance>
                       ...
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         1
                       </nonce>
                     </account> )
                   </accounts>
                   <txOrder>
                     _TXORDER_CELL
                   </txOrder>
                   <txPending>
                     _TXPENDING_CELL
                   </txPending>
                   <messages>
                     _MESSAGES_CELL
                   </messages>
                 </network>
               </ethereum>
             </kevm>
             <cheatcodes>
               <prank>
                 <prevCaller>
                   _PREVCALLER_CELL
                 </prevCaller>
                 <prevOrigin>
                   _PREVORIGIN_CELL
                 </prevOrigin>
                 <newCaller>
                   _NEWCALLER_CELL
                 </newCaller>
                 <newOrigin>
                   _NEWORIGIN_CELL
                 </newOrigin>
                 <active>
                   false
                 </active>
                 <depth>
                   _DEPTH_CELL
                 </depth>
                 <singleCall>
                   false
                 </singleCall>
               </prank>
               <expectedRevert>
                 <isRevertExpected>
                   false
                 </isRevertExpected>
                 <expectedReason>
                   _EXPECTEDREASON_CELL
                 </expectedReason>
                 <expectedDepth>
                   _EXPECTEDDEPTH_CELL
                 </expectedDepth>
               </expectedRevert>
               <expectedOpcode>
                 <isOpcodeExpected>
                   false
                 </isOpcodeExpected>
                 <expectedAddress>
                   _EXPECTEDADDRESS_CELL
                 </expectedAddress>
                 <expectedValue>
                   _EXPECTEDVALUE_CELL
                 </expectedValue>
                 <expectedData>
                   _EXPECTEDDATA_CELL
                 </expectedData>
                 <opcodeType>
                   _OPCODETYPE_CELL
                 </opcodeType>
               </expectedOpcode>
               <expectEmit>
                 <recordEvent>
                   false
                 </recordEvent>
                 <isEventExpected>
                   false
                 </isEventExpected>
                 <checkedTopics>
                   _CHECKEDTOPICS_CELL
                 </checkedTopics>
                 <checkedData>
                   _CHECKEDDATA_CELL
                 </checkedData>
                 <expectedEventAddress>
                   _EXPECTEDEVENTADDRESS_CELL
                 </expectedEventAddress>
               </expectEmit>
               <whitelist>
                 <isCallWhitelistActive>
                   false
                 </isCallWhitelistActive>
                 <isStorageWhitelistActive>
                   false
                 </isStorageWhitelistActive>
                 <addressSet>
                   .Set
                 </addressSet>
                 <storageSlotSet>
                   .Set
                 </storageSlotSet>
               </whitelist>
             </cheatcodes>
           </foundry>
           <generatedCounter>
             _GENERATEDCOUNTER_CELL
           </generatedCounter>
         </generatedTop>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
               ))))))
      [priority(20), label(BASIC-BLOCK-5-TO-6)]
    
    rule [BASIC-BLOCK-6-TO-8]: <generatedTop>
           <foundry>
             <kevm>
               <k>
                 ( .K => #end EVMC_SUCCESS
                 ~> #pc [ STOP ] )
                 ~> #execute
                 ~> _CONTINUATION
               </k>
               <exit-code>
                 _EXITCODE_CELL
               </exit-code>
               <mode>
                 NORMAL
               </mode>
               <schedule>
                 SHANGHAI
               </schedule>
               <useGas>
                 false
               </useGas>
               <ethereum>
                 <evm>
                   <output>
                     b""
                   </output>
                   <statusCode>
                     _STATUSCODE
                   </statusCode>
                   <callStack>
                     .List
                   </callStack>
                   <interimStates>
                     .List
                   </interimStates>
                   <touchedAccounts>
                     .Set
                   </touchedAccounts>
                   <callState>
                     ...
                     ...
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"6\r\xa4\xd2"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( .WordStack => ( selector ( "test_assert_true()" ) : .WordStack ) )
                     </wordStack>
                     <localMem>
                       ( b"" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80" )
                     </localMem>
                     ...
                     ...
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                   </callState>
                   <substate>
                     <selfDestruct>
                       _SELFDESTRUCT_CELL
                     </selfDestruct>
                     <log>
                       .List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       .Set
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                   </substate>
                   <gasPrice>
                     _GASPRICE_CELL
                   </gasPrice>
                   <origin>
                     ORIGIN_ID:Int
                   </origin>
                   <blockhashes>
                     _BLOCKHASHES_CELL
                   </blockhashes>
                   <block>
                     <previousHash>
                       _PREVIOUSHASH_CELL
                     </previousHash>
                     <ommersHash>
                       _OMMERSHASH_CELL
                     </ommersHash>
                     <coinbase>
                       _COINBASE_CELL
                     </coinbase>
                     <stateRoot>
                       _STATEROOT_CELL
                     </stateRoot>
                     <transactionsRoot>
                       _TRANSACTIONSROOT_CELL
                     </transactionsRoot>
                     <receiptsRoot>
                       _RECEIPTSROOT_CELL
                     </receiptsRoot>
                     <logsBloom>
                       _LOGSBLOOM_CELL
                     </logsBloom>
                     <difficulty>
                       _DIFFICULTY_CELL
                     </difficulty>
                     <number>
                       NUMBER_CELL:Int
                     </number>
                     <gasLimit>
                       _GASLIMIT_CELL
                     </gasLimit>
                     <gasUsed>
                       _GASUSED_CELL
                     </gasUsed>
                     <timestamp>
                       _TIMESTAMP_CELL
                     </timestamp>
                     <extraData>
                       _EXTRADATA_CELL
                     </extraData>
                     <mixHash>
                       _MIXHASH_CELL
                     </mixHash>
                     <blockNonce>
                       _BLOCKNONCE_CELL
                     </blockNonce>
                     <baseFee>
                       _BASEFEE_CELL
                     </baseFee>
                     <withdrawalsRoot>
                       _WITHDRAWALSROOT_CELL
                     </withdrawalsRoot>
                     <ommerBlockHeaders>
                       _OMMERBLOCKHEADERS_CELL
                     </ommerBlockHeaders>
                   </block>
                 </evm>
                 <network>
                   <chainID>
                     _CHAINID_CELL
                   </chainID>
                   <accounts>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       ...
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         0
                       </nonce>
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         0
                       </balance>
                       ...
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         1
                       </nonce>
                     </account> )
                   </accounts>
                   <txOrder>
                     _TXORDER_CELL
                   </txOrder>
                   <txPending>
                     _TXPENDING_CELL
                   </txPending>
                   <messages>
                     _MESSAGES_CELL
                   </messages>
                 </network>
               </ethereum>
             </kevm>
             <cheatcodes>
               <prank>
                 <prevCaller>
                   _PREVCALLER_CELL
                 </prevCaller>
                 <prevOrigin>
                   _PREVORIGIN_CELL
                 </prevOrigin>
                 <newCaller>
                   _NEWCALLER_CELL
                 </newCaller>
                 <newOrigin>
                   _NEWORIGIN_CELL
                 </newOrigin>
                 <active>
                   false
                 </active>
                 <depth>
                   _DEPTH_CELL
                 </depth>
                 <singleCall>
                   false
                 </singleCall>
               </prank>
               <expectedRevert>
                 <isRevertExpected>
                   false
                 </isRevertExpected>
                 <expectedReason>
                   _EXPECTEDREASON_CELL
                 </expectedReason>
                 <expectedDepth>
                   _EXPECTEDDEPTH_CELL
                 </expectedDepth>
               </expectedRevert>
               <expectedOpcode>
                 <isOpcodeExpected>
                   false
                 </isOpcodeExpected>
                 <expectedAddress>
                   _EXPECTEDADDRESS_CELL
                 </expectedAddress>
                 <expectedValue>
                   _EXPECTEDVALUE_CELL
                 </expectedValue>
                 <expectedData>
                   _EXPECTEDDATA_CELL
                 </expectedData>
                 <opcodeType>
                   _OPCODETYPE_CELL
                 </opcodeType>
               </expectedOpcode>
               <expectEmit>
                 <recordEvent>
                   false
                 </recordEvent>
                 <isEventExpected>
                   false
                 </isEventExpected>
                 <checkedTopics>
                   _CHECKEDTOPICS_CELL
                 </checkedTopics>
                 <checkedData>
                   _CHECKEDDATA_CELL
                 </checkedData>
                 <expectedEventAddress>
                   _EXPECTEDEVENTADDRESS_CELL
                 </expectedEventAddress>
               </expectEmit>
               <whitelist>
                 <isCallWhitelistActive>
                   false
                 </isCallWhitelistActive>
                 <isStorageWhitelistActive>
                   false
                 </isStorageWhitelistActive>
                 <addressSet>
                   .Set
                 </addressSet>
                 <storageSlotSet>
                   .Set
                 </storageSlotSet>
               </whitelist>
             </cheatcodes>
           </foundry>
           <generatedCounter>
             _GENERATEDCOUNTER_CELL
           </generatedCounter>
         </generatedTop>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
               ))))))
      [priority(20), label(BASIC-BLOCK-6-TO-8)]
    
    rule [BASIC-BLOCK-8-TO-9]: <generatedTop>
           <foundry>
             <kevm>
               <k>
                 ( #end EVMC_SUCCESS => #halt )
                 ~> #pc [ STOP ]
                 ~> #execute
                 ~> _CONTINUATION
               </k>
               <exit-code>
                 _EXITCODE_CELL
               </exit-code>
               <mode>
                 NORMAL
               </mode>
               <schedule>
                 SHANGHAI
               </schedule>
               <useGas>
                 false
               </useGas>
               <ethereum>
                 <evm>
                   <output>
                     b""
                   </output>
                   <statusCode>
                     ( _STATUSCODE => EVMC_SUCCESS )
                   </statusCode>
                   <callStack>
                     .List
                   </callStack>
                   <interimStates>
                     .List
                   </interimStates>
                   <touchedAccounts>
                     .Set
                   </touchedAccounts>
                   <callState>
                     ...
                     ...
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"6\r\xa4\xd2"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( selector ( "test_assert_true()" ) : .WordStack )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80"
                     </localMem>
                     ...
                     ...
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                   </callState>
                   <substate>
                     <selfDestruct>
                       _SELFDESTRUCT_CELL
                     </selfDestruct>
                     <log>
                       .List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       .Set
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                   </substate>
                   <gasPrice>
                     _GASPRICE_CELL
                   </gasPrice>
                   <origin>
                     ORIGIN_ID:Int
                   </origin>
                   <blockhashes>
                     _BLOCKHASHES_CELL
                   </blockhashes>
                   <block>
                     <previousHash>
                       _PREVIOUSHASH_CELL
                     </previousHash>
                     <ommersHash>
                       _OMMERSHASH_CELL
                     </ommersHash>
                     <coinbase>
                       _COINBASE_CELL
                     </coinbase>
                     <stateRoot>
                       _STATEROOT_CELL
                     </stateRoot>
                     <transactionsRoot>
                       _TRANSACTIONSROOT_CELL
                     </transactionsRoot>
                     <receiptsRoot>
                       _RECEIPTSROOT_CELL
                     </receiptsRoot>
                     <logsBloom>
                       _LOGSBLOOM_CELL
                     </logsBloom>
                     <difficulty>
                       _DIFFICULTY_CELL
                     </difficulty>
                     <number>
                       NUMBER_CELL:Int
                     </number>
                     <gasLimit>
                       _GASLIMIT_CELL
                     </gasLimit>
                     <gasUsed>
                       _GASUSED_CELL
                     </gasUsed>
                     <timestamp>
                       _TIMESTAMP_CELL
                     </timestamp>
                     <extraData>
                       _EXTRADATA_CELL
                     </extraData>
                     <mixHash>
                       _MIXHASH_CELL
                     </mixHash>
                     <blockNonce>
                       _BLOCKNONCE_CELL
                     </blockNonce>
                     <baseFee>
                       _BASEFEE_CELL
                     </baseFee>
                     <withdrawalsRoot>
                       _WITHDRAWALSROOT_CELL
                     </withdrawalsRoot>
                     <ommerBlockHeaders>
                       _OMMERBLOCKHEADERS_CELL
                     </ommerBlockHeaders>
                   </block>
                 </evm>
                 <network>
                   <chainID>
                     _CHAINID_CELL
                   </chainID>
                   <accounts>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       ...
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         0
                       </nonce>
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         0
                       </balance>
                       ...
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         1
                       </nonce>
                     </account> )
                   </accounts>
                   <txOrder>
                     _TXORDER_CELL
                   </txOrder>
                   <txPending>
                     _TXPENDING_CELL
                   </txPending>
                   <messages>
                     _MESSAGES_CELL
                   </messages>
                 </network>
               </ethereum>
             </kevm>
             <cheatcodes>
               <prank>
                 <prevCaller>
                   _PREVCALLER_CELL
                 </prevCaller>
                 <prevOrigin>
                   _PREVORIGIN_CELL
                 </prevOrigin>
                 <newCaller>
                   _NEWCALLER_CELL
                 </newCaller>
                 <newOrigin>
                   _NEWORIGIN_CELL
                 </newOrigin>
                 <active>
                   false
                 </active>
                 <depth>
                   _DEPTH_CELL
                 </depth>
                 <singleCall>
                   false
                 </singleCall>
               </prank>
               <expectedRevert>
                 <isRevertExpected>
                   false
                 </isRevertExpected>
                 <expectedReason>
                   _EXPECTEDREASON_CELL
                 </expectedReason>
                 <expectedDepth>
                   _EXPECTEDDEPTH_CELL
                 </expectedDepth>
               </expectedRevert>
               <expectedOpcode>
                 <isOpcodeExpected>
                   false
                 </isOpcodeExpected>
                 <expectedAddress>
                   _EXPECTEDADDRESS_CELL
                 </expectedAddress>
                 <expectedValue>
                   _EXPECTEDVALUE_CELL
                 </expectedValue>
                 <expectedData>
                   _EXPECTEDDATA_CELL
                 </expectedData>
                 <opcodeType>
                   _OPCODETYPE_CELL
                 </opcodeType>
               </expectedOpcode>
               <expectEmit>
                 <recordEvent>
                   false
                 </recordEvent>
                 <isEventExpected>
                   false
                 </isEventExpected>
                 <checkedTopics>
                   _CHECKEDTOPICS_CELL
                 </checkedTopics>
                 <checkedData>
                   _CHECKEDDATA_CELL
                 </checkedData>
                 <expectedEventAddress>
                   _EXPECTEDEVENTADDRESS_CELL
                 </expectedEventAddress>
               </expectEmit>
               <whitelist>
                 <isCallWhitelistActive>
                   false
                 </isCallWhitelistActive>
                 <isStorageWhitelistActive>
                   false
                 </isStorageWhitelistActive>
                 <addressSet>
                   .Set
                 </addressSet>
                 <storageSlotSet>
                   .Set
                 </storageSlotSet>
               </whitelist>
             </cheatcodes>
           </foundry>
           <generatedCounter>
             _GENERATEDCOUNTER_CELL
           </generatedCounter>
         </generatedTop>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
               ))))))
      [priority(20), label(BASIC-BLOCK-8-TO-9)]
    
    rule [BASIC-BLOCK-9-TO-10]: <generatedTop>
           <foundry>
             <kevm>
               <k>
                 #halt
                 ~> ( #pc [ STOP ]
                 ~> #execute => .K )
                 ~> _CONTINUATION
               </k>
               <exit-code>
                 _EXITCODE_CELL
               </exit-code>
               <mode>
                 NORMAL
               </mode>
               <schedule>
                 SHANGHAI
               </schedule>
               <useGas>
                 false
               </useGas>
               <ethereum>
                 <evm>
                   <output>
                     b""
                   </output>
                   <statusCode>
                     EVMC_SUCCESS
                   </statusCode>
                   <callStack>
                     .List
                   </callStack>
                   <interimStates>
                     .List
                   </interimStates>
                   <touchedAccounts>
                     .Set
                   </touchedAccounts>
                   <callState>
                     ...
                     ...
                     <id>
                       728815563385977040452943777879061427756277306518
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"6\r\xa4\xd2"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( selector ( "test_assert_true()" ) : .WordStack )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80"
                     </localMem>
                     ...
                     ...
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       0
                     </callDepth>
                   </callState>
                   <substate>
                     <selfDestruct>
                       _SELFDESTRUCT_CELL
                     </selfDestruct>
                     <log>
                       .List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       .Set
                     </accessedAccounts>
                     <accessedStorage>
                       .Map
                     </accessedStorage>
                   </substate>
                   <gasPrice>
                     _GASPRICE_CELL
                   </gasPrice>
                   <origin>
                     ORIGIN_ID:Int
                   </origin>
                   <blockhashes>
                     _BLOCKHASHES_CELL
                   </blockhashes>
                   <block>
                     <previousHash>
                       _PREVIOUSHASH_CELL
                     </previousHash>
                     <ommersHash>
                       _OMMERSHASH_CELL
                     </ommersHash>
                     <coinbase>
                       _COINBASE_CELL
                     </coinbase>
                     <stateRoot>
                       _STATEROOT_CELL
                     </stateRoot>
                     <transactionsRoot>
                       _TRANSACTIONSROOT_CELL
                     </transactionsRoot>
                     <receiptsRoot>
                       _RECEIPTSROOT_CELL
                     </receiptsRoot>
                     <logsBloom>
                       _LOGSBLOOM_CELL
                     </logsBloom>
                     <difficulty>
                       _DIFFICULTY_CELL
                     </difficulty>
                     <number>
                       NUMBER_CELL:Int
                     </number>
                     <gasLimit>
                       _GASLIMIT_CELL
                     </gasLimit>
                     <gasUsed>
                       _GASUSED_CELL
                     </gasUsed>
                     <timestamp>
                       _TIMESTAMP_CELL
                     </timestamp>
                     <extraData>
                       _EXTRADATA_CELL
                     </extraData>
                     <mixHash>
                       _MIXHASH_CELL
                     </mixHash>
                     <blockNonce>
                       _BLOCKNONCE_CELL
                     </blockNonce>
                     <baseFee>
                       _BASEFEE_CELL
                     </baseFee>
                     <withdrawalsRoot>
                       _WITHDRAWALSROOT_CELL
                     </withdrawalsRoot>
                     <ommerBlockHeaders>
                       _OMMERBLOCKHEADERS_CELL
                     </ommerBlockHeaders>
                   </block>
                 </evm>
                 <network>
                   <chainID>
                     _CHAINID_CELL
                   </chainID>
                   <accounts>
                     ( <account>
                       <acctID>
                         645326474426547203313410069153905908525362434349
                       </acctID>
                       <balance>
                         0
                       </balance>
                       ...
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         0
                       </nonce>
                     </account>
                     <account>
                       <acctID>
                         728815563385977040452943777879061427756277306518
                       </acctID>
                       <balance>
                         0
                       </balance>
                       ...
                       <storage>
                         .Map
                       </storage>
                       <origStorage>
                         .Map
                       </origStorage>
                       <nonce>
                         1
                       </nonce>
                     </account> )
                   </accounts>
                   <txOrder>
                     _TXORDER_CELL
                   </txOrder>
                   <txPending>
                     _TXPENDING_CELL
                   </txPending>
                   <messages>
                     _MESSAGES_CELL
                   </messages>
                 </network>
               </ethereum>
             </kevm>
             <cheatcodes>
               <prank>
                 <prevCaller>
                   _PREVCALLER_CELL
                 </prevCaller>
                 <prevOrigin>
                   _PREVORIGIN_CELL
                 </prevOrigin>
                 <newCaller>
                   _NEWCALLER_CELL
                 </newCaller>
                 <newOrigin>
                   _NEWORIGIN_CELL
                 </newOrigin>
                 <active>
                   false
                 </active>
                 <depth>
                   _DEPTH_CELL
                 </depth>
                 <singleCall>
                   false
                 </singleCall>
               </prank>
               <expectedRevert>
                 <isRevertExpected>
                   false
                 </isRevertExpected>
                 <expectedReason>
                   _EXPECTEDREASON_CELL
                 </expectedReason>
                 <expectedDepth>
                   _EXPECTEDDEPTH_CELL
                 </expectedDepth>
               </expectedRevert>
               <expectedOpcode>
                 <isOpcodeExpected>
                   false
                 </isOpcodeExpected>
                 <expectedAddress>
                   _EXPECTEDADDRESS_CELL
                 </expectedAddress>
                 <expectedValue>
                   _EXPECTEDVALUE_CELL
                 </expectedValue>
                 <expectedData>
                   _EXPECTEDDATA_CELL
                 </expectedData>
                 <opcodeType>
                   _OPCODETYPE_CELL
                 </opcodeType>
               </expectedOpcode>
               <expectEmit>
                 <recordEvent>
                   false
                 </recordEvent>
                 <isEventExpected>
                   false
                 </isEventExpected>
                 <checkedTopics>
                   _CHECKEDTOPICS_CELL
                 </checkedTopics>
                 <checkedData>
                   _CHECKEDDATA_CELL
                 </checkedData>
                 <expectedEventAddress>
                   _EXPECTEDEVENTADDRESS_CELL
                 </expectedEventAddress>
               </expectEmit>
               <whitelist>
                 <isCallWhitelistActive>
                   false
                 </isCallWhitelistActive>
                 <isStorageWhitelistActive>
                   false
                 </isStorageWhitelistActive>
                 <addressSet>
                   .Set
                 </addressSet>
                 <storageSlotSet>
                   .Set
                 </storageSlotSet>
               </whitelist>
             </cheatcodes>
           </foundry>
           <generatedCounter>
             _GENERATEDCOUNTER_CELL
           </generatedCounter>
         </generatedTop>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
               ))))))
      [priority(20), label(BASIC-BLOCK-9-TO-10)]

endmodule
0 Failure nodes. (0 pending and 0 failing)

Join the Runtime Verification Discord server for support: https://discord.com/invite/CurfmXNtbN

Access documentation for KEVM foundry integration at https://docs.runtimeverification.com/kontrol
