
┌─ 1 (root, init)
│   k: #execute ~> CONTINUATION:K
│   pc: 0
│   callDepth: 0
│   statusCode: STATUSCODE:StatusCode
│   src: test/nested/SimpleNested.t.sol:7:11
│   method: test%AssertTest.setUp()
│
│  (549 steps)
├─ 8 (split)
│   k: JUMPI 1594 bool2Word ( KV1_y:Int <=Int KV0_x:Int ) ~> #pc [ JUMPI ] ~> #execute  ...
│   pc: 1590
│   callDepth: 0
│   statusCode: STATUSCODE:StatusCode
│   src: lib/forge-std/lib/ds-test/src/test.sol:48:62
│   method: test%AssertTest.test_revert_branch(uint256,uint256)
┃
┃ (branch)
┣━━┓ subst: .Subst
┃  ┃ constraint:
┃  ┃     KV1_y:Int <=Int KV0_x:Int
┃  │
┃  ├─ 9
┃  │   k: JUMPI 1594 bool2Word ( KV1_y:Int <=Int KV0_x:Int ) ~> #pc [ JUMPI ] ~> #execute  ...
┃  │   pc: 1590
┃  │   callDepth: 0
┃  │   statusCode: STATUSCODE:StatusCode
┃  │   src: lib/forge-std/lib/ds-test/src/test.sol:48:62
┃  │   method: test%AssertTest.test_revert_branch(uint256,uint256)
┃  │
┃  │  (75 steps)
┃  └─ 15 (leaf, terminal)
┃      k: #halt ~> CONTINUATION:K
┃      pc: 2995
┃      callDepth: 0
┃      statusCode: EVMC_REVERT
┃      method: test%AssertTest.test_revert_branch(uint256,uint256)
┃
┗━━┓ subst: .Subst
   ┃ constraint:
   ┃     KV0_x:Int <Int KV1_y:Int
   │
   ├─ 10
   │   k: JUMPI 1594 bool2Word ( KV1_y:Int <=Int KV0_x:Int ) ~> #pc [ JUMPI ] ~> #execute  ...
   │   pc: 1590
   │   callDepth: 0
   │   statusCode: STATUSCODE:StatusCode
   │   src: lib/forge-std/lib/ds-test/src/test.sol:48:62
   │   method: test%AssertTest.test_revert_branch(uint256,uint256)
   │
   │  (40 steps)
   └─ 16 (leaf, pending)
       k: #halt ~> CONTINUATION:K
       pc: 328
       callDepth: 0
       statusCode: EVMC_SUCCESS
       src: lib/kontrol-cheatcodes/src/KontrolCheats.sol:8:8
       method: test%AssertTest.test_revert_branch(uint256,uint256)


┌─ 7 (root, leaf, target, terminal)
│   k: #halt ~> CONTINUATION:K
│   pc: PC_CELL_5d410f2a:Int
│   callDepth: CALLDEPTH_CELL_5d410f2a:Int
│   statusCode: STATUSCODE_FINAL:StatusCode


Node 16:

( <generatedTop>
  <foundry>
    <kevm>
      <k>
        #halt
        ~> CONTINUATION:K
      </k>
      <mode>
        NORMAL
      </mode>
      <schedule>
        CANCUN
      </schedule>
      <useGas>
        false
      </useGas>
      <ethereum>
        <evm>
          <output>
            b""
          </output>
          <statusCode>
            EVMC_SUCCESS
          </statusCode>
          <callStack>
            .List
          </callStack>
          <interimStates>
            .List
          </interimStates>
          <touchedAccounts>
            .Set
          </touchedAccounts>
          <callState>
            <id>
              #address ( FoundryTest )
            </id>
            <caller>
              137122462167341575662000267002353578582749290296
            </caller>
            <callData>
              b"\x8c\x0e\xdd\x8b" +Bytes #buf ( 32 , KV0_x:Int ) +Bytes #buf ( 32 , KV1_y:Int )
            </callData>
            <callValue>
              0
            </callValue>
            <wordStack>
              ( 2349784459 : .WordStack )
            </wordStack>
            <localMem>
              b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80"
            </localMem>
            <memoryUsed>
              0
            </memoryUsed>
            <callGas>
              0
            </callGas>
            <static>
              false
            </static>
            <callDepth>
              0
            </callDepth>
            <codeAddr>
              #address ( FoundryTest )
            </codeAddr>
            ...
          </callState>
          <substate>
            <log>
              .List
            </log>
            <refund>
              0
            </refund>
            <accessedAccounts>
              .Set
            </accessedAccounts>
            <accessedStorage>
              .Map
            </accessedStorage>
            <createdAccounts>
              .Set
            </createdAccounts>
            ...
          </substate>
          <origin>
            137122462167341575662000267002353578582749290296
          </origin>
          <block>
            <number>
              NUMBER_CELL:Int
            </number>
            <timestamp>
              TIMESTAMP_CELL:Int
            </timestamp>
            ...
          </block>
          ...
        </evm>
        <network>
          <chainID>
            1
          </chainID>
          <accounts>
            ( <account>
              <acctID>
                #address ( FoundryCheat )
              </acctID>
              <balance>
                0
              </balance>
              <storage>
                .Map
              </storage>
              <origStorage>
                .Map
              </origStorage>
              <transientStorage>
                .Map
              </transientStorage>
              <nonce>
                0
              </nonce>
              ...
            </account>
            <account>
              <acctID>
                #address ( FoundryTest )
              </acctID>
              <balance>
                maxUInt96
              </balance>
              <storage>
                .Map
              </storage>
              <origStorage>
                .Map
              </origStorage>
              <transientStorage>
                .Map
              </transientStorage>
              <nonce>
                1
              </nonce>
              ...
            </account> )
          </accounts>
          ...
        </network>
      </ethereum>
      ...
    </kevm>
    <stackChecks>
      true
    </stackChecks>
    <cheatcodes>
      <prank>
        <active>
          false
        </active>
        <singleCall>
          false
        </singleCall>
        ...
      </prank>
      <expectedRevert>
        <isRevertExpected>
          false
        </isRevertExpected>
        ...
      </expectedRevert>
      <expectedOpcode>
        <isOpcodeExpected>
          false
        </isOpcodeExpected>
        ...
      </expectedOpcode>
      <expectEmit>
        <recordEvent>
          false
        </recordEvent>
        <isEventExpected>
          false
        </isEventExpected>
        ...
      </expectEmit>
      <whitelist>
        <isCallWhitelistActive>
          false
        </isCallWhitelistActive>
        <allowedCallsList>
          .List
        </allowedCallsList>
        <isStorageWhitelistActive>
          false
        </isStorageWhitelistActive>
        <storageSlotList>
          .List
        </storageSlotList>
      </whitelist>
      <mockCalls>
        .MockCallCellMap
      </mockCalls>
      <mockFunctions>
        .MockFunctionCellMap
      </mockFunctions>
    </cheatcodes>
    <KEVMTracing>
      <activeTracing>
        false
      </activeTracing>
      <traceStorage>
        false
      </traceStorage>
      <traceWordStack>
        false
      </traceWordStack>
      <traceMemory>
        false
      </traceMemory>
      <recordedTrace>
        false
      </recordedTrace>
      <traceData>
        .List
      </traceData>
    </KEVMTracing>
  </foundry>
  ...
</generatedTop>
#And ( { true #Equals 0 <=Int KV0_x:Int }
#And ( { true #Equals 0 <=Int KV1_y:Int }
#And ( { true #Equals KV0_x:Int <Int KV1_y:Int }
#And ( { true #Equals pow24 <Int NUMBER_CELL:Int }
#And ( { true #Equals NUMBER_CELL:Int <Int pow32 }
#And ( { true #Equals 1073741824 <Int TIMESTAMP_CELL:Int }
#And ( { true #Equals TIMESTAMP_CELL:Int <Int 34359738368 }
#And ( { true #Equals KV0_x:Int <Int pow256 }
#And { true #Equals KV1_y:Int <Int pow256 } ) ) ) ) ) ) ) ) )



Node 15:

( <generatedTop>
  <foundry>
    <kevm>
      <k>
        #halt
        ~> CONTINUATION:K
      </k>
      <mode>
        NORMAL
      </mode>
      <schedule>
        CANCUN
      </schedule>
      <useGas>
        false
      </useGas>
      <ethereum>
        <evm>
          <output>
            b"NH{q\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01"
          </output>
          <statusCode>
            EVMC_REVERT
          </statusCode>
          <callStack>
            .List
          </callStack>
          <interimStates>
            .List
          </interimStates>
          <touchedAccounts>
            .Set
          </touchedAccounts>
          <callState>
            <id>
              #address ( FoundryTest )
            </id>
            <caller>
              137122462167341575662000267002353578582749290296
            </caller>
            <callData>
              b"\x8c\x0e\xdd\x8b" +Bytes #buf ( 32 , KV0_x:Int ) +Bytes #buf ( 32 , KV1_y:Int )
            </callData>
            <callValue>
              0
            </callValue>
            <wordStack>
              ( 1602 : ( KV1_y:Int : ( KV0_x:Int : ( 327 : ( 2349784459 : .WordStack ) ) ) ) )
            </wordStack>
            <localMem>
              b"NH{q\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80"
            </localMem>
            <memoryUsed>
              0
            </memoryUsed>
            <callGas>
              0
            </callGas>
            <static>
              false
            </static>
            <callDepth>
              0
            </callDepth>
            <codeAddr>
              #address ( FoundryTest )
            </codeAddr>
            ...
          </callState>
          <substate>
            <log>
              .List
            </log>
            <refund>
              0
            </refund>
            <accessedAccounts>
              .Set
            </accessedAccounts>
            <accessedStorage>
              .Map
            </accessedStorage>
            <createdAccounts>
              .Set
            </createdAccounts>
            ...
          </substate>
          <origin>
            137122462167341575662000267002353578582749290296
          </origin>
          <block>
            <number>
              NUMBER_CELL:Int
            </number>
            <timestamp>
              TIMESTAMP_CELL:Int
            </timestamp>
            ...
          </block>
          ...
        </evm>
        <network>
          <chainID>
            1
          </chainID>
          <accounts>
            ( <account>
              <acctID>
                #address ( FoundryCheat )
              </acctID>
              <balance>
                0
              </balance>
              <storage>
                .Map
              </storage>
              <origStorage>
                .Map
              </origStorage>
              <transientStorage>
                .Map
              </transientStorage>
              <nonce>
                0
              </nonce>
              ...
            </account>
            <account>
              <acctID>
                #address ( FoundryTest )
              </acctID>
              <balance>
                maxUInt96
              </balance>
              <storage>
                .Map
              </storage>
              <origStorage>
                .Map
              </origStorage>
              <transientStorage>
                .Map
              </transientStorage>
              <nonce>
                1
              </nonce>
              ...
            </account> )
          </accounts>
          ...
        </network>
      </ethereum>
      ...
    </kevm>
    <stackChecks>
      true
    </stackChecks>
    <cheatcodes>
      <prank>
        <active>
          false
        </active>
        <singleCall>
          false
        </singleCall>
        ...
      </prank>
      <expectedRevert>
        <isRevertExpected>
          false
        </isRevertExpected>
        ...
      </expectedRevert>
      <expectedOpcode>
        <isOpcodeExpected>
          false
        </isOpcodeExpected>
        ...
      </expectedOpcode>
      <expectEmit>
        <recordEvent>
          false
        </recordEvent>
        <isEventExpected>
          false
        </isEventExpected>
        ...
      </expectEmit>
      <whitelist>
        <isCallWhitelistActive>
          false
        </isCallWhitelistActive>
        <allowedCallsList>
          .List
        </allowedCallsList>
        <isStorageWhitelistActive>
          false
        </isStorageWhitelistActive>
        <storageSlotList>
          .List
        </storageSlotList>
      </whitelist>
      <mockCalls>
        .MockCallCellMap
      </mockCalls>
      <mockFunctions>
        .MockFunctionCellMap
      </mockFunctions>
    </cheatcodes>
    <KEVMTracing>
      <activeTracing>
        false
      </activeTracing>
      <traceStorage>
        false
      </traceStorage>
      <traceWordStack>
        false
      </traceWordStack>
      <traceMemory>
        false
      </traceMemory>
      <recordedTrace>
        false
      </recordedTrace>
      <traceData>
        .List
      </traceData>
    </KEVMTracing>
  </foundry>
  ...
</generatedTop>
#And ( { true #Equals 0 <=Int KV0_x:Int }
#And ( { true #Equals 0 <=Int KV1_y:Int }
#And ( { true #Equals KV1_y:Int <=Int KV0_x:Int }
#And ( { true #Equals pow24 <Int NUMBER_CELL:Int }
#And ( { true #Equals NUMBER_CELL:Int <Int pow32 }
#And ( { true #Equals 1073741824 <Int TIMESTAMP_CELL:Int }
#And ( { true #Equals TIMESTAMP_CELL:Int <Int 34359738368 }
#And ( { true #Equals KV0_x:Int <Int pow256 }
#And { true #Equals KV1_y:Int <Int pow256 } ) ) ) ) ) ) ) ) )



module SUMMARY-TEST%ASSERTTEST.TEST-REVERT-BRANCH(UINT256,UINT256):0
    
    
    rule [BASIC-BLOCK-1-TO-8]: <foundry>
           <kevm>
             <k>
               ( .K => JUMPI 1594 bool2Word ( ?KV1_y:Int <=Int ?KV0_x:Int )
               ~> #pc [ JUMPI ] )
               ~> #execute
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   .Set
                 </touchedAccounts>
                 <callState>
                   <id>
                     #address ( FoundryTest )
                   </id>
                   <caller>
                     137122462167341575662000267002353578582749290296
                   </caller>
                   <callData>
                     ( b"\n\x92T\xe4" => b"\x8c\x0e\xdd\x8b" +Bytes #buf ( 32 , ?KV0_x:Int ) +Bytes #buf ( 32 , ?KV1_y:Int ) )
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( .WordStack => ( ?KV1_y:Int : ( ?KV0_x:Int : ( 327 : ( 2349784459 : .WordStack ) ) ) ) )
                   </wordStack>
                   <localMem>
                     ( b"" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80" )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   <codeAddr>
                     #address ( FoundryTest )
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     .Set
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   <createdAccounts>
                     .Set
                   </createdAccounts>
                   ...
                 </substate>
                 <origin>
                   137122462167341575662000267002353578582749290296
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       #address ( FoundryCheat )
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       #address ( FoundryTest )
                     </acctID>
                     <balance>
                       maxUInt96
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account> )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
               ))))
       ensures ( 0 <=Int ?KV0_x:Int
       andBool ( 0 <=Int ?KV1_y:Int
       andBool ( ?KV0_x:Int <Int pow256
       andBool ( ?KV1_y:Int <Int pow256
               ))))
      [priority(20), label(BASIC-BLOCK-1-TO-8)]
    
    rule [BASIC-BLOCK-9-TO-15]: <foundry>
           <kevm>
             <k>
               ( JUMPI 1594 bool2Word ( KV1_y:Int <=Int KV0_x:Int )
               ~> #pc [ JUMPI ]
               ~> #execute => #halt ~> .K )
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   ( b"" => b"NH{q\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01" )
                 </output>
                 <statusCode>
                   ( _STATUSCODE:StatusCode => EVMC_REVERT )
                 </statusCode>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   .Set
                 </touchedAccounts>
                 <callState>
                   <id>
                     #address ( FoundryTest )
                   </id>
                   <caller>
                     137122462167341575662000267002353578582749290296
                   </caller>
                   <callData>
                     b"\x8c\x0e\xdd\x8b" +Bytes #buf ( 32 , KV0_x:Int ) +Bytes #buf ( 32 , KV1_y:Int )
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( KV1_y:Int => 1602 ) : ( ( KV0_x:Int => KV1_y:Int ) : ( ( 327 => KV0_x:Int ) : ( ( 2349784459 => 327 ) : ( .WordStack => ( 2349784459 : .WordStack ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     ( b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80" => b"NH{q\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80" )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   <codeAddr>
                     #address ( FoundryTest )
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     .Set
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   <createdAccounts>
                     .Set
                   </createdAccounts>
                   ...
                 </substate>
                 <origin>
                   137122462167341575662000267002353578582749290296
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       #address ( FoundryCheat )
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       #address ( FoundryTest )
                     </acctID>
                     <balance>
                       maxUInt96
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account> )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int KV0_x:Int
       andBool ( 0 <=Int KV1_y:Int
       andBool ( KV1_y:Int <=Int KV0_x:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( KV0_x:Int <Int pow256
       andBool ( KV1_y:Int <Int pow256
               )))))))))
      [priority(20), label(BASIC-BLOCK-9-TO-15)]
    
    rule [BASIC-BLOCK-10-TO-16]: <foundry>
           <kevm>
             <k>
               ( JUMPI 1594 bool2Word ( KV1_y:Int <=Int KV0_x:Int )
               ~> #pc [ JUMPI ]
               ~> #execute => #halt ~> .K )
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <statusCode>
                   ( _STATUSCODE:StatusCode => EVMC_SUCCESS )
                 </statusCode>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   .Set
                 </touchedAccounts>
                 <callState>
                   <id>
                     #address ( FoundryTest )
                   </id>
                   <caller>
                     137122462167341575662000267002353578582749290296
                   </caller>
                   <callData>
                     b"\x8c\x0e\xdd\x8b" +Bytes #buf ( 32 , KV0_x:Int ) +Bytes #buf ( 32 , KV1_y:Int )
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( KV1_y:Int => 2349784459 ) : ( ( KV0_x:Int : ( 327 : ( 2349784459 : .WordStack ) ) ) => .WordStack ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   <codeAddr>
                     #address ( FoundryTest )
                   </codeAddr>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     .Set
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   <createdAccounts>
                     .Set
                   </createdAccounts>
                   ...
                 </substate>
                 <origin>
                   137122462167341575662000267002353578582749290296
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       #address ( FoundryCheat )
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       #address ( FoundryTest )
                     </acctID>
                     <balance>
                       maxUInt96
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account> )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int KV0_x:Int
       andBool ( 0 <=Int KV1_y:Int
       andBool ( KV0_x:Int <Int KV1_y:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( KV0_x:Int <Int pow256
       andBool ( KV1_y:Int <Int pow256
               )))))))))
      [priority(20), label(BASIC-BLOCK-10-TO-16)]

endmodule
2 Failure nodes. (1 pending and 1 failing)

Pending nodes:

ID: 16:

Failing nodes:

  Node id: 15
  Failure reason:
    Matching failed.
    The remaining implication is:
    { true #Equals 0 <=Int KV0_x:Int }
    #And { true #Equals 0 <=Int KV1_y:Int }
    #And { true #Equals KV1_y:Int <=Int KV0_x:Int }
    #And { true #Equals pow24 <Int NUMBER_CELL:Int }
    #And { true #Equals NUMBER_CELL:Int <Int pow32 }
    #And { true #Equals 1073741824 <Int TIMESTAMP_CELL:Int }
    #And { true #Equals TIMESTAMP_CELL:Int <Int 34359738368 }
    #And { true #Equals KV0_x:Int <Int pow256 }
    #And { true #Equals KV1_y:Int <Int pow256 } #Implies { true #Equals foundry_success ( ... statusCode: EVMC_REVERT , failed: #lookup ( .Map , 46308022326495007027972728677917914892729792999299745830475596687180801507328 ) , revertExpected: false , opcodeExpected: false , recordEventExpected: false , eventExpected: false ) }
  Path condition:
    { true #Equals KV1_y:Int <=Int KV0_x:Int }
  Model:
    KV0_x = 0
    KV1_y = 0
    NUMBER_CELL = 16777217
    TIMESTAMP_CELL = 1073741825

Join the Runtime Verification Discord server (https://discord.com/invite/CurfmXNtbN) or Telegram group (https://t.me/rv_kontrol) for support.

Access documentation for Kontrol at https://docs.runtimeverification.com/kontrol