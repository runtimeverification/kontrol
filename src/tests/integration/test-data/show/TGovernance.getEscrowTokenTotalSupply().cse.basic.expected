
┌─ 1 (root, init)
│   k: #execute ~> CONTINUATION:K
│   pc: 0
│   callDepth: CALLDEPTH_CELL:Int
│   statusCode: STATUSCODE:StatusCode
│   src: test/nested/SimpleNested.t.sol:7:11
│   method: test%TGovernance.getEscrowTokenTotalSupply()
│
│  (296 steps)
├─ 3
│   k: CALL 0 C_TGOVERNANCE_ESCROW_ID:Int 0 128 4 128 32 ~> #pc [ CALL ] ~> #execute ~> ...
│   pc: 138
│   callDepth: CALLDEPTH_CELL:Int
│   statusCode: STATUSCODE:StatusCode
│   src: test/nested/SimpleNested.t.sol:7:11
│   method: test%TGovernance.getEscrowTokenTotalSupply()
│
│  (1 step)
├─ 4
│   k: #accessAccounts C_TGOVERNANCE_ESCROW_ID:Int ~> #checkCall C_TGOVERNANCE_ID:Int 0 ...
│   pc: 138
│   callDepth: CALLDEPTH_CELL:Int
│   statusCode: STATUSCODE:StatusCode
│   src: test/nested/SimpleNested.t.sol:7:11
│   method: test%TGovernance.getEscrowTokenTotalSupply()
│
│  (3 steps)
├─ 5 (split)
│   k: #checkDepthExceeded ~> #call C_TGOVERNANCE_ID:Int C_TGOVERNANCE_ESCROW_ID:Int C_ ...
│   pc: 138
│   callDepth: CALLDEPTH_CELL:Int
│   statusCode: STATUSCODE:StatusCode
│   src: test/nested/SimpleNested.t.sol:7:11
│   method: test%TGovernance.getEscrowTokenTotalSupply()
┃
┃ (branch)
┣━━┓ subst: .Subst
┃  ┃ constraint:
┃  ┃     CALLDEPTH_CELL:Int <Int 1024
┃  │
┃  ├─ 6
┃  │   k: #checkDepthExceeded ~> #call C_TGOVERNANCE_ID:Int C_TGOVERNANCE_ESCROW_ID:Int C_ ...
┃  │   pc: 138
┃  │   callDepth: CALLDEPTH_CELL:Int
┃  │   statusCode: STATUSCODE:StatusCode
┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  │   method: test%TGovernance.getEscrowTokenTotalSupply()
┃  │
┃  │  (15 steps)
┃  ├─ 8
┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_ID:Int , SHANGHAI ) ~> #execute ~> #return  ...
┃  │   pc: 0
┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  │   statusCode: STATUSCODE:StatusCode
┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  │   method: test%TEscrow.getTokenTotalSupply()
┃  │
┃  │  (1 step)
┃  ├─ 10
┃  │   k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> CONTINUATION:K
┃  │   pc: 0
┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  │   statusCode: STATUSCODE:StatusCode
┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  │   method: test%TEscrow.getTokenTotalSupply()
┃  │
┃  │  (3 steps)
┃  ├─ 12 (split)
┃  │   k: #checkDepthExceeded ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE_ESCROW_TO ...
┃  │   pc: 143
┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  │   statusCode: STATUSCODE:StatusCode
┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  │   method: test%TEscrow.getTokenTotalSupply()
┃  ┃
┃  ┃ (branch)
┃  ┣━━┓ subst: .Subst
┃  ┃  ┃ constraint:
┃  ┃  ┃     CALLDEPTH_CELL:Int <Int 1023
┃  ┃  ┃     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ID:Int )
┃  ┃  ┃     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
┃  ┃  │
┃  ┃  ├─ 14
┃  ┃  │   k: #checkDepthExceeded ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE_ESCROW_TO ...
┃  ┃  │   pc: 143
┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  │   method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┃ (1 step)
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 41
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 380 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 42
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 381 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 43
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 382 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 44
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 383 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 45
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 384 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 46
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 385 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 47
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 386 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 48
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 387 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 49
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 388 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 50
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 389 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 51
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 390 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 52
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 391 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┗━━┓
┃  ┃     │
┃  ┃     ├─ 53
┃  ┃     │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃     │   pc: 0
┃  ┃     │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃     │   statusCode: STATUSCODE:StatusCode
┃  ┃     │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃     │   method: test%TToken.getTotalSupply()
┃  ┃     │
┃  ┃     │  (1 step)
┃  ┃     └─ 392 (leaf, pending)
┃  ┃         k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃         pc: 0
┃  ┃         callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃         statusCode: STATUSCODE:StatusCode
┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
┃  ┃         method: test%TToken.getTotalSupply()
┃  ┃
┃  ┣━━┓ subst: .Subst
┃  ┃  ┃ constraint:
┃  ┃  ┃     CALLDEPTH_CELL:Int <Int 1023
┃  ┃  ┃     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
┃  ┃  │
┃  ┃  ├─ 15
┃  ┃  │   k: #checkDepthExceeded ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE_ESCROW_TO ...
┃  ┃  │   pc: 143
┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  │   method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┃ (1 step)
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 54
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 393 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 55
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 394 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 56
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 395 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 57
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 396 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 58
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 397 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 59
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 398 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 60
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 399 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 61
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 400 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 62
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 401 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 63
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 402 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 64
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 403 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 65
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 404 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┗━━┓
┃  ┃     │
┃  ┃     ├─ 66
┃  ┃     │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃     │   pc: 0
┃  ┃     │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃     │   statusCode: STATUSCODE:StatusCode
┃  ┃     │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃     │   method: test%TToken.getTotalSupply()
┃  ┃     │
┃  ┃     │  (1 step)
┃  ┃     └─ 405 (leaf, pending)
┃  ┃         k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃         pc: 0
┃  ┃         callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃         statusCode: STATUSCODE:StatusCode
┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
┃  ┃         method: test%TToken.getTotalSupply()
┃  ┃
┃  ┣━━┓ subst: .Subst
┃  ┃  ┃ constraint:
┃  ┃  ┃     CALLDEPTH_CELL:Int <Int 1023
┃  ┃  ┃     ACCESSEDACCOUNTS_CELL:Set ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
┃  ┃  ┃     ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
┃  ┃  │
┃  ┃  ├─ 16
┃  ┃  │   k: #checkDepthExceeded ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE_ESCROW_TO ...
┃  ┃  │   pc: 143
┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  │   method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┃ (1 step)
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 67
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 406 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 68
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 407 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 69
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 408 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 70
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 409 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 71
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 410 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 72
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 411 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 73
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 412 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 74
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 413 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 75
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 414 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 76
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 415 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 77
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 416 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 78
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 417 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┗━━┓
┃  ┃     │
┃  ┃     ├─ 79
┃  ┃     │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃     │   pc: 0
┃  ┃     │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃     │   statusCode: STATUSCODE:StatusCode
┃  ┃     │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃     │   method: test%TToken.getTotalSupply()
┃  ┃     │
┃  ┃     │  (1 step)
┃  ┃     └─ 418 (leaf, pending)
┃  ┃         k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃         pc: 0
┃  ┃         callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃         statusCode: STATUSCODE:StatusCode
┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
┃  ┃         method: test%TToken.getTotalSupply()
┃  ┃
┃  ┣━━┓ subst: .Subst
┃  ┃  ┃ constraint:
┃  ┃  ┃     CALLDEPTH_CELL:Int <Int 1023
┃  ┃  ┃     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ==K ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
┃  ┃  │
┃  ┃  ├─ 17
┃  ┃  │   k: #checkDepthExceeded ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE_ESCROW_TO ...
┃  ┃  │   pc: 143
┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  │   method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┃ (1 step)
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 80
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 419 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 81
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 420 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 82
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 421 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 83
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 422 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 84
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 423 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 85
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 424 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 86
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 425 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 87
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 426 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 88
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 427 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 89
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 428 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 90
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 429 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 91
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 430 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┗━━┓
┃  ┃     │
┃  ┃     ├─ 92
┃  ┃     │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃     │   pc: 0
┃  ┃     │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃     │   statusCode: STATUSCODE:StatusCode
┃  ┃     │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃     │   method: test%TToken.getTotalSupply()
┃  ┃     │
┃  ┃     │  (1 step)
┃  ┃     └─ 431 (leaf, pending)
┃  ┃         k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃         pc: 0
┃  ┃         callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃         statusCode: STATUSCODE:StatusCode
┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
┃  ┃         method: test%TToken.getTotalSupply()
┃  ┃
┃  ┣━━┓ subst: .Subst
┃  ┃  ┃ constraint:
┃  ┃  ┃     CALLDEPTH_CELL:Int <Int 1023
┃  ┃  ┃     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
┃  ┃  │
┃  ┃  ├─ 18
┃  ┃  │   k: #checkDepthExceeded ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE_ESCROW_TO ...
┃  ┃  │   pc: 143
┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  │   method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┃ (1 step)
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 93
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 432 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 94
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 433 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 95
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 434 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 96
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 435 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 97
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 436 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 98
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 437 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 99
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 438 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 100
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 439 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  ├─ 101
┃  ┃  ┃  │   k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃  │   pc: 0
┃  ┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃  │   method: test%TToken.getTotalSupply()
┃  ┃  ┃  │
┃  ┃  ┃  │  (1 step)
┃  ┃  ┃  └─ 440 (leaf, pending)
┃  ┃  ┃      k: #execute ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> #return 128 32 ~> #pc  ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 102 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 103 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 104 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┗━━┓
┃  ┃     │
┃  ┃     └─ 105 (leaf, pending)
┃  ┃         k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃         pc: 0
┃  ┃         callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃         statusCode: STATUSCODE:StatusCode
┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
┃  ┃         method: test%TToken.getTotalSupply()
┃  ┃
┃  ┣━━┓ subst: .Subst
┃  ┃  ┃ constraint:
┃  ┃  ┃     CALLDEPTH_CELL:Int <Int 1023
┃  ┃  ┃     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ID:Int )
┃  ┃  ┃     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
┃  ┃  │
┃  ┃  ├─ 19
┃  ┃  │   k: #checkDepthExceeded ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE_ESCROW_TO ...
┃  ┃  │   pc: 143
┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  │   method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┃ (1 step)
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 106 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 107 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 108 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 109 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 110 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 111 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 112 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 113 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 114 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 115 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 116 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 117 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┗━━┓
┃  ┃     │
┃  ┃     └─ 118 (leaf, pending)
┃  ┃         k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃         pc: 0
┃  ┃         callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃         statusCode: STATUSCODE:StatusCode
┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
┃  ┃         method: test%TToken.getTotalSupply()
┃  ┃
┃  ┣━━┓ subst: .Subst
┃  ┃  ┃ constraint:
┃  ┃  ┃     CALLDEPTH_CELL:Int <Int 1023
┃  ┃  ┃     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ID:Int )
┃  ┃  │
┃  ┃  ├─ 20
┃  ┃  │   k: #checkDepthExceeded ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE_ESCROW_TO ...
┃  ┃  │   pc: 143
┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  │   method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┃ (1 step)
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 119 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 120 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 121 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 122 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 123 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 124 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 125 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 126 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 127 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 128 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 129 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 130 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┗━━┓
┃  ┃     │
┃  ┃     └─ 131 (leaf, pending)
┃  ┃         k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃         pc: 0
┃  ┃         callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃         statusCode: STATUSCODE:StatusCode
┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
┃  ┃         method: test%TToken.getTotalSupply()
┃  ┃
┃  ┣━━┓ subst: .Subst
┃  ┃  ┃ constraint:
┃  ┃  ┃     CALLDEPTH_CELL:Int <Int 1023
┃  ┃  ┃     ACCESSEDACCOUNTS_CELL:Set ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
┃  ┃  ┃     ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ID:Int )
┃  ┃  │
┃  ┃  ├─ 21
┃  ┃  │   k: #checkDepthExceeded ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE_ESCROW_TO ...
┃  ┃  │   pc: 143
┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  │   method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┃ (1 step)
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 132 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 133 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 134 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 135 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 136 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 137 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 138 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 139 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 140 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 141 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 142 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 143 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┗━━┓
┃  ┃     │
┃  ┃     └─ 144 (leaf, pending)
┃  ┃         k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃         pc: 0
┃  ┃         callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃         statusCode: STATUSCODE:StatusCode
┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
┃  ┃         method: test%TToken.getTotalSupply()
┃  ┃
┃  ┣━━┓ subst: .Subst
┃  ┃  ┃ constraint:
┃  ┃  ┃     CALLDEPTH_CELL:Int <Int 1023
┃  ┃  ┃     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ==K ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ID:Int )
┃  ┃  │
┃  ┃  ├─ 22
┃  ┃  │   k: #checkDepthExceeded ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE_ESCROW_TO ...
┃  ┃  │   pc: 143
┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  │   method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┃ (1 step)
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 145 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 146 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 147 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 148 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 149 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 150 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 151 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 152 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 153 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 154 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 155 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 156 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┗━━┓
┃  ┃     │
┃  ┃     └─ 157 (leaf, pending)
┃  ┃         k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃         pc: 0
┃  ┃         callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃         statusCode: STATUSCODE:StatusCode
┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
┃  ┃         method: test%TToken.getTotalSupply()
┃  ┃
┃  ┣━━┓ subst: .Subst
┃  ┃  ┃ constraint:
┃  ┃  ┃     CALLDEPTH_CELL:Int <Int 1023
┃  ┃  ┃     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ID:Int )
┃  ┃  │
┃  ┃  ├─ 23
┃  ┃  │   k: #checkDepthExceeded ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE_ESCROW_TO ...
┃  ┃  │   pc: 143
┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  │   method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┃ (1 step)
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 158 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 159 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 160 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 161 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 162 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 163 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 164 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 165 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 166 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 167 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 168 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 169 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┗━━┓
┃  ┃     │
┃  ┃     └─ 170 (leaf, pending)
┃  ┃         k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃         pc: 0
┃  ┃         callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃         statusCode: STATUSCODE:StatusCode
┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
┃  ┃         method: test%TToken.getTotalSupply()
┃  ┃
┃  ┣━━┓ subst: .Subst
┃  ┃  ┃ constraint:
┃  ┃  ┃     CALLDEPTH_CELL:Int <Int 1023
┃  ┃  ┃     ACCESSEDACCOUNTS_CELL:Set ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
┃  ┃  │
┃  ┃  ├─ 24
┃  ┃  │   k: #checkDepthExceeded ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE_ESCROW_TO ...
┃  ┃  │   pc: 143
┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  │   method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┃ (1 step)
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 171 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 172 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 173 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 174 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 175 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 176 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 177 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 178 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 179 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 180 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 181 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 182 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┗━━┓
┃  ┃     │
┃  ┃     └─ 183 (leaf, pending)
┃  ┃         k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃         pc: 0
┃  ┃         callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃         statusCode: STATUSCODE:StatusCode
┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
┃  ┃         method: test%TToken.getTotalSupply()
┃  ┃
┃  ┣━━┓ subst: .Subst
┃  ┃  ┃ constraint:
┃  ┃  ┃     CALLDEPTH_CELL:Int <Int 1023
┃  ┃  │
┃  ┃  ├─ 25
┃  ┃  │   k: #checkDepthExceeded ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE_ESCROW_TO ...
┃  ┃  │   pc: 143
┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  │   method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┃ (1 step)
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 184 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 185 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 186 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 187 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 188 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 189 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 190 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 191 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 192 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 193 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 194 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 195 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┗━━┓
┃  ┃     │
┃  ┃     └─ 196 (leaf, pending)
┃  ┃         k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃         pc: 0
┃  ┃         callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃         statusCode: STATUSCODE:StatusCode
┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
┃  ┃         method: test%TToken.getTotalSupply()
┃  ┃
┃  ┣━━┓ subst: .Subst
┃  ┃  ┃ constraint:
┃  ┃  ┃     CALLDEPTH_CELL:Int <Int 1023
┃  ┃  │
┃  ┃  ├─ 26
┃  ┃  │   k: #checkDepthExceeded ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE_ESCROW_TO ...
┃  ┃  │   pc: 143
┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  │   method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┃ (1 step)
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 197 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 198 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 199 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 200 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 201 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 202 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 203 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 204 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 205 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 206 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 207 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 208 (leaf, pending)
┃  ┃  ┃      k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃  ┃      pc: 0
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TToken.getTotalSupply()
┃  ┃  ┃
┃  ┃  ┗━━┓
┃  ┃     │
┃  ┃     └─ 209 (leaf, pending)
┃  ┃         k: #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> #execute ~> #r ...
┃  ┃         pc: 0
┃  ┃         callDepth: ( CALLDEPTH_CELL:Int +Int 2 )
┃  ┃         statusCode: STATUSCODE:StatusCode
┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
┃  ┃         method: test%TToken.getTotalSupply()
┃  ┃
┃  ┣━━┓ subst: .Subst
┃  ┃  ┃ constraint:
┃  ┃  ┃     1023 <=Int CALLDEPTH_CELL:Int
┃  ┃  ┃     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ID:Int )
┃  ┃  ┃     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
┃  ┃  │
┃  ┃  ├─ 27
┃  ┃  │   k: #checkDepthExceeded ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE_ESCROW_TO ...
┃  ┃  │   pc: 143
┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  │   method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┃ (1 step)
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 210 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 211 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 212 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 213 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 214 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 215 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 216 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 217 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 218 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 219 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 220 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 221 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┗━━┓
┃  ┃     │
┃  ┃     └─ 222 (leaf, pending)
┃  ┃         k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃         pc: 143
┃  ┃         callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃         statusCode: STATUSCODE:StatusCode
┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
┃  ┃         method: test%TEscrow.getTokenTotalSupply()
┃  ┃
┃  ┣━━┓ subst: .Subst
┃  ┃  ┃ constraint:
┃  ┃  ┃     1023 <=Int CALLDEPTH_CELL:Int
┃  ┃  ┃     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
┃  ┃  │
┃  ┃  ├─ 28
┃  ┃  │   k: #checkDepthExceeded ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE_ESCROW_TO ...
┃  ┃  │   pc: 143
┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  │   method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┃ (1 step)
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 223 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 224 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 225 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 226 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 227 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 228 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 229 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 230 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 231 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 232 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 233 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 234 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┗━━┓
┃  ┃     │
┃  ┃     └─ 235 (leaf, pending)
┃  ┃         k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃         pc: 143
┃  ┃         callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃         statusCode: STATUSCODE:StatusCode
┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
┃  ┃         method: test%TEscrow.getTokenTotalSupply()
┃  ┃
┃  ┣━━┓ subst: .Subst
┃  ┃  ┃ constraint:
┃  ┃  ┃     1023 <=Int CALLDEPTH_CELL:Int
┃  ┃  ┃     ACCESSEDACCOUNTS_CELL:Set ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
┃  ┃  ┃     ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
┃  ┃  │
┃  ┃  ├─ 29
┃  ┃  │   k: #checkDepthExceeded ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE_ESCROW_TO ...
┃  ┃  │   pc: 143
┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  │   method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┃ (1 step)
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 236 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 237 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 238 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 239 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 240 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 241 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 242 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 243 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 244 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 245 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 246 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 247 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┗━━┓
┃  ┃     │
┃  ┃     └─ 248 (leaf, pending)
┃  ┃         k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃         pc: 143
┃  ┃         callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃         statusCode: STATUSCODE:StatusCode
┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
┃  ┃         method: test%TEscrow.getTokenTotalSupply()
┃  ┃
┃  ┣━━┓ subst: .Subst
┃  ┃  ┃ constraint:
┃  ┃  ┃     1023 <=Int CALLDEPTH_CELL:Int
┃  ┃  ┃     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ==K ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
┃  ┃  │
┃  ┃  ├─ 30
┃  ┃  │   k: #checkDepthExceeded ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE_ESCROW_TO ...
┃  ┃  │   pc: 143
┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  │   method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┃ (1 step)
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 249 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 250 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 251 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 252 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 253 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 254 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 255 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 256 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 257 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 258 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 259 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 260 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┗━━┓
┃  ┃     │
┃  ┃     └─ 261 (leaf, pending)
┃  ┃         k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃         pc: 143
┃  ┃         callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃         statusCode: STATUSCODE:StatusCode
┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
┃  ┃         method: test%TEscrow.getTokenTotalSupply()
┃  ┃
┃  ┣━━┓ subst: .Subst
┃  ┃  ┃ constraint:
┃  ┃  ┃     1023 <=Int CALLDEPTH_CELL:Int
┃  ┃  ┃     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
┃  ┃  │
┃  ┃  ├─ 31
┃  ┃  │   k: #checkDepthExceeded ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE_ESCROW_TO ...
┃  ┃  │   pc: 143
┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  │   method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┃ (1 step)
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 262 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 263 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 264 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 265 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 266 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 267 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 268 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 269 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 270 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 271 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 272 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 273 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┗━━┓
┃  ┃     │
┃  ┃     └─ 274 (leaf, pending)
┃  ┃         k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃         pc: 143
┃  ┃         callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃         statusCode: STATUSCODE:StatusCode
┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
┃  ┃         method: test%TEscrow.getTokenTotalSupply()
┃  ┃
┃  ┣━━┓ subst: .Subst
┃  ┃  ┃ constraint:
┃  ┃  ┃     1023 <=Int CALLDEPTH_CELL:Int
┃  ┃  ┃     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ID:Int )
┃  ┃  ┃     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
┃  ┃  │
┃  ┃  ├─ 32
┃  ┃  │   k: #checkDepthExceeded ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE_ESCROW_TO ...
┃  ┃  │   pc: 143
┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  │   method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┃ (1 step)
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 275 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 276 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 277 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 278 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 279 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 280 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 281 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 282 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 283 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 284 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 285 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 286 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┗━━┓
┃  ┃     │
┃  ┃     └─ 287 (leaf, pending)
┃  ┃         k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃         pc: 143
┃  ┃         callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃         statusCode: STATUSCODE:StatusCode
┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
┃  ┃         method: test%TEscrow.getTokenTotalSupply()
┃  ┃
┃  ┣━━┓ subst: .Subst
┃  ┃  ┃ constraint:
┃  ┃  ┃     1023 <=Int CALLDEPTH_CELL:Int
┃  ┃  ┃     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ID:Int )
┃  ┃  │
┃  ┃  ├─ 33
┃  ┃  │   k: #checkDepthExceeded ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE_ESCROW_TO ...
┃  ┃  │   pc: 143
┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  │   method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┃ (1 step)
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 288 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 289 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 290 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 291 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 292 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 293 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 294 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 295 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 296 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 297 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 298 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 299 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┗━━┓
┃  ┃     │
┃  ┃     └─ 300 (leaf, pending)
┃  ┃         k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃         pc: 143
┃  ┃         callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃         statusCode: STATUSCODE:StatusCode
┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
┃  ┃         method: test%TEscrow.getTokenTotalSupply()
┃  ┃
┃  ┣━━┓ subst: .Subst
┃  ┃  ┃ constraint:
┃  ┃  ┃     1023 <=Int CALLDEPTH_CELL:Int
┃  ┃  ┃     ACCESSEDACCOUNTS_CELL:Set ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
┃  ┃  ┃     ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ID:Int )
┃  ┃  │
┃  ┃  ├─ 34
┃  ┃  │   k: #checkDepthExceeded ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE_ESCROW_TO ...
┃  ┃  │   pc: 143
┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  │   method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┃ (1 step)
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 301 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 302 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 303 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 304 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 305 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 306 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 307 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 308 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 309 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 310 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 311 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 312 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┗━━┓
┃  ┃     │
┃  ┃     └─ 313 (leaf, pending)
┃  ┃         k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃         pc: 143
┃  ┃         callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃         statusCode: STATUSCODE:StatusCode
┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
┃  ┃         method: test%TEscrow.getTokenTotalSupply()
┃  ┃
┃  ┣━━┓ subst: .Subst
┃  ┃  ┃ constraint:
┃  ┃  ┃     1023 <=Int CALLDEPTH_CELL:Int
┃  ┃  ┃     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ==K ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ID:Int )
┃  ┃  │
┃  ┃  ├─ 35
┃  ┃  │   k: #checkDepthExceeded ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE_ESCROW_TO ...
┃  ┃  │   pc: 143
┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  │   method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┃ (1 step)
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 314 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 315 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 316 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 317 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 318 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 319 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 320 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 321 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 322 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 323 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 324 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 325 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┗━━┓
┃  ┃     │
┃  ┃     └─ 326 (leaf, pending)
┃  ┃         k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃         pc: 143
┃  ┃         callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃         statusCode: STATUSCODE:StatusCode
┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
┃  ┃         method: test%TEscrow.getTokenTotalSupply()
┃  ┃
┃  ┣━━┓ subst: .Subst
┃  ┃  ┃ constraint:
┃  ┃  ┃     1023 <=Int CALLDEPTH_CELL:Int
┃  ┃  ┃     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ID:Int )
┃  ┃  │
┃  ┃  ├─ 36
┃  ┃  │   k: #checkDepthExceeded ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE_ESCROW_TO ...
┃  ┃  │   pc: 143
┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  │   method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┃ (1 step)
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 327 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 328 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 329 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 330 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 331 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 332 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 333 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 334 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 335 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 336 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 337 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 338 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┗━━┓
┃  ┃     │
┃  ┃     └─ 339 (leaf, pending)
┃  ┃         k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃         pc: 143
┃  ┃         callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃         statusCode: STATUSCODE:StatusCode
┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
┃  ┃         method: test%TEscrow.getTokenTotalSupply()
┃  ┃
┃  ┣━━┓ subst: .Subst
┃  ┃  ┃ constraint:
┃  ┃  ┃     1023 <=Int CALLDEPTH_CELL:Int
┃  ┃  ┃     ACCESSEDACCOUNTS_CELL:Set ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
┃  ┃  │
┃  ┃  ├─ 37
┃  ┃  │   k: #checkDepthExceeded ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE_ESCROW_TO ...
┃  ┃  │   pc: 143
┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  │   method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┃ (1 step)
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 340 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 341 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 342 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 343 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 344 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 345 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 346 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 347 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 348 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 349 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 350 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 351 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┗━━┓
┃  ┃     │
┃  ┃     └─ 352 (leaf, pending)
┃  ┃         k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃         pc: 143
┃  ┃         callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃         statusCode: STATUSCODE:StatusCode
┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
┃  ┃         method: test%TEscrow.getTokenTotalSupply()
┃  ┃
┃  ┣━━┓ subst: .Subst
┃  ┃  ┃ constraint:
┃  ┃  ┃     1023 <=Int CALLDEPTH_CELL:Int
┃  ┃  │
┃  ┃  ├─ 38
┃  ┃  │   k: #checkDepthExceeded ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE_ESCROW_TO ...
┃  ┃  │   pc: 143
┃  ┃  │   callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  │   statusCode: STATUSCODE:StatusCode
┃  ┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  │   method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┃ (1 step)
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 353 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 354 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 355 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 356 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 357 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 358 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 359 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 360 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 361 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 362 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 363 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┣━━┓
┃  ┃  ┃  │
┃  ┃  ┃  └─ 364 (leaf, pending)
┃  ┃  ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃  ┃      pc: 143
┃  ┃  ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃  ┃      statusCode: STATUSCODE:StatusCode
┃  ┃  ┃      src: test/nested/SimpleNested.t.sol:7:11
┃  ┃  ┃      method: test%TEscrow.getTokenTotalSupply()
┃  ┃  ┃
┃  ┃  ┗━━┓
┃  ┃     │
┃  ┃     └─ 365 (leaf, pending)
┃  ┃         k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃  ┃         pc: 143
┃  ┃         callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃  ┃         statusCode: STATUSCODE:StatusCode
┃  ┃         src: test/nested/SimpleNested.t.sol:7:11
┃  ┃         method: test%TEscrow.getTokenTotalSupply()
┃  ┃
┃  ┗━━┓ subst: .Subst
┃     ┃ constraint:
┃     ┃     1023 <=Int CALLDEPTH_CELL:Int
┃     │
┃     ├─ 39
┃     │   k: #checkDepthExceeded ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE_ESCROW_TO ...
┃     │   pc: 143
┃     │   callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃     │   statusCode: STATUSCODE:StatusCode
┃     │   src: test/nested/SimpleNested.t.sol:7:11
┃     │   method: test%TEscrow.getTokenTotalSupply()
┃     ┃
┃     ┃ (1 step)
┃     ┣━━┓
┃     ┃  │
┃     ┃  └─ 366 (leaf, pending)
┃     ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃     ┃      pc: 143
┃     ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃     ┃      statusCode: STATUSCODE:StatusCode
┃     ┃      src: test/nested/SimpleNested.t.sol:7:11
┃     ┃      method: test%TEscrow.getTokenTotalSupply()
┃     ┃
┃     ┣━━┓
┃     ┃  │
┃     ┃  └─ 367 (leaf, pending)
┃     ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃     ┃      pc: 143
┃     ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃     ┃      statusCode: STATUSCODE:StatusCode
┃     ┃      src: test/nested/SimpleNested.t.sol:7:11
┃     ┃      method: test%TEscrow.getTokenTotalSupply()
┃     ┃
┃     ┣━━┓
┃     ┃  │
┃     ┃  └─ 368 (leaf, pending)
┃     ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃     ┃      pc: 143
┃     ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃     ┃      statusCode: STATUSCODE:StatusCode
┃     ┃      src: test/nested/SimpleNested.t.sol:7:11
┃     ┃      method: test%TEscrow.getTokenTotalSupply()
┃     ┃
┃     ┣━━┓
┃     ┃  │
┃     ┃  └─ 369 (leaf, pending)
┃     ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃     ┃      pc: 143
┃     ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃     ┃      statusCode: STATUSCODE:StatusCode
┃     ┃      src: test/nested/SimpleNested.t.sol:7:11
┃     ┃      method: test%TEscrow.getTokenTotalSupply()
┃     ┃
┃     ┣━━┓
┃     ┃  │
┃     ┃  └─ 370 (leaf, pending)
┃     ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃     ┃      pc: 143
┃     ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃     ┃      statusCode: STATUSCODE:StatusCode
┃     ┃      src: test/nested/SimpleNested.t.sol:7:11
┃     ┃      method: test%TEscrow.getTokenTotalSupply()
┃     ┃
┃     ┣━━┓
┃     ┃  │
┃     ┃  └─ 371 (leaf, pending)
┃     ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃     ┃      pc: 143
┃     ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃     ┃      statusCode: STATUSCODE:StatusCode
┃     ┃      src: test/nested/SimpleNested.t.sol:7:11
┃     ┃      method: test%TEscrow.getTokenTotalSupply()
┃     ┃
┃     ┣━━┓
┃     ┃  │
┃     ┃  └─ 372 (leaf, pending)
┃     ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃     ┃      pc: 143
┃     ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃     ┃      statusCode: STATUSCODE:StatusCode
┃     ┃      src: test/nested/SimpleNested.t.sol:7:11
┃     ┃      method: test%TEscrow.getTokenTotalSupply()
┃     ┃
┃     ┣━━┓
┃     ┃  │
┃     ┃  └─ 373 (leaf, pending)
┃     ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃     ┃      pc: 143
┃     ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃     ┃      statusCode: STATUSCODE:StatusCode
┃     ┃      src: test/nested/SimpleNested.t.sol:7:11
┃     ┃      method: test%TEscrow.getTokenTotalSupply()
┃     ┃
┃     ┣━━┓
┃     ┃  │
┃     ┃  └─ 374 (leaf, pending)
┃     ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃     ┃      pc: 143
┃     ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃     ┃      statusCode: STATUSCODE:StatusCode
┃     ┃      src: test/nested/SimpleNested.t.sol:7:11
┃     ┃      method: test%TEscrow.getTokenTotalSupply()
┃     ┃
┃     ┣━━┓
┃     ┃  │
┃     ┃  └─ 375 (leaf, pending)
┃     ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃     ┃      pc: 143
┃     ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃     ┃      statusCode: STATUSCODE:StatusCode
┃     ┃      src: test/nested/SimpleNested.t.sol:7:11
┃     ┃      method: test%TEscrow.getTokenTotalSupply()
┃     ┃
┃     ┣━━┓
┃     ┃  │
┃     ┃  └─ 376 (leaf, pending)
┃     ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃     ┃      pc: 143
┃     ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃     ┃      statusCode: STATUSCODE:StatusCode
┃     ┃      src: test/nested/SimpleNested.t.sol:7:11
┃     ┃      method: test%TEscrow.getTokenTotalSupply()
┃     ┃
┃     ┣━━┓
┃     ┃  │
┃     ┃  └─ 377 (leaf, pending)
┃     ┃      k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃     ┃      pc: 143
┃     ┃      callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃     ┃      statusCode: STATUSCODE:StatusCode
┃     ┃      src: test/nested/SimpleNested.t.sol:7:11
┃     ┃      method: test%TEscrow.getTokenTotalSupply()
┃     ┃
┃     ┗━━┓
┃        │
┃        └─ 378 (leaf, pending)
┃            k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE ...
┃            pc: 143
┃            callDepth: ( CALLDEPTH_CELL:Int +Int 1 )
┃            statusCode: STATUSCODE:StatusCode
┃            src: test/nested/SimpleNested.t.sol:7:11
┃            method: test%TEscrow.getTokenTotalSupply()
┃
┗━━┓ subst: .Subst
   ┃ constraint:
   ┃     1024 <=Int CALLDEPTH_CELL:Int
   │
   ├─ 7
   │   k: #checkDepthExceeded ~> #call C_TGOVERNANCE_ID:Int C_TGOVERNANCE_ESCROW_ID:Int C_ ...
   │   pc: 138
   │   callDepth: CALLDEPTH_CELL:Int
   │   statusCode: STATUSCODE:StatusCode
   │   src: test/nested/SimpleNested.t.sol:7:11
   │   method: test%TGovernance.getEscrowTokenTotalSupply()
   │
   │  (4 steps)
   ├─ 9
   │   k: #end EVMC_CALL_DEPTH_EXCEEDED ~> #call C_TGOVERNANCE_ID:Int C_TGOVERNANCE_ESCROW ...
   │   pc: 138
   │   callDepth: CALLDEPTH_CELL:Int
   │   statusCode: STATUSCODE:StatusCode
   │   src: test/nested/SimpleNested.t.sol:7:11
   │   method: test%TGovernance.getEscrowTokenTotalSupply()
   │
   │  (1 step)
   ├─ 11
   │   k: #halt ~> #call C_TGOVERNANCE_ID:Int C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE_ES ...
   │   pc: 138
   │   callDepth: CALLDEPTH_CELL:Int
   │   statusCode: EVMC_CALL_DEPTH_EXCEEDED
   │   src: test/nested/SimpleNested.t.sol:7:11
   │   method: test%TGovernance.getEscrowTokenTotalSupply()
   │
   │  (1 step)
   ├─ 13
   │   k: #halt ~> #return 128 32 ~> #pc [ CALL ] ~> #execute ~> CONTINUATION:K
   │   pc: 138
   │   callDepth: CALLDEPTH_CELL:Int
   │   statusCode: EVMC_CALL_DEPTH_EXCEEDED
   │   src: test/nested/SimpleNested.t.sol:7:11
   │   method: test%TGovernance.getEscrowTokenTotalSupply()
   │
   │  (1 step)
   ├─ 40
   │   k: #popCallStack ~> #popWorldState ~> 0 ~> #push ~> #pc [ CALL ] ~> #execute ~> CON ...
   │   pc: 138
   │   callDepth: CALLDEPTH_CELL:Int
   │   statusCode: EVMC_CALL_DEPTH_EXCEEDED
   │   src: test/nested/SimpleNested.t.sol:7:11
   │   method: test%TGovernance.getEscrowTokenTotalSupply()
   │
   │  (66 steps)
   └─ 379 (leaf, pending)
       k: #end EVMC_REVERT ~> #pc [ REVERT ] ~> #execute ~> CONTINUATION:K
       pc: 153
       callDepth: CALLDEPTH_CELL:Int
       statusCode: EVMC_CALL_DEPTH_EXCEEDED
       src: test/nested/SimpleNested.t.sol:7:11
       method: test%TGovernance.getEscrowTokenTotalSupply()


┌─ 2 (root, leaf, target, terminal)
│   k: #halt ~> CONTINUATION:K
│   pc: PC_CELL_5d410f2a:Int
│   callDepth: CALLDEPTH_CELL_5d410f2a:Int
│   statusCode: STATUSCODE_FINAL:StatusCode



module SUMMARY-TEST%TGOVERNANCE.GETESCROWTOKENTOTALSUPPLY():0
    
    
    rule [BASIC-BLOCK-1-TO-3]: <foundry>
           <kevm>
             <k>
               ( .K => CALL 0 C_TGOVERNANCE_ESCROW_ID:Int 0 128 4 128 32
               ~> #pc [ CALL ] )
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ID:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"z\xdb@\x8d"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( .WordStack => ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     ( b"" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
               ))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-1-TO-3)]
    
    rule [BASIC-BLOCK-3-TO-4]: <foundry>
           <kevm>
             <k>
               ( CALL 0 C_TGOVERNANCE_ESCROW_ID:Int 0 128 4 128 32 ~> .K => #accessAccounts C_TGOVERNANCE_ESCROW_ID:Int
               ~> #checkCall C_TGOVERNANCE_ID:Int 0
               ~> #call C_TGOVERNANCE_ID:Int C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE_ESCROW_ID:Int 0 0 b"W\xdf\x84K" false
               ~> #return 128 32 )
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ID:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"z\xdb@\x8d"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
               ))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-3-TO-4)]
    
    rule [BASIC-BLOCK-4-TO-5]: <foundry>
           <kevm>
             <k>
               ( #accessAccounts C_TGOVERNANCE_ESCROW_ID:Int
               ~> #checkCall C_TGOVERNANCE_ID:Int 0 => #checkDepthExceeded ~> .K )
               ~> #call C_TGOVERNANCE_ID:Int C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE_ESCROW_ID:Int 0 0 b"W\xdf\x84K" false
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ID:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"z\xdb@\x8d"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( ACCESSEDACCOUNTS_CELL:Set => ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) )
                   </accessedAccounts>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
               ))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-4-TO-5)]
    
    rule [BASIC-BLOCK-6-TO-8]: <foundry>
           <kevm>
             <k>
               ( #checkDepthExceeded
               ~> #call C_TGOVERNANCE_ID:Int C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE_ESCROW_ID:Int 0 0 b"W\xdf\x84K" false => #precompiled? ( C_TGOVERNANCE_ESCROW_ID:Int , SHANGHAI )
               ~> #execute )
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   ( _OUTPUT_CELL => b"" )
                 </output>
                 <callStack>
                   ( CALLSTACK_CELL:List => ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) CALLSTACK_CELL:List )
                 </callStack>
                 <interimStates>
                   ( INTERIMSTATES_CELL:List => ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) INTERIMSTATES_CELL:List )
                 </interimStates>
                 <touchedAccounts>
                   ( TOUCHEDACCOUNTS_CELL:Set => TOUCHEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) )
                 </touchedAccounts>
                 <callState>
                   <id>
                     ( C_TGOVERNANCE_ID:Int => C_TGOVERNANCE_ESCROW_ID:Int )
                   </id>
                   <caller>
                     ( CALLER_ID:Int => C_TGOVERNANCE_ID:Int )
                   </caller>
                   <callData>
                     ( b"z\xdb@\x8d" => b"W\xdf\x84K" )
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) ) => .WordStack )
                   </wordStack>
                   <localMem>
                     ( b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" => b"" )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int => ( CALLDEPTH_CELL:Int +Int 1 ) )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( ACCESSEDACCOUNTS_CELL:Set => ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ) |Set SetItem ( ( C_TGOVERNANCE_ESCROW_ID:Int => C_TGOVERNANCE_ID:Int ) )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
               )))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-6-TO-8)]
    
    rule [BASIC-BLOCK-7-TO-9]: <foundry>
           <kevm>
             <k>
               ( #checkDepthExceeded => #end EVMC_CALL_DEPTH_EXCEEDED )
               ~> #call C_TGOVERNANCE_ID:Int C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE_ESCROW_ID:Int 0 0 b"W\xdf\x84K" false
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   ( _OUTPUT_CELL => b"" )
                 </output>
                 <callStack>
                   ( CALLSTACK_CELL:List => ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) CALLSTACK_CELL:List )
                 </callStack>
                 <interimStates>
                   ( INTERIMSTATES_CELL:List => ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) INTERIMSTATES_CELL:List )
                 </interimStates>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ID:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"z\xdb@\x8d"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     CALLDEPTH_CELL:Int
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( 1024 <=Int CALLDEPTH_CELL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
               )))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-7-TO-9)]
    
    rule [BASIC-BLOCK-8-TO-10]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ID:Int
                   </caller>
                   <callData>
                     b"W\xdf\x84K"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 1 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
               )))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-8-TO-10)]
    
    rule [BASIC-BLOCK-9-TO-11]: <foundry>
           <kevm>
             <k>
               ( #end EVMC_CALL_DEPTH_EXCEEDED => #halt )
               ~> #call C_TGOVERNANCE_ID:Int C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE_ESCROW_ID:Int 0 0 b"W\xdf\x84K" false
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <statusCode>
                   ( _STATUSCODE => EVMC_CALL_DEPTH_EXCEEDED )
                 </statusCode>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ID:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"z\xdb@\x8d"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     CALLDEPTH_CELL:Int
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( 1024 <=Int CALLDEPTH_CELL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
               )))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-9-TO-11)]
    
    rule [BASIC-BLOCK-10-TO-12]: <foundry>
           <kevm>
             <k>
               ( .K => #checkDepthExceeded
               ~> #call C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int 0 0 b"\xc4\xe4\x1b\"" false
               ~> #return 128 32
               ~> #pc [ CALL ] )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ID:Int
                   </caller>
                   <callData>
                     b"W\xdf\x84K"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( .WordStack => ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     ( b"" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 1 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( ACCESSEDACCOUNTS_CELL:Set => ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ) |Set SetItem ( ( C_TGOVERNANCE_ESCROW_ID:Int => C_TGOVERNANCE_ID:Int ) ) |Set SetItem ( ( C_TGOVERNANCE_ID:Int => C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
               )))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-10-TO-12)]
    
    rule [BASIC-BLOCK-11-TO-13]: <foundry>
           <kevm>
             <k>
               #halt
               ~> ( #call C_TGOVERNANCE_ID:Int C_TGOVERNANCE_ESCROW_ID:Int C_TGOVERNANCE_ESCROW_ID:Int 0 0 b"W\xdf\x84K" false ~> .K => .K )
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <statusCode>
                   EVMC_CALL_DEPTH_EXCEEDED
                 </statusCode>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ID:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"z\xdb@\x8d"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     CALLDEPTH_CELL:Int
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( 1024 <=Int CALLDEPTH_CELL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
               )))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-11-TO-13)]
    
    rule [BASIC-BLOCK-13-TO-40]: <foundry>
           <kevm>
             <k>
               ( #halt
               ~> #return 128 32 => #popCallStack
               ~> #popWorldState
               ~> 0
               ~> #push )
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <statusCode>
                   EVMC_CALL_DEPTH_EXCEEDED
                 </statusCode>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ID:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"z\xdb@\x8d"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     CALLDEPTH_CELL:Int
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( 1024 <=Int CALLDEPTH_CELL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
               )))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-13-TO-40)]
    
    rule [BASIC-BLOCK-40-TO-379]: <foundry>
           <kevm>
             <k>
               ( #popCallStack
               ~> #popWorldState
               ~> 0
               ~> #push
               ~> #pc [ CALL ] => #end EVMC_REVERT
               ~> #pc [ REVERT ] )
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <statusCode>
                   EVMC_CALL_DEPTH_EXCEEDED
                 </statusCode>
                 <callStack>
                   ( ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) CALLSTACK_CELL:List => CALLSTACK_CELL:List )
                 </callStack>
                 <interimStates>
                   ( ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) INTERIMSTATES_CELL:List => INTERIMSTATES_CELL:List )
                 </interimStates>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ID:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"z\xdb@\x8d"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( ( 132 => 1 ) : ( ( selector ( "getTokenTotalSupply()" ) => 132 ) : ( ( C_TGOVERNANCE_ESCROW_ID:Int => selector ( "getTokenTotalSupply()" ) ) : ( ( 0 => C_TGOVERNANCE_ESCROW_ID:Int ) : ( ( 51 => 0 ) : ( ( selector ( "getEscrowTokenTotalSupply()" ) => 51 ) : ( .WordStack => ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) ) ) )
                   </wordStack>
                   <localMem>
                     b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     CALLDEPTH_CELL:Int
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( 1024 <=Int CALLDEPTH_CELL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
               )))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-40-TO-379)]
    
    rule [BASIC-BLOCK-41-TO-380]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               ))))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-41-TO-380)]
    
    rule [BASIC-BLOCK-42-TO-381]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               )))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-42-TO-381)]
    
    rule [BASIC-BLOCK-43-TO-382]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( _ACCESSEDACCOUNTS_CELL ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               ))))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-43-TO-382)]
    
    rule [BASIC-BLOCK-44-TO-383]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               )))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-44-TO-383)]
    
    rule [BASIC-BLOCK-45-TO-384]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               ))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-45-TO-384)]
    
    rule [BASIC-BLOCK-46-TO-385]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               ))))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-46-TO-385)]
    
    rule [BASIC-BLOCK-47-TO-386]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               )))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-47-TO-386)]
    
    rule [BASIC-BLOCK-48-TO-387]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( _ACCESSEDACCOUNTS_CELL ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               ))))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-48-TO-387)]
    
    rule [BASIC-BLOCK-49-TO-388]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
               )))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-49-TO-388)]
    
    rule [BASIC-BLOCK-50-TO-389]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               ))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-50-TO-389)]
    
    rule [BASIC-BLOCK-51-TO-390]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( _ACCESSEDACCOUNTS_CELL ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               )))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-51-TO-390)]
    
    rule [BASIC-BLOCK-52-TO-391]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               ))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-52-TO-391)]
    
    rule [BASIC-BLOCK-53-TO-392]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               ))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-53-TO-392)]
    
    rule [BASIC-BLOCK-54-TO-393]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               )))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-54-TO-393)]
    
    rule [BASIC-BLOCK-55-TO-394]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               ))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-55-TO-394)]
    
    rule [BASIC-BLOCK-56-TO-395]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( _ACCESSEDACCOUNTS_CELL ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               )))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-56-TO-395)]
    
    rule [BASIC-BLOCK-57-TO-396]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               ))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-57-TO-396)]
    
    rule [BASIC-BLOCK-58-TO-397]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               )))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-58-TO-397)]
    
    rule [BASIC-BLOCK-59-TO-398]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               )))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-59-TO-398)]
    
    rule [BASIC-BLOCK-60-TO-399]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               ))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-60-TO-399)]
    
    rule [BASIC-BLOCK-61-TO-400]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( _ACCESSEDACCOUNTS_CELL ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               )))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-61-TO-400)]
    
    rule [BASIC-BLOCK-62-TO-401]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
               ))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-62-TO-401)]
    
    rule [BASIC-BLOCK-63-TO-402]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               ))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-63-TO-402)]
    
    rule [BASIC-BLOCK-64-TO-403]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( _ACCESSEDACCOUNTS_CELL ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               ))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-64-TO-403)]
    
    rule [BASIC-BLOCK-65-TO-404]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               )))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-65-TO-404)]
    
    rule [BASIC-BLOCK-66-TO-405]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               )))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-66-TO-405)]
    
    rule [BASIC-BLOCK-67-TO-406]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               ))))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-67-TO-406)]
    
    rule [BASIC-BLOCK-68-TO-407]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               )))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-68-TO-407)]
    
    rule [BASIC-BLOCK-69-TO-408]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( _ACCESSEDACCOUNTS_CELL ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               ))))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-69-TO-408)]
    
    rule [BASIC-BLOCK-70-TO-409]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               )))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-70-TO-409)]
    
    rule [BASIC-BLOCK-71-TO-410]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               )))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-71-TO-410)]
    
    rule [BASIC-BLOCK-72-TO-411]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               ))))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-72-TO-411)]
    
    rule [BASIC-BLOCK-73-TO-412]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               )))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-73-TO-412)]
    
    rule [BASIC-BLOCK-74-TO-413]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( _ACCESSEDACCOUNTS_CELL ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               ))))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-74-TO-413)]
    
    rule [BASIC-BLOCK-75-TO-414]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
               )))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-75-TO-414)]
    
    rule [BASIC-BLOCK-76-TO-415]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               )))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-76-TO-415)]
    
    rule [BASIC-BLOCK-77-TO-416]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( _ACCESSEDACCOUNTS_CELL ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               )))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-77-TO-416)]
    
    rule [BASIC-BLOCK-78-TO-417]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               ))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-78-TO-417)]
    
    rule [BASIC-BLOCK-79-TO-418]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               ))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-79-TO-418)]
    
    rule [BASIC-BLOCK-80-TO-419]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               )))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-80-TO-419)]
    
    rule [BASIC-BLOCK-81-TO-420]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               ))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-81-TO-420)]
    
    rule [BASIC-BLOCK-82-TO-421]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( _ACCESSEDACCOUNTS_CELL ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               )))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-82-TO-421)]
    
    rule [BASIC-BLOCK-83-TO-422]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               )))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-83-TO-422)]
    
    rule [BASIC-BLOCK-84-TO-423]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               ))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-84-TO-423)]
    
    rule [BASIC-BLOCK-85-TO-424]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               )))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-85-TO-424)]
    
    rule [BASIC-BLOCK-86-TO-425]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               ))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-86-TO-425)]
    
    rule [BASIC-BLOCK-87-TO-426]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( _ACCESSEDACCOUNTS_CELL ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               )))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-87-TO-426)]
    
    rule [BASIC-BLOCK-88-TO-427]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               ))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-88-TO-427)]
    
    rule [BASIC-BLOCK-89-TO-428]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               ))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-89-TO-428)]
    
    rule [BASIC-BLOCK-90-TO-429]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( _ACCESSEDACCOUNTS_CELL ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               ))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-90-TO-429)]
    
    rule [BASIC-BLOCK-91-TO-430]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               )))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-91-TO-430)]
    
    rule [BASIC-BLOCK-92-TO-431]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               )))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-92-TO-431)]
    
    rule [BASIC-BLOCK-93-TO-432]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               )))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-93-TO-432)]
    
    rule [BASIC-BLOCK-94-TO-433]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               ))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-94-TO-433)]
    
    rule [BASIC-BLOCK-95-TO-434]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( _ACCESSEDACCOUNTS_CELL ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               )))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-95-TO-434)]
    
    rule [BASIC-BLOCK-96-TO-435]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               ))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-96-TO-435)]
    
    rule [BASIC-BLOCK-97-TO-436]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               )))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-97-TO-436)]
    
    rule [BASIC-BLOCK-98-TO-437]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               )))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-98-TO-437)]
    
    rule [BASIC-BLOCK-99-TO-438]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               ))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-99-TO-438)]
    
    rule [BASIC-BLOCK-100-TO-439]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL0:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( _ACCESSEDACCOUNTS_CELL ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL0:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
               )))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-100-TO-439)]
    
    rule [BASIC-BLOCK-101-TO-440]: <foundry>
           <kevm>
             <k>
               ( #precompiled? ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int , SHANGHAI ) ~> .K => .K )
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> #return 128 32
               ~> #pc [ CALL ]
               ~> #execute
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <callStack>
                   ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </id>
                     <caller>
                       C_TGOVERNANCE_ID:Int
                     </caller>
                     <callData>
                       b"W\xdf\x84K"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int : ( 0 : ( 56 : ( selector ( "getTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc4\xe4\x1b\"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       ( CALLDEPTH_CELL:Int +Int 1 )
                     </callDepth>
                     ...
                   </callState> ) ListItem ( <callState>
                     <id>
                       C_TGOVERNANCE_ID:Int
                     </id>
                     <caller>
                       CALLER_ID:Int
                     </caller>
                     <callData>
                       b"z\xdb@\x8d"
                     </callData>
                     <callValue>
                       0
                     </callValue>
                     <wordStack>
                       ( 132 : ( selector ( "getTokenTotalSupply()" ) : ( C_TGOVERNANCE_ESCROW_ID:Int : ( 0 : ( 51 : ( selector ( "getEscrowTokenTotalSupply()" ) : .WordStack ) ) ) ) ) )
                     </wordStack>
                     <localMem>
                       b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00W\xdf\x84K\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
                     </localMem>
                     <memoryUsed>
                       0
                     </memoryUsed>
                     <callGas>
                       0
                     </callGas>
                     <static>
                       false
                     </static>
                     <callDepth>
                       CALLDEPTH_CELL:Int
                     </callDepth>
                     ...
                   </callState> ) _CALLSTACK_CELL
                 </callStack>
                 <interimStates>
                   ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) ListItem ( { <accounts>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                         C_TGOVERNANCE_ESCROW_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                       </balance>
                       <storage>
                         C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ( <account>
                       <acctID>
                         C_TGOVERNANCE_ID:Int
                       </acctID>
                       <balance>
                         C_TGOVERNANCE_BAL:Int
                       </balance>
                       <storage>
                         ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                         C_TGOVERNANCE_STORAGE:Map )
                       </storage>
                       <origStorage>
                         C_TGOVERNANCE_ORIGSTORAGE:Map
                       </origStorage>
                       <transientStorage>
                         C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                       </transientStorage>
                       <nonce>
                         C_TGOVERNANCE_NONCE:Int
                       </nonce>
                       ...
                     </account>
                     ACCOUNTS_REST:AccountCellMap ) ) )
                   </accounts> | <substate>
                     <selfDestruct>
                       SELFDESTRUCT_CELL:Set
                     </selfDestruct>
                     <log>
                       LOG_CELL:List
                     </log>
                     <refund>
                       0
                     </refund>
                     <accessedAccounts>
                       ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                     </accessedAccounts>
                     <accessedStorage>
                       ACCESSEDSTORAGE_CELL:Map
                     </accessedStorage>
                   </substate> } ) _INTERIMSTATES_CELL
                 </interimStates>
                 <touchedAccounts>
                   _TOUCHEDACCOUNTS_CELL |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int )
                 </touchedAccounts>
                 <callState>
                   <id>
                     C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                   </id>
                   <caller>
                     C_TGOVERNANCE_ESCROW_ID:Int
                   </caller>
                   <callData>
                     b"\xc4\xe4\x1b\""
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     .WordStack
                   </wordStack>
                   <localMem>
                     b""
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     ( CALLDEPTH_CELL:Int +Int 2 )
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <selfDestruct>
                     SELFDESTRUCT_CELL:Set
                   </selfDestruct>
                   <log>
                     LOG_CELL:List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int )
                   </accessedAccounts>
                   <accessedStorage>
                     ACCESSEDSTORAGE_CELL:Map
                   </accessedStorage>
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> #asWord ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes +Bytes #buf ( 20 , C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) +Bytes C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes ) )
                       C_TGOVERNANCE_ESCROW_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
                     </balance>
                     <storage>
                       C_TGOVERNANCE_ESCROW_TOKEN_STORAGE:Map
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_ESCROW_TOKEN_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ( <account>
                     <acctID>
                       C_TGOVERNANCE_ID:Int
                     </acctID>
                     <balance>
                       C_TGOVERNANCE_BAL:Int
                     </balance>
                     <storage>
                       ( ( 0 |-> C_TGOVERNANCE_ESCROW_ID:Int )
                       C_TGOVERNANCE_STORAGE:Map )
                     </storage>
                     <origStorage>
                       C_TGOVERNANCE_ORIGSTORAGE:Map
                     </origStorage>
                     <transientStorage>
                       C_TGOVERNANCE_TRANSIENTSTORAGE:Map
                     </transientStorage>
                     <nonce>
                       C_TGOVERNANCE_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap ) ) )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ID:Int
       andBool ( CALLDEPTH_CELL:Int <Int 1023
       andBool ( CALLDEPTH_CELL:Int <Int 1024
       andBool ( 0 <=Int C_TGOVERNANCE_BAL:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_NONCE:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_ID:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_NONCE:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int
       andBool ( 0 <=Int C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int
       andBool ( C_TGOVERNANCE_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_NONCE:Int <Int maxUInt64
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <Int pow160
       andBool ( C_TGOVERNANCE_BAL:Int <Int pow256
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int C_TGOVERNANCE_ID:Int
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_BAL:Int <Int pow256
       andBool ( ( notBool 0 in_keys ( C_TGOVERNANCE_ESCROW_STORAGE:Map ) )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 1 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_AFTER:Bytes )
       andBool ( 11 ==Int lengthBytes ( C_TGOVERNANCE_ESCROW_TOKEN_SLOT_BEFORE:Bytes )
       andBool ( C_TGOVERNANCE_ESCROW_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool <acctID>
          C_TGOVERNANCE_ESCROW_TOKEN_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_TGOVERNANCE_ESCROW_TOKEN_ID:Int <= 9 ) )
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) ~> .K
       andBool ( ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) ~> .K ==K ACCESSEDACCOUNTS_CELL:Set |Set SetItem ( C_TGOVERNANCE_ESCROW_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ID:Int ) |Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ESCROW_TOKEN_ID:Int ) -Set SetItem ( C_TGOVERNANCE_ID:Int ) ~> .K
               ))))))))))))))))))))))))))))))))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-101-TO-440)]

endmodule