
┌─ 1 (root, init)
│   k: #execute ~> CONTINUATION:K
│   pc: 0
│   callDepth: CALLDEPTH_CELL:Int
│   statusCode: STATUSCODE:StatusCode
│
│  (206 steps)
├─ 3 (terminal)
│   k: #halt ~> CONTINUATION:K
│   pc: 90
│   callDepth: CALLDEPTH_CELL:Int
│   statusCode: EVMC_SUCCESS
│
┊  constraint: OMITTED CONSTRAINT
┊  subst: OMITTED SUBST
└─ 2 (leaf, target, terminal)
    k: #halt ~> CONTINUATION:K
    pc: PC_CELL_5d410f2a:Int
    callDepth: CALLDEPTH_CELL_5d410f2a:Int
    statusCode: STATUSCODE_FINAL:StatusCode




module SUMMARY-TEST%IMPORTEDCONTRACT.COUNT():0
    
    
    rule [BASIC-BLOCK-1-TO-3]: <foundry>
           <kevm>
             <k>
               ( #execute => #halt )
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   ( _OUTPUT_CELL => #buf ( 32 , #lookup ( STORAGE_CONTRACT_ID:Map , 0 ) ) )
                 </output>
                 <statusCode>
                   ( _STATUSCODE => EVMC_SUCCESS )
                 </statusCode>
                 <callState>
                   <id>
                     CONTRACT_ID:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"\x06f\x1a\xbd"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( .WordStack => ( 73 : ( selector ( "count()" ) : .WordStack ) ) )
                   </wordStack>
                   <localMem>
                     ( b"" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , #lookup ( STORAGE_CONTRACT_ID:Map , 0 ) ) )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       CONTRACT_ID:Int
                     </acctID>
                     <balance>
                       CONTRACT_BAL:Int
                     </balance>
                     <storage>
                       STORAGE_CONTRACT_ID:Map
                     </storage>
                     <nonce>
                       CONTRACT_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int CONTRACT_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int CONTRACT_BAL:Int
       andBool ( 0 <=Int CONTRACT_NONCE:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( CONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( CONTRACT_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( CONTRACT_ID:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( CONTRACT_BAL:Int <Int pow256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( ( notBool <acctID>
          CONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < CONTRACT_ID:Int <= 9 ) )
               )))))))))))))))))))))
      [priority(20), label(BASIC-BLOCK-1-TO-3)]

endmodule