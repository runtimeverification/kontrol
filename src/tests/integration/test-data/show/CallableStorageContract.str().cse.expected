
┌─ 1 (root, init)
│   k: #execute ~> CONTINUATION:K
│   pc: 0
│   callDepth: CALLDEPTH_CELL:Int
│   statusCode: STATUSCODE:StatusCode
│   src: test/nested/SimpleNested.t.sol:7:11
│   method: test%CallableStorageContract.str()
│
│  (867|1033 steps)
├─ 14 (split)
│   k: #halt ~> CONTINUATION:K
│   pc: 86
│   callDepth: CALLDEPTH_CELL:Int
│   statusCode: EVMC_SUCCESS
│   src: test/nested/SimpleNested.t.sol:7:11
│   method: test%CallableStorageContract.str()
┃
┃ (branch)
┣━━┓ subst: ...
┃  ┃ constraint:
┃  ┃     C_CALLABLESTORAGECONTRACT_STR_S_LENGTH:Int ==Int 0
┃  │
┃  ├─ 10 (terminal)
┃  │   k: #halt ~> CONTINUATION:K
┃  │   pc: 86
┃  │   callDepth: CALLDEPTH_CELL:Int
┃  │   statusCode: EVMC_SUCCESS
┃  │   src: test/nested/SimpleNested.t.sol:7:11
┃  │   method: test%CallableStorageContract.str()
┃  │
┃  ┊  constraint:
┃  ┊      ( notBool 1 in_keys ( C_CALLABLESTORAGECONTRACT_STORAGE:Map ) )
┃  ┊      ( notBool <acctID>
  C_CALLABLESTORAGECONTRACT_ID:Int
</acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
┃  ┊  subst: ...
┃  └─ 2 (leaf, target, terminal)
┃      k: #halt ~> CONTINUATION:K
┃      pc: PC_CELL_5d410f2a:Int
┃      callDepth: CALLDEPTH_CELL_5d410f2a:Int
┃      statusCode: STATUSCODE_FINAL:StatusCode
┃
┗━━┓ subst: ...
   ┃ constraint:
   ┃     0 <=Int C_CALLABLESTORAGECONTRACT_STR_S_LENGTH:Int
   ┃     C_CALLABLESTORAGECONTRACT_STR_S_LENGTH:Int <Int 32
   ┃     ( notBool C_CALLABLESTORAGECONTRACT_STR_S_LENGTH:Int ==Int 0 )
   │
   ├─ 11 (terminal)
   │   k: #halt ~> CONTINUATION:K
   │   pc: 86
   │   callDepth: CALLDEPTH_CELL:Int
   │   statusCode: EVMC_SUCCESS
   │   src: test/nested/SimpleNested.t.sol:7:11
   │   method: test%CallableStorageContract.str()
   │
   ┊  constraint:
   ┊      ( notBool 1 in_keys ( C_CALLABLESTORAGECONTRACT_STORAGE:Map ) )
   ┊      ( notBool <acctID>
  C_CALLABLESTORAGECONTRACT_ID:Int
</acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
   ┊  subst: ...
   └─ 2 (leaf, target, terminal)
       k: #halt ~> CONTINUATION:K
       pc: PC_CELL_5d410f2a:Int
       callDepth: CALLDEPTH_CELL_5d410f2a:Int
       statusCode: STATUSCODE_FINAL:StatusCode


┌─ 12 (root, leaf, pending)
│   k: #execute ~> CONTINUATION:K
│   pc: 0
│   callDepth: CALLDEPTH_CELL:Int
│   statusCode: STATUSCODE:StatusCode
│   src: test/nested/SimpleNested.t.sol:7:11
│   method: test%CallableStorageContract.str()

┌─ 13 (root, leaf, pending)
│   k: #execute ~> CONTINUATION:K
│   pc: 0
│   callDepth: CALLDEPTH_CELL:Int
│   statusCode: STATUSCODE:StatusCode
│   src: test/nested/SimpleNested.t.sol:7:11
│   method: test%CallableStorageContract.str()



module SUMMARY-TEST%CALLABLESTORAGECONTRACT.STR():0
    
    
    rule [BASIC-BLOCK-1-TO-14]: <foundry>
           <kevm>
             <k>
               ( #execute => #halt )
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   ( _OUTPUT_CELL => ?V_79d553d9 )
                 </output>
                 <statusCode>
                   ( _STATUSCODE => EVMC_SUCCESS )
                 </statusCode>
                 <callState>
                   <id>
                     C_CALLABLESTORAGECONTRACT_ID:Int
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"\xc1[\xae\x84"
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( .WordStack => ( 95 : ( selector ( "str()" ) : .WordStack ) ) )
                   </wordStack>
                   <localMem>
                     ( b"" => ?V_e793806a )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   ...
                 </callState>
                 <substate>
                   <refund>
                     0
                   </refund>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     TIMESTAMP_CELL:Int
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       C_CALLABLESTORAGECONTRACT_ID:Int
                     </acctID>
                     <balance>
                       C_CALLABLESTORAGECONTRACT_BAL:Int
                     </balance>
                     <storage>
                       ( ( 1 |-> #asWord ( C_CALLABLESTORAGECONTRACT_STR_S_CONTENTS:Bytes +Bytes ( #buf ( 1 , ( 2 *Int C_CALLABLESTORAGECONTRACT_STR_S_LENGTH:Int ) ) => ?V_4352d4b8 ) ) )
                       C_CALLABLESTORAGECONTRACT_STORAGE:Map )
                     </storage>
                     <nonce>
                       C_CALLABLESTORAGECONTRACT_NONCE:Int
                     </nonce>
                     ...
                   </account>
                   ACCOUNTS_REST:AccountCellMap )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressList>
                 .List
               </addressList>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
             ...
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               false
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               false
             </recordedTrace>
             <traceData>
               .List
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( maxUInt5 ==Int lengthBytes ( C_CALLABLESTORAGECONTRACT_STR_S_CONTENTS:Bytes )
       andBool ( 0 <=Int C_CALLABLESTORAGECONTRACT_ID:Int
       andBool ( 0 <=Int C_CALLABLESTORAGECONTRACT_BAL:Int
       andBool ( 0 <=Int C_CALLABLESTORAGECONTRACT_NONCE:Int
       andBool ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( 0 <=Int C_CALLABLESTORAGECONTRACT_STR_S_LENGTH:Int
       andBool ( C_CALLABLESTORAGECONTRACT_STR_S_LENGTH:Int <Int 32
       andBool ( C_CALLABLESTORAGECONTRACT_NONCE:Int <Int maxUInt64
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( C_CALLABLESTORAGECONTRACT_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool 1 in_keys ( C_CALLABLESTORAGECONTRACT_STORAGE:Map ) )
       andBool ( C_CALLABLESTORAGECONTRACT_ID:Int <Int pow160
       andBool ( C_CALLABLESTORAGECONTRACT_BAL:Int <Int pow256
       andBool ( ( notBool <acctID>
          C_CALLABLESTORAGECONTRACT_ID:Int
        </acctID> in_keys ( ACCOUNTS_REST:AccountCellMap ) )
       andBool ( ( notBool #range ( 0 < CALLER_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < ORIGIN_ID:Int <= 9 ) )
       andBool ( ( notBool #range ( 0 < C_CALLABLESTORAGECONTRACT_ID:Int <= 9 ) )
               )))))))))))))))))))))))))
       ensures ( ( ?V_79d553d9 ==K b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
         andBool ( ?V_e793806a ==K b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
         andBool ( ?V_4352d4b8 ==K b"\x00"
         andBool ( C_CALLABLESTORAGECONTRACT_STR_S_LENGTH:Int ==Int 0
                 ))))
        orBool ( ( ?V_79d553d9 ==K #range ( b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes #buf ( 32 , C_CALLABLESTORAGECONTRACT_STR_S_LENGTH:Int ) +Bytes #range ( C_CALLABLESTORAGECONTRACT_STR_S_CONTENTS:Bytes , 0 , ( ( ( 32 *Int ( ( C_CALLABLESTORAGECONTRACT_STR_S_LENGTH:Int +Int maxUInt5 ) /Int 32 ) ) +Int C_CALLABLESTORAGECONTRACT_STR_S_LENGTH:Int ) +Int -32 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" , ( ( 32 *Int ( ( C_CALLABLESTORAGECONTRACT_STR_S_LENGTH:Int +Int maxUInt5 ) /Int 32 ) ) +Int -32 ) , chop ( ( ( chop ( ( ( ( notMaxUInt5 &Int ( C_CALLABLESTORAGECONTRACT_STR_S_LENGTH:Int +Int maxUInt5 ) ) +Int ( 32 *Int ( ( C_CALLABLESTORAGECONTRACT_STR_S_LENGTH:Int +Int maxUInt5 ) /Int 32 ) ) ) +Int 224 ) ) -Int ( 32 *Int ( ( C_CALLABLESTORAGECONTRACT_STR_S_LENGTH:Int +Int maxUInt5 ) /Int 32 ) ) ) +Int -160 ) ) )
         andBool ( ?V_e793806a ==K b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , ( ( 32 *Int ( ( C_CALLABLESTORAGECONTRACT_STR_S_LENGTH:Int +Int maxUInt5 ) /Int 32 ) ) +Int 160 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +Bytes #buf ( 32 , C_CALLABLESTORAGECONTRACT_STR_S_LENGTH:Int ) +Bytes C_CALLABLESTORAGECONTRACT_STR_S_CONTENTS:Bytes +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 " +Bytes #buf ( 32 , C_CALLABLESTORAGECONTRACT_STR_S_LENGTH:Int ) +Bytes #range ( C_CALLABLESTORAGECONTRACT_STR_S_CONTENTS:Bytes , 0 , ( ( ( 32 *Int ( ( C_CALLABLESTORAGECONTRACT_STR_S_LENGTH:Int +Int maxUInt5 ) /Int 32 ) ) +Int C_CALLABLESTORAGECONTRACT_STR_S_LENGTH:Int ) +Int -32 ) ) +Bytes b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
         andBool ( ?V_4352d4b8 ==K #buf ( 1 , ( 2 *Int C_CALLABLESTORAGECONTRACT_STR_S_LENGTH:Int ) )
         andBool ( 0 <=Int C_CALLABLESTORAGECONTRACT_STR_S_LENGTH:Int
         andBool ( C_CALLABLESTORAGECONTRACT_STR_S_LENGTH:Int <Int 32
         andBool ( C_CALLABLESTORAGECONTRACT_STR_S_LENGTH:Int =/=Int 0
                 ))))))
               ))
      [priority(20), label(BASIC-BLOCK-1-TO-14)]

endmodule