
┌─ 1 (root, init)
│   k: #execute ~> CONTINUATION:K
│   pc: 0
│   callDepth: 0
│   statusCode: STATUSCODE:StatusCode
│   src: test/nested/SimpleNested.t.sol:7:11
│   method: test%BlockParamsTest.testWarp(uint256)
│
│  (1600 steps)
├─ 3 (terminal)
│   k: #halt ~> CONTINUATION:K
│   pc: 464
│   callDepth: 0
│   statusCode: EVMC_SUCCESS
│   src: lib/forge-std/src/StdInvariant.sol:65:67
│   method: test%BlockParamsTest.testWarp(uint256)
│
┊  constraint: true
┊  subst: ...
└─ 2 (leaf, target, terminal)
    k: #halt ~> CONTINUATION:K
    pc: PC_CELL_5d410f2a:Int
    callDepth: CALLDEPTH_CELL_5d410f2a:Int
    statusCode: STATUSCODE_FINAL:StatusCode




module SUMMARY-TEST%BLOCKPARAMSTEST.TESTWARP(UINT256):0
    
    
    rule [BASIC-BLOCK-1-TO-3]: <foundry>
           <kevm>
             <k>
               ( #execute => #halt )
               ~> _CONTINUATION:K
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               CANCUN
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <statusCode>
                   ( _STATUSCODE:StatusCode => EVMC_SUCCESS )
                 </statusCode>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   .Set
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     137122462167341575662000267002353578582749290296
                   </caller>
                   <callData>
                     b"t\xb4\x1dj" +Bytes #buf ( 32 , KV0_time:Int )
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( .WordStack => ( 1957961066 : .WordStack ) )
                   </wordStack>
                   <localMem>
                     ( b"" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe5\xd6\xbf\x02" +Bytes #buf ( 32 , KV0_time:Int ) )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( .Set => SetItem ( 645326474426547203313410069153905908525362434349 ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   <createdAccounts>
                     .Set
                   </createdAccounts>
                   ...
                 </substate>
                 <origin>
                   137122462167341575662000267002353578582749290296
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     ( TIMESTAMP_CELL:Int => KV0_time:Int )
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <chainID>
                   1
                 </chainID>
                 <accounts>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <transientStorage>
                       .Map
                     </transientStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account> )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <stackChecks>
             true
           </stackChecks>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <allowedCallsList>
                 .List
               </allowedCallsList>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <storageSlotList>
                 .List
               </storageSlotList>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
             <mockFunctions>
               .MockFunctionCellMap
             </mockFunctions>
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               true
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               ( false => true )
             </recordedTrace>
             <traceData>
               ( .List => ListItem ( { 0 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4 | MSTORE | .WordStack | b"" | .Map | 0 } ) ListItem ( { 5 | CALLVALUE | .WordStack | b"" | .Map | 0 } ) ListItem ( { 6 | DUP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 7 | ISZERO | .WordStack | b"" | .Map | 0 } ) ListItem ( { 8 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 11 | JUMPI | .WordStack | b"" | .Map | 0 } ) ListItem ( { 16 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 17 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 18 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 20 | CALLDATASIZE | .WordStack | b"" | .Map | 0 } ) ListItem ( { 21 | LT | .WordStack | b"" | .Map | 0 } ) ListItem ( { 22 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 25 | JUMPI | .WordStack | b"" | .Map | 0 } ) ListItem ( { 26 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 28 | CALLDATALOAD | .WordStack | b"" | .Map | 0 } ) ListItem ( { 29 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { maxUInt5 | SHR | .WordStack | b"" | .Map | 0 } ) ListItem ( { 32 | DUP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 33 | PUSH ( 4 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 38 | GT | .WordStack | b"" | .Map | 0 } ) ListItem ( { 39 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 42 | JUMPI | .WordStack | b"" | .Map | 0 } ) ListItem ( { 151 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 152 | DUP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 153 | PUSH ( 4 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 158 | GT | .WordStack | b"" | .Map | 0 } ) ListItem ( { 159 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 162 | JUMPI | .WordStack | b"" | .Map | 0 } ) ListItem ( { 163 | DUP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 164 | PUSH ( 4 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 169 | EQ | .WordStack | b"" | .Map | 0 } ) ListItem ( { 170 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 173 | JUMPI | .WordStack | b"" | .Map | 0 } ) ListItem ( { 174 | DUP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 175 | PUSH ( 4 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 180 | EQ | .WordStack | b"" | .Map | 0 } ) ListItem ( { 181 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 184 | JUMPI | .WordStack | b"" | .Map | 0 } ) ListItem ( { 185 | DUP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 186 | PUSH ( 4 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 191 | EQ | .WordStack | b"" | .Map | 0 } ) ListItem ( { 192 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 195 | JUMPI | .WordStack | b"" | .Map | 0 } ) ListItem ( { 437 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 438 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 441 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 443 | DUP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 444 | CALLDATASIZE | .WordStack | b"" | .Map | 0 } ) ListItem ( { 445 | SUB | .WordStack | b"" | .Map | 0 } ) ListItem ( { 446 | DUP ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 447 | ADD | .WordStack | b"" | .Map | 0 } ) ListItem ( { 448 | SWAP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 449 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 452 | SWAP ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 453 | SWAP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 454 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 457 | JUMP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4505 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4506 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4508 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4510 | DUP ( 3 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4511 | DUP ( 5 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4512 | SUB | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4513 | SLT | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4514 | ISZERO | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4515 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4518 | JUMPI | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4527 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4528 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4530 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4533 | DUP ( 5 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4534 | DUP ( 3 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4535 | DUP ( 6 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4536 | ADD | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4537 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4540 | JUMP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4484 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4485 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4487 | DUP ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4488 | CALLDATALOAD | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4489 | SWAP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4490 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4491 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4494 | DUP ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4495 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4498 | JUMP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4461 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4462 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4465 | DUP ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4466 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4469 | JUMP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4451 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4452 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4454 | DUP ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4455 | SWAP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4456 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4457 | SWAP ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4458 | SWAP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4459 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4460 | JUMP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4470 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4471 | DUP ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4472 | EQ | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4473 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4476 | JUMPI | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4481 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4482 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4483 | JUMP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4499 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4500 | SWAP ( 3 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4501 | SWAP ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4502 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4503 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4504 | JUMP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4541 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4542 | SWAP ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4543 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4544 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4545 | SWAP ( 3 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4546 | SWAP ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4547 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4548 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4549 | JUMP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 458 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 459 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 462 | JUMP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1764 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1765 | PUSH ( 32 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1798 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1800 | SHR | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1801 | PUSH ( 20 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1822 | AND | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1823 | PUSH ( 4 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1828 | DUP ( 3 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1829 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1831 | MLOAD | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1832 | DUP ( 3 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1833 | PUSH ( 4 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1838 | AND | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1839 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1841 | SHL | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1842 | DUP ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1843 | MSTORE | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1844 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1846 | ADD | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1847 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1850 | SWAP ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1851 | SWAP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1852 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1855 | JUMP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 5797 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 5798 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 5800 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 5802 | DUP ( 3 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 5803 | ADD | .WordStack | b"" | .Map | 0 } ) ListItem ( { 5804 | SWAP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 5805 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 5806 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 5809 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 5811 | DUP ( 4 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 5812 | ADD | .WordStack | b"" | .Map | 0 } ) ListItem ( { 5813 | DUP ( 5 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 5814 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 5817 | JUMP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 5782 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 5783 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 5786 | DUP ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 5787 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 5790 | JUMP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4451 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4452 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4454 | DUP ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4455 | SWAP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4456 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4457 | SWAP ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4458 | SWAP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4459 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4460 | JUMP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 5791 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 5792 | DUP ( 3 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 5793 | MSTORE | .WordStack | b"" | .Map | 0 } ) ListItem ( { 5794 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 5795 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 5796 | JUMP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 5818 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 5819 | SWAP ( 3 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 5820 | SWAP ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 5821 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 5822 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 5823 | JUMP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1856 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1857 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1859 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1861 | MLOAD | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1862 | DUP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1863 | DUP ( 4 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1864 | SUB | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1865 | DUP ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1866 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1868 | DUP ( 8 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1869 | DUP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1870 | EXTCODESIZE | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1871 | ISZERO | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1872 | DUP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1873 | ISZERO | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1874 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1877 | JUMPI | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1882 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1883 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1884 | GAS | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1885 | CALL | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1886 | ISZERO | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1887 | DUP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1888 | ISZERO | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1889 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1892 | JUMPI | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1902 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1903 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1904 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1905 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1906 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1907 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1910 | TIMESTAMP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1911 | DUP ( 3 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1912 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1915 | JUMP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 3624 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 3625 | DUP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 3626 | DUP ( 3 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 3627 | EQ | .WordStack | b"" | .Map | 0 } ) ListItem ( { 3628 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 3631 | JUMPI | .WordStack | b"" | .Map | 0 } ) ListItem ( { 3803 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 3804 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 3805 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 3806 | JUMP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1916 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1917 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1918 | JUMP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 463 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 464 | STOP | .WordStack | b"" | .Map | 0 } ) )
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int KV0_time:Int
       andBool ( pow24 <Int NUMBER_CELL:Int
       andBool ( NUMBER_CELL:Int <Int pow32
       andBool ( 1073741824 <Int TIMESTAMP_CELL:Int
       andBool ( TIMESTAMP_CELL:Int <Int 34359738368
       andBool ( KV0_time:Int <Int pow256
               ))))))
      [priority(20), label(BASIC-BLOCK-1-TO-3)]

endmodule
0 Failure nodes. (0 pending and 0 failing)

Join the Runtime Verification Discord server (https://discord.com/invite/CurfmXNtbN) or Telegram group (https://t.me/rv_kontrol) for support.

See `foundry_success` predicate for more information:
https://github.com/runtimeverification/kontrol/blob/master/src/kontrol/kdist/foundry.md#foundry-success-predicate

Access documentation for Kontrol at https://docs.runtimeverification.com/kontrol