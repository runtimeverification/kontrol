
┌─ 1 (root, init)
│   k: #execute ~> CONTINUATION:K
│   pc: 0
│   callDepth: 0
│   statusCode: STATUSCODE:StatusCode
│
│  (1311 steps)
├─ 3 (terminal)
│   k: #halt ~> CONTINUATION:K
│   pc: 292
│   callDepth: 0
│   statusCode: EVMC_SUCCESS
│
┊  constraint: true
┊  subst: OMITTED SUBST
└─ 2 (leaf, target, terminal)
    k: #halt ~> CONTINUATION:K
    pc: PC_CELL_5d410f2a:Int
    callDepth: CALLDEPTH_CELL_5d410f2a:Int
    statusCode: STATUSCODE_FINAL:StatusCode




module SUMMARY-TEST%BLOCKPARAMSTEST.TESTWARP(UINT256):0
    
    
    rule [BASIC-BLOCK-1-TO-3]: <foundry>
           <kevm>
             <k>
               ( #execute => #halt )
               ~> _CONTINUATION
             </k>
             <mode>
               NORMAL
             </mode>
             <schedule>
               SHANGHAI
             </schedule>
             <useGas>
               false
             </useGas>
             <ethereum>
               <evm>
                 <output>
                   b""
                 </output>
                 <statusCode>
                   ( _STATUSCODE => EVMC_SUCCESS )
                 </statusCode>
                 <callStack>
                   .List
                 </callStack>
                 <interimStates>
                   .List
                 </interimStates>
                 <touchedAccounts>
                   .Set
                 </touchedAccounts>
                 <callState>
                   <id>
                     728815563385977040452943777879061427756277306518
                   </id>
                   <caller>
                     CALLER_ID:Int
                   </caller>
                   <callData>
                     b"t\xb4\x1dj" +Bytes #buf ( 32 , VV0_time_114b9705:Int )
                   </callData>
                   <callValue>
                     0
                   </callValue>
                   <wordStack>
                     ( .WordStack => ( selector ( "testWarp(uint256)" ) : .WordStack ) )
                   </wordStack>
                   <localMem>
                     ( b"" => b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x98)lT" +Bytes #buf ( 32 , VV0_time_114b9705:Int ) +Bytes #buf ( 32 , VV0_time_114b9705:Int ) )
                   </localMem>
                   <memoryUsed>
                     0
                   </memoryUsed>
                   <callGas>
                     0
                   </callGas>
                   <static>
                     false
                   </static>
                   <callDepth>
                     0
                   </callDepth>
                   ...
                 </callState>
                 <substate>
                   <log>
                     .List
                   </log>
                   <refund>
                     0
                   </refund>
                   <accessedAccounts>
                     ( .Set => SetItem ( 645326474426547203313410069153905908525362434349 ) )
                   </accessedAccounts>
                   <accessedStorage>
                     .Map
                   </accessedStorage>
                   ...
                 </substate>
                 <origin>
                   ORIGIN_ID:Int
                 </origin>
                 <block>
                   <number>
                     NUMBER_CELL:Int
                   </number>
                   <timestamp>
                     ( TIMESTAMP_CELL:Int => VV0_time_114b9705:Int )
                   </timestamp>
                   ...
                 </block>
                 ...
               </evm>
               <network>
                 <accounts>
                   ( <account>
                     <acctID>
                       645326474426547203313410069153905908525362434349
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       0
                     </nonce>
                     ...
                   </account>
                   <account>
                     <acctID>
                       728815563385977040452943777879061427756277306518
                     </acctID>
                     <balance>
                       0
                     </balance>
                     <storage>
                       .Map
                     </storage>
                     <origStorage>
                       .Map
                     </origStorage>
                     <nonce>
                       1
                     </nonce>
                     ...
                   </account> )
                 </accounts>
                 ...
               </network>
             </ethereum>
             ...
           </kevm>
           <cheatcodes>
             <prank>
               <active>
                 false
               </active>
               <singleCall>
                 false
               </singleCall>
               ...
             </prank>
             <expectedRevert>
               <isRevertExpected>
                 false
               </isRevertExpected>
               ...
             </expectedRevert>
             <expectedOpcode>
               <isOpcodeExpected>
                 false
               </isOpcodeExpected>
               ...
             </expectedOpcode>
             <expectEmit>
               <recordEvent>
                 false
               </recordEvent>
               <isEventExpected>
                 false
               </isEventExpected>
               ...
             </expectEmit>
             <whitelist>
               <isCallWhitelistActive>
                 false
               </isCallWhitelistActive>
               <isStorageWhitelistActive>
                 false
               </isStorageWhitelistActive>
               <addressSet>
                 .Set
               </addressSet>
               <storageSlotSet>
                 .Set
               </storageSlotSet>
             </whitelist>
             <mockCalls>
               .MockCallCellMap
             </mockCalls>
           </cheatcodes>
           <KEVMTracing>
             <activeTracing>
               true
             </activeTracing>
             <traceStorage>
               false
             </traceStorage>
             <traceWordStack>
               false
             </traceWordStack>
             <traceMemory>
               false
             </traceMemory>
             <recordedTrace>
               ( false => true )
             </recordedTrace>
             <traceData>
               ( .List => ListItem ( { 0 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 4 | MSTORE | .WordStack | b"" | .Map | 0 } ) ListItem ( { 5 | CALLVALUE | .WordStack | b"" | .Map | 0 } ) ListItem ( { 6 | DUP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 7 | ISZERO | .WordStack | b"" | .Map | 0 } ) ListItem ( { 8 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 11 | JUMPI | .WordStack | b"" | .Map | 0 } ) ListItem ( { 16 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 17 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 18 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 20 | CALLDATASIZE | .WordStack | b"" | .Map | 0 } ) ListItem ( { 21 | LT | .WordStack | b"" | .Map | 0 } ) ListItem ( { 22 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 25 | JUMPI | .WordStack | b"" | .Map | 0 } ) ListItem ( { 26 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 28 | CALLDATALOAD | .WordStack | b"" | .Map | 0 } ) ListItem ( { 29 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { maxUInt5 | SHR | .WordStack | b"" | .Map | 0 } ) ListItem ( { 32 | DUP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 33 | PUSH ( 4 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 38 | GT | .WordStack | b"" | .Map | 0 } ) ListItem ( { 39 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 42 | JUMPI | .WordStack | b"" | .Map | 0 } ) ListItem ( { 162 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 163 | DUP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 164 | PUSH ( 4 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 169 | GT | .WordStack | b"" | .Map | 0 } ) ListItem ( { 170 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 173 | JUMPI | .WordStack | b"" | .Map | 0 } ) ListItem ( { 174 | DUP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 175 | PUSH ( 4 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 180 | EQ | .WordStack | b"" | .Map | 0 } ) ListItem ( { 181 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 184 | JUMPI | .WordStack | b"" | .Map | 0 } ) ListItem ( { 185 | DUP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 186 | PUSH ( 4 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 191 | EQ | .WordStack | b"" | .Map | 0 } ) ListItem ( { 192 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 195 | JUMPI | .WordStack | b"" | .Map | 0 } ) ListItem ( { 196 | DUP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 197 | PUSH ( 4 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 202 | EQ | .WordStack | b"" | .Map | 0 } ) ListItem ( { 203 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 206 | JUMPI | .WordStack | b"" | .Map | 0 } ) ListItem ( { 207 | DUP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 208 | PUSH ( 4 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 213 | EQ | .WordStack | b"" | .Map | 0 } ) ListItem ( { 214 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 217 | JUMPI | .WordStack | b"" | .Map | 0 } ) ListItem ( { 400 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 401 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 404 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 407 | CALLDATASIZE | .WordStack | b"" | .Map | 0 } ) ListItem ( { 408 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 410 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 413 | JUMP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 3038 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 3039 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 3041 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 3043 | DUP ( 3 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 3044 | DUP ( 5 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 3045 | SUB | .WordStack | b"" | .Map | 0 } ) ListItem ( { 3046 | SLT | .WordStack | b"" | .Map | 0 } ) ListItem ( { 3047 | ISZERO | .WordStack | b"" | .Map | 0 } ) ListItem ( { 3048 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 3051 | JUMPI | .WordStack | b"" | .Map | 0 } ) ListItem ( { 3056 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 3057 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 3058 | CALLDATALOAD | .WordStack | b"" | .Map | 0 } ) ListItem ( { 3059 | SWAP ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 3060 | SWAP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 3061 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 3062 | JUMP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 414 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 415 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 418 | JUMP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1595 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1596 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1598 | MLOAD | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1599 | PUSH ( 4 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1604 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1606 | SHL | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1607 | DUP ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1608 | MSTORE | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1609 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1611 | DUP ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1612 | ADD | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1613 | DUP ( 3 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1614 | SWAP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1615 | MSTORE | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1616 | PUSH ( 20 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1637 | SWAP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1638 | PUSH ( 4 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1643 | SWAP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1644 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1646 | ADD | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1647 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1649 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1651 | MLOAD | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1652 | DUP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1653 | DUP ( 4 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1654 | SUB | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1655 | DUP ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1656 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1658 | DUP ( 8 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1659 | DUP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1660 | EXTCODESIZE | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1661 | ISZERO | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1662 | DUP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1663 | ISZERO | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1664 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1667 | JUMPI | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1672 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1673 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1674 | GAS | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1675 | CALL | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1676 | ISZERO | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1677 | DUP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1678 | ISZERO | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1679 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1682 | JUMPI | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1692 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1693 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1694 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1695 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1696 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1697 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1700 | TIMESTAMP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1701 | DUP ( 3 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1702 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 1705 | JUMP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2855 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2856 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2858 | MLOAD | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2859 | PUSH ( 4 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2864 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2866 | SHL | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2867 | DUP ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2868 | MSTORE | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2869 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2871 | DUP ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2872 | ADD | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2873 | DUP ( 4 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2874 | SWAP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2875 | MSTORE | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2876 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2878 | DUP ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2879 | ADD | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2880 | DUP ( 3 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2881 | SWAP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2882 | MSTORE | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2883 | PUSH ( 20 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2904 | SWAP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2905 | PUSH ( 4 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2910 | SWAP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2911 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2913 | ADD | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2914 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2915 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2917 | PUSH ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2919 | MLOAD | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2920 | DUP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2921 | DUP ( 4 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2922 | SUB | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2923 | DUP ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2924 | DUP ( 7 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2925 | DUP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2926 | EXTCODESIZE | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2927 | ISZERO | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2928 | DUP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2929 | ISZERO | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2930 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2933 | JUMPI | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2938 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2939 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2940 | GAS | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2941 | STATICCALL | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2942 | ISZERO | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2943 | DUP ( 1 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2944 | ISZERO | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2945 | PUSH ( 2 ) | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2948 | JUMPI | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2958 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2959 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2960 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2961 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2962 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2963 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2964 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 2965 | JUMP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 639 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 640 | POP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 641 | JUMP | .WordStack | b"" | .Map | 0 } ) ListItem ( { 291 | JUMPDEST | .WordStack | b"" | .Map | 0 } ) ListItem ( { 292 | STOP | .WordStack | b"" | .Map | 0 } ) )
             </traceData>
           </KEVMTracing>
         </foundry>
      requires ( 0 <=Int CALLER_ID:Int
       andBool ( 0 <=Int ORIGIN_ID:Int
       andBool ( 0 <=Int NUMBER_CELL:Int
       andBool ( 0 <=Int TIMESTAMP_CELL:Int
       andBool ( 0 <=Int VV0_time_114b9705:Int
       andBool ( CALLER_ID:Int =/=K 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=K 645326474426547203313410069153905908525362434349
       andBool ( CONTRACT_ID:Int =/=K 645326474426547203313410069153905908525362434349
       andBool ( CALLER_ID:Int <Int pow160
       andBool ( ORIGIN_ID:Int <Int pow160
       andBool ( NUMBER_CELL:Int <=Int maxSInt256
       andBool ( TIMESTAMP_CELL:Int <Int pow256
       andBool ( VV0_time_114b9705:Int <Int pow256
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
               )))))))))))))))
       ensures ( CALLER_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ORIGIN_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( CONTRACT_ID:Int =/=Int 645326474426547203313410069153905908525362434349
       andBool ( ( notBool ( 0 <Int CALLER_ID:Int andBool CALLER_ID:Int <=Int 9 ) )
       andBool ( ( notBool ( 0 <Int ORIGIN_ID:Int andBool ORIGIN_ID:Int <=Int 9 ) )
               )))))
      [priority(20), label(BASIC-BLOCK-1-TO-3)]

endmodule
0 Failure nodes. (0 pending and 0 failing)

Join the Runtime Verification Discord server for support: https://discord.com/invite/CurfmXNtbN

See `foundry_success` predicate for more information:
https://github.com/runtimeverification/kontrol/blob/master/src/kontrol/kdist/foundry.md#foundry-success-predicate

Access documentation for Kontrol at https://docs.runtimeverification.com/kontrol