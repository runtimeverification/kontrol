---
name: 'Bump Release'
on:
  push:
    branches:
      - 'master'
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  version-bump:
    name: 'Version Bump'
    runs-on: ubuntu-latest
    steps:
      - name: 'Check out code'
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.JENKINS_GITHUB_PAT }}
          # fetch-depth 0 means deep clone the repo
          fetch-depth: 0
      - name: 'Configure GitHub user'
        run: |
          git config user.name rv-jenkins
          git config user.email devops@runtimeverification.com
      - name: 'Update version'
        run: |
          git checkout -B release origin/release
          old_master="$(git merge-base origin/master origin/release)"
          new_master="$(git rev-parse origin/master)"
          
          if git diff --exit-code ${old_master} ${new_master} -- package/version; then
            og_version=$(git show origin/master:package/version)
            ./package/version.sh bump ${og_version}
          else
            git merge --no-edit --strategy-option=theirs origin/master
          fi
          ./package/version.sh sub
          new_version=$(cat package/version)
          sed --in-place "s/^VERSION: Final = '.*'$/VERSION: Final = '${new_version}'/" src/kontrol/__init__.py
          if git add --update && git commit --no-edit --allow-empty --message "Set Version: $(cat package/version)"; then
            git push origin release
            git tag "release-$(cat package/version)" origin/master
            git push origin "release-$(cat package/version)"
          fi
