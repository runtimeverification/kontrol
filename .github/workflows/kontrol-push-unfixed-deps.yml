---
name: 'Push Kontrol w/ Dependencies'
on:
  workflow_dispatch:
    inputs:
      kevm-version: 
        description: 'Branch/Tag to use for KEVM'
        required: false
        default: ''
      k-version: 
        description: 'Branch/Tag to use for K'
        required: false
        default: ''
      llvm-version: 
        description: 'Branch/Tag to use for LLVM Backend'
        required: false
        default: ''
      haskell-version: 
        description: 'Branch/Tag to use for Haskell Backend'
        required: false
        default: ''

jobs:
  build-kontrol:
    runs-on: [self-hosted, normal]
    steps:
      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Build Kontrol'
        shell: bash
        run: |
          set -o pipefail
          docker run --rm -it --detach --name kontrol-build-with-kup-${{ github.run_id }} ghcr.io/runtimeverification/kup:latest
          if [ ! -n "${{ inputs.kevm-version }}" ]; then
              KEVM_TAG=$(curl -s https://raw.githubusercontent.com/runtimeverification/kontrol/master/deps/kevm_release)
              KEVM_HASH=$(git ls-remote https://github.com/runtimeverification/evm-semantics.git refs/tags/v${KEVM_TAG} | awk '{print $1}')
              KEVM_OVERRIDE="--override kevm ${KEVM_HASH}"
          else
              KEVM_OVERRIDE="--override kevm ${{ inputs.kevm-version }}"
          fi
          if [ ! -n "${{ inputs.k-version }}" ]; then
              K_TAG=$(curl -s https://raw.githubusercontent.com/runtimeverification/kontrol/master/deps/k_release)
              K_HASH=$(git ls-remote https://github.com/runtimeverification/k.git refs/tags/v${K_TAG} | awk '{print $1}')
              K_OVERRIDE="--override kevm/k-framework ${K_HASH}"
          else
              K_OVERRIDE="--override kevm/k-framework ${{ inputs.k-version }}"
          fi
          if [ ! -n "${{ inputs.llvm-version }}" ]; then
              K_VERSION=$(curl -s https://raw.githubusercontent.com/runtimeverification/kontrol/master/deps/k_release)
              LLVM_TAG=$(curl -s https://raw.githubusercontent.com/runtimeverification/k/v${K_VERSION}/deps/llvm-backend_release)
              LLVM_HASH=$(git ls-remote https://github.com/runtimeverification/llvm-backend.git refs/tags/v${LLVM_TAG} | awk '{print $1}')
              LLVM_OVERRIDE="--override kevm/k-framework/llvm-backend ${LLVM_HASH}"
          else
              LLVM_OVERRIDE="--override kevm/k-framework/llvm-backend ${{ inputs.llvm-version }}"
          fi
          if [ ! -n "${{ inputs.haskell-version }}" ]; then
              K_VERSION=$(curl -s https://raw.githubusercontent.com/runtimeverification/kontrol/master/deps/k_release)
              HASKELL_TAG=$(curl -s https://raw.githubusercontent.com/runtimeverification/k/v${K_VERSION}/deps/haskell-backend_release)
              HASKELL_HASH=$(git ls-remote https://github.com/runtimeverification/haskell-backend.git refs/tags/${HASKELL_TAG} | awk '{print $1}')
              HASKELL_OVERRIDE="--override kevm/k-framework/haskell-backend ${HASKELL_HASH}"
          else
              HASKELL_OVERRIDE="--override kevm/k-framework/haskell-backend ${{ inputs.haskell-version }}"
          fi
          echo ""
          echo "Building with: "
          echo "KEVM_OVERRIDE: ${KEVM_OVERRIDE}"
          echo "K_OVERRIDE: ${K_OVERRIDE}"
          echo "LLVM_OVERRIDE: ${LLVM_OVERRIDE}"
          echo "HASKELL_OVERRIDE: ${HASKELL_OVERRIDE}"
          echo ""
          docker exec kontrol-build-with-kup-${{ github.run_id }} /bin/bash -c "kup install kontrol ${KEVM_OVERRIDE} ${K_OVERRIDE} ${LLVM_OVERRIDE} ${HASKELL_OVERRIDE}"
          docker commit kontrol-build-with-kup-${{ github.run_id }} ghcr.io/runtimeverification/kontrol-custom:${{ github.run_id }}
          docker push ghcr.io/runtimeverification/kontrol-custom:${{ github.run_id }}
      - name: 'Publish Image Name to Workflow Summary'
        run: |
          echo "Image Name: ghcr.io/runtimeverification/kontrol-custom:${{ github.run_id }}" >> $GITHUB_STEP_SUMMARY
      - name: 'Tear down Docker'
        if: always()
        run: |
          docker stop --time=0 kontrol-build-with-kup-${{ github.run_id }}
