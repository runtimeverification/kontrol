<testsuites tests="3" failures="1" errors="0" time="97.22120356559753" timestamp="2024-03-28 14:24:18.063058">
	<testsuite name="AssertTest" tests="2" failures="1" errors="0" time="78.34088492393494" timestamp="2024-03-28 14:24:18.078302">
		<properties>
			<property name="Kontrol version" value="0.1.230" />
		</properties>
		<testcase name="test_assert_true()" classname="AssertTest" time="44.1108295917511" file="test/Simple.t.sol" />
		<testcase name="test_assert_false()" classname="AssertTest" time="34.23005533218384" file="test/Simple.t.sol">
			<failure message="1 Failure nodes. (0 pending and 1 failing)">
Failing nodes:

  Node id: 6
  Failure reason:
    Matching failed.
    The remaining implication is:
    { true #Equals 0 &lt;=Int CALLER_ID:Int }
    #And { true #Equals 0 &lt;=Int ORIGIN_ID:Int }
    #And { true #Equals 0 &lt;=Int NUMBER_CELL:Int }
    #And { true #Equals 0 &lt;=Int TIMESTAMP_CELL:Int }
    #And #Not ( { CALLER_ID:Int #Equals 645326474426547203313410069153905908525362434349 } )
    #And #Not ( { ORIGIN_ID:Int #Equals 645326474426547203313410069153905908525362434349 } )
    #And #Not ( { CONTRACT_ID:Int #Equals 645326474426547203313410069153905908525362434349 } )
    #And { true #Equals CALLER_ID:Int &lt;Int pow160 }
    #And { true #Equals ORIGIN_ID:Int &lt;Int pow160 }
    #And { true #Equals NUMBER_CELL:Int &lt;=Int maxSInt256 }
    #And { true #Equals TIMESTAMP_CELL:Int &lt;Int pow256 }
    #And { false #Equals #range ( 0 &lt; CALLER_ID:Int &lt;= 9 ) }
    #And { false #Equals #range ( 0 &lt; ORIGIN_ID:Int &lt;= 9 ) } #Implies { true #Equals foundry_success ( ... statusCode: EVMC_REVERT , failed: #lookup ( .Map , 46308022326495007027972728677917914892729792999299745830475596687180801507328 ) , revertExpected: false , opcodeExpected: false , recordEventExpected: false , eventExpected: false ) }
  Path condition:
    #Top
  Model:
    CALLER_ID = 10
    CONTRACT_ID = 2
    NUMBER_CELL = 0
    ORIGIN_ID = 10
    TIMESTAMP_CELL = 0
</failure>
		</testcase>
	</testsuite>
	<testsuite name="AssertNestedTest" tests="1" failures="0" errors="0" time="18.880318641662598" timestamp="2024-03-28 14:24:18.078545">
		<properties>
			<property name="Kontrol version" value="0.1.230" />
		</properties>
		<testcase name="test_assert_true_nested()" classname="AssertNestedTest" time="18.880318641662598" file="test/nested/SimpleNested.t.sol" />
	</testsuite>
</testsuites>